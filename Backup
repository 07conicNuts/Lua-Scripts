--[[

The crack method used here can be applied to any VM-obfuscated script.
1. Serialize the VM stack while logging in with valid details.
2. Replay the stack wherever required.
3. Enjoy.
! You will need to spoof the stack in multiple closures unless you want to mess around with correctly serializing/loading upvalues.

This script had Luraph 'VM encryption' enabled, all this feature does is loadstring the actual script's VM after decrypting the string.
Solution: Hook loadstring and load your own copy of the VM with any required ophooks/stack memes.

This crack method requires a bit of knowledge around how VM obfuscation works, but is very powerful if you can figure it out.


---------


The exact steps for this particular script were as follows:
1. hookfunc syn.request (or HttpGet if the script uses that for whitelist endpoints) and print out debug.traceback()
     -> This will give you a line number where the VM sends a request to the whitelist request endpoint.
     	The line will look something like "(qN)[CN] = qN[CN]();"
2. print CN to figure out what register to do the stack serialization for (i.e. it was 80 in my case)
3. if CN == 80 then {serialize stack} {write saved stack}
     -> I do this before and after the function call to be safe, but spoofing after isn't necessary if you hookfunc syn.request and spoof that return to be the correct response.
4. Repeat for all syn.request calls.
	 ! If there are multiple syn.request calls that refer to the same CN register, use a counter or bool to differentiate the calls.

5. Note that in this case, the script is structured along the lines of:
{ stuff }

function WhitelistFunc(params?)
	syn.request("aaaa");
end;

WhitelistFunc(params?);

{ stuff }
	 -> For this reason, I checked further up in the callstack to not only spoof WhitelistFuncs stack, but the main closure stack as well.
	 	Essentially, when printing the debug.traceback() in step 1, just keep checking the callstack line numbers until you reach the vm entrypoint.


Are there easier ways to crack a script? Definitely. Are they as cool? No.

]]

local function fTable(Tab, Indent)
    if (not Indent) then
        Indent = 5;
    end;

    local Str = '{\n';
    for Idx, Val in next, Tab do
        Str = Str .. (' '):rep(Indent) .. (type(Idx) == 'number' and ('[' .. tostring(Idx) .. ']') or ('["' .. tostring(Idx) .. '"]')) .. ' = '
        if type(Val) == 'table' then
            Str = Str .. fTable(Val, Indent + 5);
        elseif type(Val) == 'Instance' then
            Str = Str .. Val:GetFullName();
        elseif type(Val) == 'string' then
        	local Ascii = '';

        	for Char in Val:gmatch('.') do
        		local Byte = Char:byte();

        		if (Byte >= 32 and Byte <= 126) and (Byte < 48 and Byte > 57) then
        			Ascii = Ascii .. (Byte == 34 and '\\' or '') .. Char;
        		else
        			Ascii = Ascii .. '\\' .. Char:byte();
        		end;
        	end;

            Str = Str .. '"' .. Ascii .. '"';
        else
            Str = Str .. tostring(Val);
        end;
        Str = Str .. ';\n';
    end;

    return Str .. (' '):rep(Indent - 5) .. '}';
end

getgenv().fTable = fTable;
getgenv().Counter = 1;

local Count = 1;

local oHttpGet;
oHttpGet = hookfunc(game.HttpGet, newcclosure(function(self, Url, ...)
	if Url:lower():find('heartbeat') then
		return 'OK';
	end;

	if Count == 1 then
		-- Url = 'https://pastebin.com/raw/rYm7jJpJ';
		Count = 2;

		return [[
			if game.PlaceId == 2809202155 then -- Checking this so it skip sbr Check
			local metatable = getrawmetatable(game)
			local newindex = metatable.__newindex
			setreadonly(metatable, false)
			_G.Items = {}
			metatable.__newindex = newcclosure(function(t, i, v)
			    if t == game:GetService("ReplicatedStorage").ItemSpawn and i == "OnClientInvoke" then
			        old = v
			        v = function(...)
			            local args = {...}
			            table.insert(_G.Items, {
			                Replica = args[2]["Replica"],
			                CFrame = args[2]["CFrame"],
			                CD = args[2]["CD"]
			            })
			            return old(...)
			        end
			    end
			    return newindex(t, i, v)
			end)
			 pcall(function()
			getscriptclosure(game:GetService("ReplicatedFirst"):WaitForChild("ItemSpawn"))()
			end)
			end
]];
	elseif Count == 2 then
		-- Url = 'https://pastebin.com/raw/04Cm1aMG';
		Count = 3;

		return [==[
			local d=string.byte;local r=string.char;local c=string.sub;local u=table.concat;local s=math.ldexp;local h=getfenv or function()return _ENV end;local l=setmetatable;local f=select;local l=unpack;local i=tonumber;local function A(d)local e,o,n="","",{}local t=256;local a={}for l=0,t-1 do a[l]=r(l)end;local l=1;local function f()local e=i(c(d,l,l),36)l=l+1;local o=i(c(d,l,l+e-1),36)l=l+e;return o end;e=r(f())n[1]=e;while l<#d do local l=f()if a[l]then o=a[l]else o=e..c(e,1,1)end;a[t]=e..c(o,1,1)n[#n+1],e,t=o,o,t+1 end;return table.concat(n)end;local t=A('2102182102762111Z27621021V21T22827C22222A2111X27A22922F21X27C21227A1C25T1J25722T27P27622R22P21E24527V27A23O22524824Y28221024K23K23522J26W28822S24A22X1025D28821024026T22K24D22T21427A25C21825W26323A27521025D2181421023928Z25H1K27623829821025K21O28W23721O27625O1429F29321025S1C29F1C27625W1K29F29B2601S29F1S27626422S29F22S27629721G21023B29B25D21G2A82362A829028Z23428Z27A210');local n=bit and bit.bxor or function(l,e)local o,n=1,0 while l>0 and e>0 do local a,c=l%2,e%2 if a~=c then n=n+o end l,e,o=(l-a)/2,(e-c)/2,o*2 end if l<e then l=e end while l>0 do local e=l%2 if e>0 then n=n+o end l,o=(l-e)/2,o*2 end return n end local function e(e,l,o)if o then local l=(e/2^(l-1))%2^((o-1)-(l-1)+1);return l-l%1;else local l=2^(l-1);return(e%(l+l)>=l)and 1 or 0;end;end;local l=1;local function o()local c,a,o,e=d(t,l,l+3);c=n(c,36)a=n(a,36)o=n(o,36)e=n(e,36)l=l+4;return(e*16777216)+(o*65536)+(a*256)+c;end;local function a()local e=n(d(t,l,l),36);l=l+1;return e;end;local function A()local n=o();local l=o();local c=1;local n=(e(l,1,20)*(2^32))+n;local o=e(l,21,31);local l=((-1)^e(l,32));if(o==0)then if(n==0)then return l*0;else o=1;c=0;end;elseif(o==2047)then return(n==0)and(l*(1/0))or(l*(0/0));end;return s(l,o-1023)*(c+(n/(2^52)));end;local i=o;local function s(e)local o;if(not e)then e=i();if(e==0)then return'';end;end;o=c(t,l,l+e-1);l=l+e;local e={}for l=1,#o do e[l]=r(n(d(c(o,l,l)),36))end return u(e);end;local l=o;local function u(...)return{...},f('#',...)end local function r()local d={0,0,0,0,0,0,0,0,0,0,0,0};local i={};local l={};local t={d,nil,i,nil,l};t[4]=a();local l=o()local c={0,0,0,0,0,0,0,0};for o=1,l do local e=a();local l;if(e==3)then l=(a()~=0);elseif(e==2)then l=A();elseif(e==1)then l=s();end;c[o]=l;end;t[2]=c for a=1,o()do local c=n(o(),229);local o=n(o(),82);local n=e(c,1,2);local l=e(o,1,11);local l={l,e(c,3,11),nil,nil,o};if(n==0)then l[3]=e(c,12,20);l[5]=e(c,21,29);elseif(n==1)then l[3]=e(o,12,33);elseif(n==2)then l[3]=e(o,12,32)-1048575;elseif(n==3)then l[3]=e(o,12,32)-1048575;l[5]=e(c,21,29);end;d[a]=l;end;for l=1,o()do i[l-1]=r();end;return t;end;local function s(l,e,h)local o=l[1];local n=l[2];local e=l[3];local l=l[4];return function(...)local d=o;local c=n;local e=e;local o=l;local l=u local n=1;local r=-1;local i={};local t={...};local a=f('#',...)-1;local l={};local e={};for l=0,a do if(l>=o)then i[l-o]=t[l+1];else e[l]=t[l+1];end;end;local l=a-o+1 local l;local o;while true do l=d[n];o=l[1];if o<=2 then if o<=0 then e[l[2]]=h[c[l[3]]];elseif o>1 then e[l[2]]={unpack({},1,l[3])};else local o=l[2];local n=e[o];local l=l[3];for l=1,l do n[l]=e[o+l]end;end;elseif o<=4 then if o==3 then local o=l[2];local c,n={e[o]()};local n=o+l[5]-2;local l=0;for o=o,n do l=l+1;e[o]=c[l];end;r=n;else e[l[2]][c[l[3]]]=e[l[5]];end;elseif o>5 then do return end;else e[l[2]]=c[l[3]];end;n=n+1;end;end;end;return s(r(),{},h())();
]==];
	elseif Count == 3 then
		-- Url = 'https://pastebin.com/raw/URcprJiZ';
		Count = 4;

		return [[
local metatable = getrawmetatable(game)
local namecall = metatable.__namecall 
setreadonly(metatable,false)
metatable.__namecall = newcclosure(function(self,...)
    local args = {...} 
    local method = getnamecallmethod()
    if method == "InvokeServer" then 
        if args[1] == "idklolbrah2de" then
            return "  ___XP DE KEY"
        elseif  args[1] == "SigL" or method:lower() == "kick"  then
            return wait(9e9)
          end 
      end 
     return namecall(self,...)
end ) 

local metatable = getrawmetatable(game)
local index = metatable.__index
setreadonly(metatable, false)
metatable.__index = newcclosure(function(t, k)
    if t == "Humanoid" and k == "WalkSpeed" then
        return 16
    elseif t == "Humanoid" and k == "JumpPower" then
        return 50
    end
    return index(t, k)
end)
]]
	elseif Count == 4 then
		-- Url = 'https://pastebin.com/raw/jpQaKyem';

		return [[
local Flux = {RainbowColorValue = 0, HueSelectionPosition = 0}
local PresetColor = Color3.fromRGB(66, 134, 255)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CloseBind = Enum.KeyCode.RightControl

local FluxLib = Instance.new("ScreenGui")
FluxLib.Name = "FluxLib"
FluxLib.Parent = game.CoreGui
FluxLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

coroutine.wrap(
	function()
		while wait() do
			Flux.RainbowColorValue = Flux.RainbowColorValue + 1 / 255
			Flux.HueSelectionPosition = Flux.HueSelectionPosition + 1

			if Flux.RainbowColorValue >= 1 then
				Flux.RainbowColorValue = 0
			end

			if Flux.HueSelectionPosition == 80 then
				Flux.HueSelectionPosition = 0
			end
		end
	end
)()

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
					input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end



function Flux:Window(text, bottom,mainclr,toclose)
	CloseBind = toclose or Enum.KeyCode.RightControl
	PresetColor = mainclr or Color3.fromRGB(66, 134, 255)
	local fs = false
	local MainFrame = Instance.new("Frame")
	local MainCorner = Instance.new("UICorner")
	local LeftFrame = Instance.new("Frame")
	local LeftCorner = Instance.new("UICorner")
	local GlowTabHolder = Instance.new("ImageLabel")
	local Title = Instance.new("TextLabel")
	local BottomText = Instance.new("TextLabel")
	local TabHold = Instance.new("Frame")
	local TabLayout = Instance.new("UIListLayout")
	local Drag = Instance.new("Frame")
	local ContainerFolder = Instance.new("Folder")

	MainFrame.Name = "MainFrame"
	MainFrame.Parent = FluxLib
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BackgroundColor3 = Color3.fromRGB(50, 53, 59)
	MainFrame.ClipsDescendants = true
	MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	MainFrame.Size = UDim2.new(0, 0, 0, 0)

	MainCorner.CornerRadius = UDim.new(0, 5)
	MainCorner.Name = "MainCorner"
	MainCorner.Parent = MainFrame

	LeftFrame.Name = "LeftFrame"
	LeftFrame.Parent = MainFrame
	LeftFrame.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
	LeftFrame.Size = UDim2.new(0, 205, 0, 484)

	LeftCorner.CornerRadius = UDim.new(0, 5)
	LeftCorner.Name = "LeftCorner"
	LeftCorner.Parent = LeftFrame

	GlowTabHolder.Name = "GlowTabHolder"
	GlowTabHolder.Parent = LeftFrame
	GlowTabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	GlowTabHolder.BackgroundTransparency = 1.000
	GlowTabHolder.BorderSizePixel = 0
	GlowTabHolder.Position = UDim2.new(0, -15, 0, -15)
	GlowTabHolder.Size = UDim2.new(1, 30, 1, 30)
	GlowTabHolder.ZIndex = 0
	GlowTabHolder.Image = "rbxassetid://4996891970"
	GlowTabHolder.ImageColor3 = Color3.fromRGB(15, 15, 15)
	GlowTabHolder.ScaleType = Enum.ScaleType.Slice
	GlowTabHolder.SliceCenter = Rect.new(20, 20, 280, 280)

	Title.Name = "Title"
	Title.Parent = LeftFrame
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.097560972, 0, 0.0475206636, 0)
	Title.Size = UDim2.new(0, 111, 0, 34)
	Title.Font = Enum.Font.GothamBold
	Title.Text = text
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 25.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	BottomText.Name = "BottomText"
	BottomText.Parent = LeftFrame
	BottomText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	BottomText.BackgroundTransparency = 1.000
	BottomText.Position = UDim2.new(0.097560972, 0, 0.0889999792, 0)
	BottomText.Size = UDim2.new(0, 113, 0, 28)
	BottomText.Font = Enum.Font.Gotham
	BottomText.Text = bottom
	BottomText.TextColor3 = Color3.fromRGB(255, 255, 255)
	BottomText.TextSize = 14.000
	BottomText.TextTransparency = 0.300
	BottomText.TextXAlignment = Enum.TextXAlignment.Left

	TabHold.Name = "TabHold"
	TabHold.Parent = LeftFrame
	TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHold.BackgroundTransparency = 1.000
	TabHold.Position = UDim2.new(0, 0, 0.167355374, 0)
	TabHold.Size = UDim2.new(0, 205, 0, 403)

	TabLayout.Name = "TabLayout"
	TabLayout.Parent = TabHold
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabLayout.Padding = UDim.new(0, 3)

	Drag.Name = "Drag"
	Drag.Parent = MainFrame
	Drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Drag.BackgroundTransparency = 1.000
	Drag.Position = UDim2.new(0.290368259, 0, 0, 0)
	Drag.Size = UDim2.new(0, 501, 0, 23)

	ContainerFolder.Name = "ContainerFolder"
	ContainerFolder.Parent = MainFrame
	
	MakeDraggable(Drag,MainFrame)
	MakeDraggable(LeftFrame,MainFrame)
	MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
	
	local uitoggled = false
	UserInputService.InputBegan:Connect(
		function(io, p)
			if io.KeyCode == CloseBind then
				if uitoggled == false then
					MainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					uitoggled = true
					wait(.5)
					FluxLib.Enabled = false
				else
					MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					FluxLib.Enabled = true
					uitoggled = false
				end
			end
		end
	)
	
	function Flux:Notification(desc,buttontitle)
		for i, v in next, MainFrame:GetChildren() do
			if v.Name == "NotificationBase" then
				v:Destroy()
			end
		end
		local NotificationBase = Instance.new("TextButton")
		local NotificationBaseCorner = Instance.new("UICorner")
		local NotificationFrame = Instance.new("Frame")
		local NotificationFrameCorner = Instance.new("UICorner")
		local NotificationFrameGlow = Instance.new("ImageLabel")
		local NotificationTitle = Instance.new("TextLabel")
		local CloseBtn = Instance.new("TextButton")
		local CloseBtnCorner = Instance.new("UICorner")
		local NotificationDesc = Instance.new("TextLabel")

		NotificationBase.Name = "NotificationBase"
		NotificationBase.Parent = MainFrame
		NotificationBase.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		NotificationBase.BackgroundTransparency = 1
		NotificationBase.Size = UDim2.new(0, 706, 0, 484)
		NotificationBase.AutoButtonColor = false
		NotificationBase.Font = Enum.Font.SourceSans
		NotificationBase.Text = ""
		NotificationBase.TextColor3 = Color3.fromRGB(0, 0, 0)
		NotificationBase.TextSize = 14.000
		NotificationBase.Visible = true

		NotificationBaseCorner.CornerRadius = UDim.new(0, 5)
		NotificationBaseCorner.Name = "NotificationBaseCorner"
		NotificationBaseCorner.Parent = NotificationBase

		NotificationFrame.Name = "NotificationFrame"
		NotificationFrame.Parent = NotificationBase
		NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		NotificationFrame.BackgroundColor3 = Color3.fromRGB(50, 53, 59)
		NotificationFrame.ClipsDescendants = true
		NotificationFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
		NotificationFrame.Size = UDim2.new(0, 0, 0, 0)

		NotificationFrameCorner.CornerRadius = UDim.new(0, 5)
		NotificationFrameCorner.Name = "NotificationFrameCorner"
		NotificationFrameCorner.Parent = NotificationFrame

		NotificationFrameGlow.Name = "NotificationFrameGlow"
		NotificationFrameGlow.Parent = NotificationFrame
		NotificationFrameGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationFrameGlow.BackgroundTransparency = 1.000
		NotificationFrameGlow.BorderSizePixel = 0
		NotificationFrameGlow.Position = UDim2.new(0, -15, 0, -15)
		NotificationFrameGlow.Size = UDim2.new(1, 30, 1, 30)
		NotificationFrameGlow.ZIndex = 0
		NotificationFrameGlow.Image = "rbxassetid://4996891970"
		NotificationFrameGlow.ImageColor3 = Color3.fromRGB(15, 15, 15)
		NotificationFrameGlow.ScaleType = Enum.ScaleType.Slice
		NotificationFrameGlow.SliceCenter = Rect.new(20, 20, 280, 280)

		NotificationTitle.Name = "NotificationTitle"
		NotificationTitle.Parent = NotificationFrame
		NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationTitle.BackgroundTransparency = 1.000
		NotificationTitle.Position = UDim2.new(0.0400609747, 0, 0.0761325806, 0)
		NotificationTitle.Size = UDim2.new(0, 111, 0, 34)
		NotificationTitle.Font = Enum.Font.GothamBold
		NotificationTitle.Text = Title.Text .. " | NOTIFICATION"
		NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		NotificationTitle.TextSize = 24.000
		NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left
		NotificationTitle.TextTransparency = 1

		CloseBtn.Name = "CloseBtn"
		CloseBtn.Parent = NotificationFrame
		CloseBtn.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
		CloseBtn.ClipsDescendants = true
		CloseBtn.Position = UDim2.new(0.0403124988, 0, 0.720855951, 0)
		CloseBtn.Size = UDim2.new(0, 366, 0, 43)
		CloseBtn.AutoButtonColor = false
		CloseBtn.Font = Enum.Font.Gotham
		CloseBtn.Text = buttontitle
		CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		CloseBtn.TextSize = 15.000
		CloseBtn.TextTransparency = 1
		CloseBtn.BackgroundTransparency = 1

		CloseBtnCorner.CornerRadius = UDim.new(0, 4)
		CloseBtnCorner.Name = "CloseBtnCorner"
		CloseBtnCorner.Parent = CloseBtn

		NotificationDesc.Name = "NotificationDesc"
		NotificationDesc.Parent = NotificationFrame
		NotificationDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationDesc.BackgroundTransparency = 1.000
		NotificationDesc.Position = UDim2.new(0.112499997, 0, 0.266355127, 0)
		NotificationDesc.Size = UDim2.new(0, 309, 0, 82)
		NotificationDesc.Font = Enum.Font.Gotham
		NotificationDesc.Text = desc
		NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
		NotificationDesc.TextSize = 15.000
		NotificationDesc.TextWrapped = true
		NotificationDesc.TextTransparency = 1
		
		CloseBtn.MouseEnter:Connect(function()
			TweenService:Create(
				CloseBtn,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextTransparency = 0}
			):Play()
		end)

		CloseBtn.MouseLeave:Connect(function()
			TweenService:Create(
				CloseBtn,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextTransparency = 0.3}
			):Play()
		end)
		
		CloseBtn.MouseButton1Click:Connect(function()
			
			TweenService:Create(
				NotificationDesc,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextTransparency = 1}
			):Play()
			TweenService:Create(
				CloseBtn,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextTransparency = 1}
			):Play()
			TweenService:Create(
				NotificationTitle,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextTransparency = 1}
			):Play()
			TweenService:Create(
				CloseBtn,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundTransparency = 1}
			):Play()
			
			wait(.4)
			CloseBtn.Visible = false
			NotificationFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

			wait(.2)
			
			TweenService:Create(
				NotificationBase,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundTransparency = 1}
			):Play()
			
			wait(.2)
			
			NotificationBase.Visible = false
		end)

		
		TweenService:Create(
			NotificationBase,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{BackgroundTransparency = 0.550}
		):Play()
		
		wait(.1)
		
		NotificationFrame:TweenSize(UDim2.new(0, 400, 0, 214), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
		
		wait(.4)
		TweenService:Create(
			NotificationDesc,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{TextTransparency = .3}
		):Play()
		TweenService:Create(
			CloseBtn,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{TextTransparency = .3}
		):Play()
		TweenService:Create(
			NotificationTitle,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{TextTransparency = 0}
		):Play()
		TweenService:Create(
			CloseBtn,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{BackgroundTransparency = 0}
		):Play()
	end
	local Tabs = {}
	function Tabs:Tab(text,ico)
		local Tab = Instance.new("TextButton")
		local TabIcon = Instance.new("ImageLabel")
		local TabTitle = Instance.new("TextLabel")

		Tab.Name = "Tab"
		Tab.Parent = TabHold
		Tab.BackgroundColor3 = PresetColor
		Tab.BorderSizePixel = 0
		Tab.Size = UDim2.new(0, 205, 0, 40)
		Tab.AutoButtonColor = false
		Tab.Font = Enum.Font.SourceSans
		Tab.Text = ""
		Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
		Tab.TextSize = 14.000
		Tab.BackgroundTransparency = 1

		TabIcon.Name = "TabIcon"
		TabIcon.Parent = Tab
		TabIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabIcon.BackgroundTransparency = 1.000
		TabIcon.Position = UDim2.new(0.0634146333, 0, 0.25, 0)
		TabIcon.Size = UDim2.new(0, 20, 0, 20)
		TabIcon.Image = ico
		TabIcon.ImageTransparency = .3

		TabTitle.Name = "TabTitle"
		TabTitle.Parent = Tab
		TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.BackgroundTransparency = 1.000
		TabTitle.Position = UDim2.new(0.1902439, 0, 0.25, 0)
		TabTitle.Size = UDim2.new(0, 113, 0, 19)
		TabTitle.Font = Enum.Font.Gotham
		TabTitle.Text = text
		TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.TextSize = 15.000
		TabTitle.TextXAlignment = Enum.TextXAlignment.Left
		TabTitle.TextTransparency = .3
		
		local Container = Instance.new("ScrollingFrame")
		local ContainerLayout = Instance.new("UIListLayout")


		Container.Name = "Container"
		Container.Parent = ContainerFolder
		Container.Active = true
		Container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Container.BackgroundTransparency = 1.000
		Container.BorderSizePixel = 0
		Container.Position = UDim2.new(0.321529746, 0, 0.0475206599, 0)
		Container.Size = UDim2.new(0, 470, 0, 438)
		Container.CanvasSize = UDim2.new(0, 0, 0, 0)
		Container.ScrollBarThickness = 5
		Container.Visible = false
		Container.ScrollBarImageColor3 = Color3.fromRGB(71, 76, 84)

		ContainerLayout.Name = "ContainerLayout"
		ContainerLayout.Parent = Container
		ContainerLayout.SortOrder = Enum.SortOrder.LayoutOrder
		ContainerLayout.Padding = UDim.new(0, 15)
		
		if fs == false then
			fs = true
			TabTitle.TextTransparency = 0
			TabIcon.ImageTransparency = 0
			Tab.BackgroundTransparency = 0
			Container.Visible = true
		end
		
		Tab.MouseButton1Click:Connect(function()
			for i, v in next, ContainerFolder:GetChildren() do
				if v.Name == "Container" then
					v.Visible = false
				end
				Container.Visible = true
			end
			for i, v in next, TabHold:GetChildren() do
				if v.Name == "Tab" then
					TweenService:Create(
						v,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						v.TabIcon,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						v.TabTitle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = .3}
					):Play()
					TweenService:Create(
						Tab,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						TabIcon,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						TabTitle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
				end
			end
		end)
		local ContainerContent = {}
		function ContainerContent:Button(text, desc, callback)
			if desc == "" then
				desc = "There is no description for this button."
			end
			local BtnDescToggled = false
			local Button = Instance.new("TextButton")
			local ButtonCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local Description = Instance.new("TextLabel")
			local ArrowBtn = Instance.new("ImageButton")
			local ArrowIco = Instance.new("ImageLabel")

			Button.Name = "Button"
			Button.Parent = Container
			Button.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Button.ClipsDescendants = true
			Button.Position = UDim2.new(0.370312512, 0, 0.552631557, 0)
			Button.Size = UDim2.new(0, 457, 0, 43)
			Button.AutoButtonColor = false
			Button.Font = Enum.Font.SourceSans
			Button.Text = ""
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 14.000

			ButtonCorner.CornerRadius = UDim.new(0, 4)
			ButtonCorner.Name = "ButtonCorner"
			ButtonCorner.Parent = Button

			Title.Name = "Title"
			Title.Parent = Button
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			Description.Name = "Description"
			Description.Parent = Title
			Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Description.BackgroundTransparency = 1.000
			Description.Position = UDim2.new(-0.200942323, 0, 0.785714269, 0)
			Description.Size = UDim2.new(0, 432, 0, 31)
			Description.Font = Enum.Font.Gotham
			Description.Text = desc
			Description.TextColor3 = Color3.fromRGB(255, 255, 255)
			Description.TextSize = 15.000
			Description.TextTransparency = 1
			Description.TextWrapped = true
			Description.TextXAlignment = Enum.TextXAlignment.Left

			ArrowBtn.Name = "ArrowBtn"
			ArrowBtn.Parent = Button
			ArrowBtn.BackgroundColor3 = Color3.fromRGB(86, 86, 86)
			ArrowBtn.BackgroundTransparency = 1.000
			ArrowBtn.Position = UDim2.new(0.903719902, 0, 0, 0)
			ArrowBtn.Size = UDim2.new(0, 33, 0, 37)
			ArrowBtn.SliceCenter = Rect.new(30, 30, 30, 30)
			ArrowBtn.SliceScale = 7.000

			ArrowIco.Name = "ArrowIco"
			ArrowIco.Parent = ArrowBtn
			ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
			ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ArrowIco.BackgroundTransparency = 1.000
			ArrowIco.Position = UDim2.new(0.495753437, 0, 0.554054081, 0)
			ArrowIco.Selectable = true
			ArrowIco.Size = UDim2.new(0, 28, 0, 24)
			ArrowIco.Image = "http://www.roblox.com/asset/?id=6034818372"
			ArrowIco.ImageTransparency = .3
			
			Button.MouseEnter:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
			end)
			
			Button.MouseLeave:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.3}
				):Play()
			end)
			
			Button.MouseButton1Click:Connect(function()
				pcall(callback)
			end)
			
			ArrowBtn.MouseButton1Click:Connect(function()
				if BtnDescToggled == false then
					Button:TweenSize(UDim2.new(0, 457, 0, 74), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 180}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					Button:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 1}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
				BtnDescToggled = not BtnDescToggled
			end)
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		function ContainerContent:Toggle(text, desc,default, callback)
			local ToggleDescToggled = false
			local Toggled = false
			if desc == "" then
				desc = "There is no description for this toggle."
			end
			local Toggle = Instance.new("TextButton")
			local ToggleCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local ToggleFrame = Instance.new("Frame")
			local ToggleFrameCorner = Instance.new("UICorner")
			local ToggleCircle = Instance.new("Frame")
			local ToggleCircleCorner = Instance.new("UICorner")
			local Description = Instance.new("TextLabel")
			local ArrowBtn = Instance.new("ImageButton")
			local ArrowIco = Instance.new("ImageLabel")

			Toggle.Name = "Toggle"
			Toggle.Parent = Container
			Toggle.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Toggle.ClipsDescendants = true
			Toggle.Position = UDim2.new(0.110937506, 0, 0.67653507, 0)
			Toggle.Size = UDim2.new(0, 457, 0, 43)
			Toggle.AutoButtonColor = false
			Toggle.Font = Enum.Font.SourceSans
			Toggle.Text = ""
			Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			Toggle.TextSize = 14.000

			ToggleCorner.CornerRadius = UDim.new(0, 4)
			ToggleCorner.Name = "ToggleCorner"
			ToggleCorner.Parent = Toggle

			Title.Name = "Title"
			Title.Parent = Toggle
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			ToggleFrame.Name = "ToggleFrame"
			ToggleFrame.Parent = Circle
			ToggleFrame.BackgroundColor3 = Color3.fromRGB(226, 227, 227)
			ToggleFrame.Position = UDim2.new(33.0856934, 0, 0, 0)
			ToggleFrame.Size = UDim2.new(0, 27, 0, 11)

			ToggleFrameCorner.Name = "ToggleFrameCorner"
			ToggleFrameCorner.Parent = ToggleFrame

			ToggleCircle.Name = "ToggleCircle"
			ToggleCircle.Parent = ToggleFrame
			ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleCircle.Position = UDim2.new(0, 0, -0.272727281, 0)
			ToggleCircle.Selectable = true
			ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

			ToggleCircleCorner.CornerRadius = UDim.new(2, 8)
			ToggleCircleCorner.Name = "ToggleCircleCorner"
			ToggleCircleCorner.Parent = ToggleCircle

			Description.Name = "Description"
			Description.Parent = Title
			Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Description.BackgroundTransparency = 1.000
			Description.Position = UDim2.new(-0.200942323, 0, 0.785714269, 0)
			Description.Size = UDim2.new(0, 432, 0, 31)
			Description.Font = Enum.Font.Gotham
			Description.Text = desc
			Description.TextColor3 = Color3.fromRGB(255, 255, 255)
			Description.TextSize = 15.000
			Description.TextTransparency = 1
			Description.TextWrapped = true
			Description.TextXAlignment = Enum.TextXAlignment.Left

			ArrowBtn.Name = "ArrowBtn"
			ArrowBtn.Parent = Toggle
			ArrowBtn.BackgroundColor3 = Color3.fromRGB(86, 86, 86)
			ArrowBtn.BackgroundTransparency = 1.000
			ArrowBtn.Position = UDim2.new(0.903719902, 0, 0, 0)
			ArrowBtn.Size = UDim2.new(0, 33, 0, 37)
			ArrowBtn.SliceCenter = Rect.new(30, 30, 30, 30)
			ArrowBtn.SliceScale = 7.000

			ArrowIco.Name = "ArrowIco"
			ArrowIco.Parent = ArrowBtn
			ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
			ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ArrowIco.BackgroundTransparency = 1.000
			ArrowIco.Position = UDim2.new(0.495753437, 0, 0.554054081, 0)
			ArrowIco.Selectable = true
			ArrowIco.Size = UDim2.new(0, 28, 0, 24)
			ArrowIco.Image = "http://www.roblox.com/asset/?id=6034818372"
			ArrowIco.ImageTransparency = .3
			
		    Toggle.MouseEnter:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
			end)

			Toggle.MouseLeave:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.3}
				):Play()
			end)

			Toggle.MouseButton1Click:Connect(function()
				if Toggled == false then
					ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
					TweenService:Create(
						ToggleCircle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =PresetColor}
					):Play()
				else
					ToggleCircle:TweenPosition(UDim2.new(0, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
					TweenService:Create(
						ToggleCircle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(255,255,255)}
					):Play()
				end
				Toggled = not Toggled
				pcall(callback, Toggled)
			end)
			
			ArrowBtn.MouseButton1Click:Connect(function()
				if ToggleDescToggled == false then
					Toggle:TweenSize(UDim2.new(0, 457, 0, 74), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 180}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					Toggle:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 1}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
				ToggleDescToggled = not ToggleDescToggled
			end)
			if default == true then
				ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
				TweenService:Create(
					ToggleCircle,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 =PresetColor}
				):Play()
				Toggled = not Toggled
				pcall(callback, Toggled)
			end
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		
		function ContainerContent:Slider(text,desc,min,max,start,callback)
			local SliderFunc = {}
			local SliderDescToggled = false
                        local dragging = false
			if desc == "" then
				desc = "There is no description for this slider."
			end
			local Slider = Instance.new("TextButton")
			local SliderCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local Description = Instance.new("TextLabel")
			local SlideFrame = Instance.new("Frame")
			local CurrentValueFrame = Instance.new("Frame")
			local SlideCircle = Instance.new("ImageButton")
			local ArrowBtn = Instance.new("ImageButton")
			local ArrowIco = Instance.new("ImageLabel")
			local Value = Instance.new("TextLabel")

			Slider.Name = "Slider"
			Slider.Parent = Container
			Slider.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Slider.ClipsDescendants = true
			Slider.Position = UDim2.new(0.189062506, 0, 0.648612201, 0)
			Slider.Size = UDim2.new(0, 457, 0, 60)
			Slider.AutoButtonColor = false
			Slider.Font = Enum.Font.SourceSans
			Slider.Text = ""
			Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
			Slider.TextSize = 14.000

			SliderCorner.CornerRadius = UDim.new(0, 4)
			SliderCorner.Name = "SliderCorner"
			SliderCorner.Parent = Slider

			Title.Name = "Title"
			Title.Parent = Slider
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)


			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			Description.Name = "Description"
			Description.Parent = Title
			Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Description.BackgroundTransparency = 1.000
			Description.Position = UDim2.new(-0.201000005, 0, 1.38600004, 0)
			Description.Size = UDim2.new(0, 432, 0, 31)
			Description.Font = Enum.Font.Gotham
			Description.Text = desc
			Description.TextColor3 = Color3.fromRGB(255, 255, 255)
			Description.TextSize = 15.000
			Description.TextTransparency = 0.300
			Description.TextWrapped = true
			Description.TextXAlignment = Enum.TextXAlignment.Left

			SlideFrame.Name = "SlideFrame"
			SlideFrame.Parent = Title
			SlideFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
			SlideFrame.BorderSizePixel = 0
			SlideFrame.Position = UDim2.new(-0.197140202, 0, 0.986091495, 0)
			SlideFrame.Size = UDim2.new(0, 426, 0, 3)

			CurrentValueFrame.Name = "CurrentValueFrame"
			CurrentValueFrame.Parent = SlideFrame
			CurrentValueFrame.BackgroundColor3 = PresetColor
			CurrentValueFrame.BorderSizePixel = 0
			CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

			SlideCircle.Name = "SlideCircle"
			SlideCircle.Parent = SlideFrame
			SlideCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SlideCircle.BackgroundTransparency = 1.000
			SlideCircle.Position = UDim2.new((start or 0)/max, -6,-1.30499995, 0)
			SlideCircle.Size = UDim2.new(0, 11, 0, 11)
			SlideCircle.Image = "rbxassetid://3570695787"
			SlideCircle.ImageColor3 = PresetColor

			ArrowBtn.Name = "ArrowBtn"
			ArrowBtn.Parent = Slider
			ArrowBtn.BackgroundColor3 = Color3.fromRGB(86, 86, 86)
			ArrowBtn.BackgroundTransparency = 1.000
			ArrowBtn.Position = UDim2.new(0.903719902, 0, 0, 0)
			ArrowBtn.Size = UDim2.new(0, 33, 0, 37)
			ArrowBtn.SliceCenter = Rect.new(30, 30, 30, 30)
			ArrowBtn.SliceScale = 7.000

			ArrowIco.Name = "ArrowIco"
			ArrowIco.Parent = ArrowBtn
			ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
			ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ArrowIco.BackgroundTransparency = 1.000
			ArrowIco.Position = UDim2.new(0.495753437, 0, 0.554054081, 0)
			ArrowIco.Selectable = true
			ArrowIco.Size = UDim2.new(0, 28, 0, 24)
			ArrowIco.Image = "http://www.roblox.com/asset/?id=6034818372"
			ArrowIco.ImageTransparency = .3

			Value.Name = "Value"
			Value.Parent = Title
			Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Value.BackgroundTransparency = 1.000
			Value.Position = UDim2.new(2.27693367, 0, 0, 0)
			Value.Size = UDim2.new(0, 113, 0, 41)
			Value.Font = Enum.Font.Gotham
			Value.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
			Value.TextColor3 = Color3.fromRGB(255, 255, 255)
			Value.TextSize = 15.000
			Value.TextTransparency = 0.300
			Value.TextXAlignment = Enum.TextXAlignment.Right
			
			ArrowBtn.MouseButton1Click:Connect(function()
				if SliderDescToggled == false then
					Slider:TweenSize(UDim2.new(0, 457, 0, 101), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						Value,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 180}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					Slider:TweenSize(UDim2.new(0, 457, 0, 60), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						Value,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 1}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
				SliderDescToggled = not SliderDescToggled
			end)
			
				local function move(input)
					local pos =
						UDim2.new(
							math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
							-6,
						-1.30499995,
							0
						)
					local pos1 =
						UDim2.new(
							math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
							0,
							0,
							3
						)
					CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
					SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
					local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
					Value.Text = tostring(value)
					pcall(callback, value)
				end
				SlideCircle.InputBegan:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
						end
					end
				)
				SlideCircle.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end
				)
				game:GetService("UserInputService").InputChanged:Connect(
				function(input)
					if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						move(input)
					end
				end
				)
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
			function SliderFunc:Change(tochange)
				CurrentValueFrame.Size = UDim2.new((tochange or 0) / max, 0, 0, 3)
				SlideCircle.Position = UDim2.new((tochange or 0)/max, -6,-1.30499995, 0)
				Value.Text = tostring(tochange and math.floor((tochange / max) * (max - min) + min) or 0)
				pcall(callback,tochange)
			end
			return SliderFunc
		end
		function ContainerContent:Dropdown(text,list,callback)
			local DropFunc = {}
			local Selected = text
			local FrameSize = 43
			local ItemCount = 0
			local DropToggled = false
			local Dropdown = Instance.new("TextButton")
			local DropdownCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local ArrowIco = Instance.new("ImageLabel")
			local DropItemHolder = Instance.new("ScrollingFrame")
			local DropLayout = Instance.new("UIListLayout")

			Dropdown.Name = "Dropdown"
			Dropdown.Parent = Container
			Dropdown.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Dropdown.ClipsDescendants = true
			Dropdown.Position = UDim2.new(0.110937499, 0, 0.67653507, 0)
			Dropdown.Size = UDim2.new(0, 457, 0, 43)
			Dropdown.AutoButtonColor = false
			Dropdown.Font = Enum.Font.SourceSans
			Dropdown.Text = ""
			Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
			Dropdown.TextSize = 14.000

			DropdownCorner.CornerRadius = UDim.new(0, 4)
			DropdownCorner.Name = "DropdownCorner"
			DropdownCorner.Parent = Dropdown

			Title.Name = "Title"
			Title.Parent = Dropdown
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			ArrowIco.Name = "ArrowIco"
			ArrowIco.Parent = Title
			ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
			ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ArrowIco.BackgroundTransparency = 1.000
			ArrowIco.Position = UDim2.new(3.45979357, 0, 0.508096159, 0)
			ArrowIco.Selectable = true
			ArrowIco.Size = UDim2.new(0, 28, 0, 24)
			ArrowIco.Image = "http://www.roblox.com/asset/?id=6035047377"
			ArrowIco.ImageTransparency = .3

			DropItemHolder.Name = "DropItemHolder"
			DropItemHolder.Parent = Title
			DropItemHolder.Active = true
			DropItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			DropItemHolder.BackgroundTransparency = 1.000
			DropItemHolder.BorderSizePixel = 0
			DropItemHolder.Position = UDim2.new(-0.203539819, 0, 1.02380955, 0)
			DropItemHolder.Size = UDim2.new(0, 436, 0, 82)
			DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
			DropItemHolder.ScrollBarThickness = 5
			DropItemHolder.ScrollBarImageColor3 = Color3.fromRGB(41, 42, 48)

			DropLayout.Name = "DropLayout"
			DropLayout.Parent = DropItemHolder
			DropLayout.SortOrder = Enum.SortOrder.LayoutOrder
			DropLayout.Padding = UDim.new(0, 2)
			
			Dropdown.MouseEnter:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
			end)

			Dropdown.MouseLeave:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.3}
				):Play()
			end)

			
			Dropdown.MouseButton1Click:Connect(function()
				if DropToggled == false then
					Title.Text = Selected
					Dropdown:TweenSize(UDim2.new(0, 457, 0, FrameSize), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 180}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					Title.Text = Selected
					Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
			DropToggled = not DropToggled
			end)
			
			for i,v in next, list do
				ItemCount = ItemCount + 1
				
				if ItemCount == 1 then
					FrameSize = 78
				elseif ItemCount == 2 then
					FrameSize = 107
				elseif ItemCount >= 3 then
					FrameSize = 133
				end
				local Item = Instance.new("TextButton")
				local ItemCorner = Instance.new("UICorner")
				
			Item.Name = "Item"
			Item.Parent = DropItemHolder
			Item.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Item.ClipsDescendants = true
			Item.Size = UDim2.new(0, 427, 0, 25)
			Item.AutoButtonColor = false
			Item.Font = Enum.Font.Gotham
			Item.Text = v
			Item.TextColor3 = Color3.fromRGB(255, 255, 255)
			Item.TextSize = 15.000
			Item.TextTransparency = 0.300

			ItemCorner.CornerRadius = UDim.new(0, 4)
			ItemCorner.Name = "ItemCorner"
				ItemCorner.Parent = Item
				DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)
				
				Item.MouseEnter:Connect(function()
					TweenService:Create(
						Item,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
				end)

				Item.MouseLeave:Connect(function()
					TweenService:Create(
						Item,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
				end)
				
				Item.MouseButton1Click:Connect(function()
					pcall(callback, v)
					Title.Text = text
					Selected = v
					DropToggled = not DropToggled
					Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
					
				end)
			end
			function DropFunc:Add(addtext)
				ItemCount = ItemCount + 1

				if ItemCount == 1 then
					FrameSize = 78
				elseif ItemCount == 2 then
					FrameSize = 107
				elseif ItemCount >= 3 then
					FrameSize = 133
				end
				local Item = Instance.new("TextButton")
				local ItemCorner = Instance.new("UICorner")

				Item.Name = "Item"
				Item.Parent = DropItemHolder
				Item.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
				Item.ClipsDescendants = true
				Item.Size = UDim2.new(0, 427, 0, 25)
				Item.AutoButtonColor = false
				Item.Font = Enum.Font.Gotham
				Item.Text = addtext
				Item.TextColor3 = Color3.fromRGB(255, 255, 255)
				Item.TextSize = 15.000
				Item.TextTransparency = 0.300

				ItemCorner.CornerRadius = UDim.new(0, 4)
				ItemCorner.Name = "ItemCorner"
				ItemCorner.Parent = Item
				DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)

				Item.MouseEnter:Connect(function()
					TweenService:Create(
						Item,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
				end)

				Item.MouseLeave:Connect(function()
					TweenService:Create(
						Item,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
				end)

				Item.MouseButton1Click:Connect(function()
					pcall(callback, addtext)
					Title.Text = text
					Selected = addtext
					DropToggled = not DropToggled
					Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end)
				if DropToggled == true then
					Title.Text = Selected
					Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
			end
			function DropFunc:Clear()
				Title.Text = text
				FrameSize = 0
				ItemCount = 0
				for i, v in next, DropItemHolder:GetChildren() do
					if v.Name == "Item" then
						v:Destroy()
					end
				end
				if DropToggled == true then
					Title.Text = Selected
					Dropdown:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
			end
			return DropFunc
		end
		function ContainerContent:Colorpicker(text,preset,callback)
			local ColorPickerToggled = false
			local OldToggleColor = Color3.fromRGB(0, 0, 0)
			local OldColor = Color3.fromRGB(0, 0, 0)
			local OldColorSelectionPosition = nil
			local OldHueSelectionPosition = nil
			local ColorH, ColorS, ColorV = 1, 1, 1
			local RainbowColorPicker = false
			local ColorPickerInput = nil
			local ColorInput = nil
			local HueInput = nil
			
			local Colorpicker = Instance.new("Frame")
			local ColorpickerCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local Hue = Instance.new("ImageLabel")
			local HueCorner = Instance.new("UICorner")
			local HueGradient = Instance.new("UIGradient")
			local HueSelection = Instance.new("ImageLabel")
			local Color = Instance.new("ImageLabel")
			local ColorCorner = Instance.new("UICorner")
			local ColorSelection = Instance.new("ImageLabel")
			local Toggle = Instance.new("TextLabel")
			local ToggleFrame = Instance.new("Frame")
			local ToggleFrameCorner = Instance.new("UICorner")
			local ToggleCircle = Instance.new("Frame")
			local ToggleCircleCorner = Instance.new("UICorner")
			local Confirm = Instance.new("TextButton")
			local ConfirmCorner = Instance.new("UICorner")
			local ConfirmTitle = Instance.new("TextLabel")
			local BoxColor = Instance.new("Frame")
			local BoxColorCorner = Instance.new("UICorner")
			local ColorpickerBtn = Instance.new("TextButton")
			local ToggleBtn = Instance.new("TextButton")


			Colorpicker.Name = "Colorpicker"
			Colorpicker.Parent = Container
			Colorpicker.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Colorpicker.ClipsDescendants = true
			Colorpicker.Position = UDim2.new(0.110937499, 0, 0.67653507, 0)
			Colorpicker.Size = UDim2.new(0, 457, 0, 43)

			ColorpickerCorner.CornerRadius = UDim.new(0, 4)
			ColorpickerCorner.Name = "ColorpickerCorner"
			ColorpickerCorner.Parent = Colorpicker

			Title.Name = "Title"
			Title.Parent = Colorpicker
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = "Colorpicker"
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left
			

			ColorpickerBtn.Name = "ColorpickerBtn"
			ColorpickerBtn.Parent = Title
			ColorpickerBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ColorpickerBtn.BackgroundTransparency = 1.000
			ColorpickerBtn.Position = UDim2.new(-0.336283177, 0, 0, 0)
			ColorpickerBtn.Size = UDim2.new(0, 457, 0, 42)
			ColorpickerBtn.Font = Enum.Font.SourceSans
			ColorpickerBtn.Text = ""
			ColorpickerBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
			ColorpickerBtn.TextSize = 14.000

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			Hue.Name = "Hue"
			Hue.Parent = Title
			Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Hue.Position = UDim2.new(0, 229, 0, 46)
			Hue.Size = UDim2.new(0, 25, 0, 80)

			HueCorner.CornerRadius = UDim.new(0, 3)
			HueCorner.Name = "HueCorner"
			HueCorner.Parent = Hue

			HueGradient.Color = ColorSequence.new {
				ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
				ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
				ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
				ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
				ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
				ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
				ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
			}			
			HueGradient.Rotation = 270
			HueGradient.Name = "HueGradient"
			HueGradient.Parent = Hue

			HueSelection.Name = "HueSelection"
			HueSelection.Parent = Hue
			HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
			HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			HueSelection.BackgroundTransparency = 1.000
			HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
			HueSelection.Size = UDim2.new(0, 18, 0, 18)
			HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
			HueSelection.Visible = false

			Color.Name = "Color"
			Color.Parent = Title
			Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
			Color.Position = UDim2.new(0, -23, 0, 46)
			Color.Size = UDim2.new(0, 246, 0, 80)
			Color.ZIndex = 10
			Color.Image = "rbxassetid://4155801252"

			ColorCorner.CornerRadius = UDim.new(0, 3)
			ColorCorner.Name = "ColorCorner"
			ColorCorner.Parent = Color

			ColorSelection.Name = "ColorSelection"
			ColorSelection.Parent = Color
			ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
			ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ColorSelection.BackgroundTransparency = 1.000
			ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
			ColorSelection.Size = UDim2.new(0, 18, 0, 18)
			ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
			ColorSelection.ScaleType = Enum.ScaleType.Fit
			ColorSelection.Visible = false

			Toggle.Name = "Toggle"
			Toggle.Parent = Title
			Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Toggle.BackgroundTransparency = 1.000
			Toggle.Position = UDim2.new(2.37430048, 0, 1.07157099, 0)
			Toggle.Size = UDim2.new(0, 137, 0, 38)
			Toggle.Font = Enum.Font.Gotham
			Toggle.Text = "Rainbow"
			Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
			Toggle.TextSize = 15.000
			Toggle.TextTransparency = 0.300
			Toggle.TextXAlignment = Enum.TextXAlignment.Left

			ToggleFrame.Name = "ToggleFrame"
			ToggleFrame.Parent = Toggle
			ToggleFrame.BackgroundColor3 = Color3.fromRGB(226, 227, 227)
			ToggleFrame.Position = UDim2.new(0.778387249, 0, 0.357142866, 0)
			ToggleFrame.Size = UDim2.new(0, 27, 0, 11)

			ToggleFrameCorner.Name = "ToggleFrameCorner"
			ToggleFrameCorner.Parent = ToggleFrame

			ToggleCircle.Name = "ToggleCircle"
			ToggleCircle.Parent = ToggleFrame
			ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleCircle.Position = UDim2.new(0, 0, -0.273000002, 0)
			ToggleCircle.Selectable = true
			ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

			ToggleCircleCorner.CornerRadius = UDim.new(2, 8)
			ToggleCircleCorner.Name = "ToggleCircleCorner"
			ToggleCircleCorner.Parent = ToggleCircle

			Confirm.Name = "Confirm"
			Confirm.Parent = Title
			Confirm.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Confirm.ClipsDescendants = true
			Confirm.Position = UDim2.new(2.3791616, 0, 1.97633278, 0)
			Confirm.Size = UDim2.new(0, 144, 0, 42)
			Confirm.AutoButtonColor = false
			Confirm.Font = Enum.Font.SourceSans
			Confirm.Text = ""
			Confirm.TextColor3 = Color3.fromRGB(0, 0, 0)
			Confirm.TextSize = 14.000

			ConfirmCorner.CornerRadius = UDim.new(0, 4)
			ConfirmCorner.Name = "ConfirmCorner"
			ConfirmCorner.Parent = Confirm

			ConfirmTitle.Name = "ConfirmTitle"
			ConfirmTitle.Parent = Confirm
			ConfirmTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ConfirmTitle.BackgroundTransparency = 1.000
			ConfirmTitle.Size = UDim2.new(0, 116, 0, 40)
			ConfirmTitle.Font = Enum.Font.Gotham
			ConfirmTitle.Text = "Confirm"
			ConfirmTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ConfirmTitle.TextSize = 15.000
			ConfirmTitle.TextTransparency = 0.300
			ConfirmTitle.TextXAlignment = Enum.TextXAlignment.Left

			BoxColor.Name = "BoxColor"
			BoxColor.Parent = Title
			BoxColor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BoxColor.Position = UDim2.new(3.26915574, 0, 0.261904776, 0)
			BoxColor.Size = UDim2.new(0, 35, 0, 19)

			BoxColorCorner.CornerRadius = UDim.new(0, 4)
			BoxColorCorner.Name = "BoxColorCorner"
			BoxColorCorner.Parent = BoxColor

			ToggleBtn.Name = "ToggleBtn"
			ToggleBtn.Parent = Toggle
			ToggleBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleBtn.BackgroundTransparency = 1.000
			ToggleBtn.Size = UDim2.new(0, 137, 0, 38)
			ToggleBtn.Font = Enum.Font.SourceSans
			ToggleBtn.Text = ""
			ToggleBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
			ToggleBtn.TextSize = 14.000
			
			ColorpickerBtn.MouseEnter:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
			end)

			ColorpickerBtn.MouseLeave:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.3}
				):Play()
			end)
		 	
			ColorpickerBtn.MouseButton1Click:Connect(function()
				if ColorPickerToggled == false then
					ColorSelection.Visible = true
					HueSelection.Visible = true
					Colorpicker:TweenSize(UDim2.new(0, 457, 0, 138), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					ColorSelection.Visible = false
					HueSelection.Visible = false
					Colorpicker:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
				ColorPickerToggled = not ColorPickerToggled
			end)
			

			local function UpdateColorPicker(nope)
				BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
				Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

				pcall(callback, BoxColor.BackgroundColor3)
			end

			ColorH =
				1 -
				(math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
					Hue.AbsoluteSize.Y)
			ColorS =
				(math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
					Color.AbsoluteSize.X)
			ColorV =
				1 -
				(math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
					Color.AbsoluteSize.Y)

			BoxColor.BackgroundColor3 = preset
			Color.BackgroundColor3 = preset
			pcall(callback, BoxColor.BackgroundColor3)

			Color.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if RainbowColorPicker then
							return
						end

						if ColorInput then
							ColorInput:Disconnect()
						end

						ColorInput =
							RunService.RenderStepped:Connect(
								function()
								local ColorX =
									(math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
										Color.AbsoluteSize.X)
								local ColorY =
									(math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
										Color.AbsoluteSize.Y)

								ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
								ColorS = ColorX
								ColorV = 1 - ColorY

								UpdateColorPicker(true)
							end
							)
					end
				end
			)

			Color.InputEnded:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if ColorInput then
							ColorInput:Disconnect()
						end
					end
				end
			)

			Hue.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if RainbowColorPicker then
							return
						end

						if HueInput then
							HueInput:Disconnect()
						end

						HueInput =
							RunService.RenderStepped:Connect(
								function()
								local HueY =
									(math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
										Hue.AbsoluteSize.Y)

								HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
								ColorH = 1 - HueY

								UpdateColorPicker(true)
							end
							)
					end
				end
			)

			Hue.InputEnded:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if HueInput then
							HueInput:Disconnect()
						end
					end
				end
			)

			ToggleBtn.MouseButton1Down:Connect(
				function()
					RainbowColorPicker = not RainbowColorPicker

					if ColorInput then
						ColorInput:Disconnect()
					end

					if HueInput then
						HueInput:Disconnect()
					end

					if RainbowColorPicker then
						ToggleCircle:TweenPosition(UDim2.new(0.37, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
						TweenService:Create(
							ToggleCircle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =PresetColor}
						):Play()

						OldToggleColor = BoxColor.BackgroundColor3
						OldColor = Color.BackgroundColor3
						OldColorSelectionPosition = ColorSelection.Position
						OldHueSelectionPosition = HueSelection.Position

						while RainbowColorPicker do
							BoxColor.BackgroundColor3 = Color3.fromHSV(Flux.RainbowColorValue, 1, 1)
							Color.BackgroundColor3 = Color3.fromHSV(Flux.RainbowColorValue, 1, 1)

							ColorSelection.Position = UDim2.new(1, 0, 0, 0)
							HueSelection.Position = UDim2.new(0.48, 0, 0, Flux.HueSelectionPosition)

							pcall(callback, BoxColor.BackgroundColor3)
							wait()
						end
					elseif not RainbowColorPicker then
						ToggleCircle:TweenPosition(UDim2.new(0, 0,-0.273, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
						TweenService:Create(
							ToggleCircle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(255,255,255)}
						):Play()

						BoxColor.BackgroundColor3 = OldToggleColor
						Color.BackgroundColor3 = OldColor

						ColorSelection.Position = OldColorSelectionPosition
						HueSelection.Position = OldHueSelectionPosition

						pcall(callback, BoxColor.BackgroundColor3)
					end
				end
			)

			Confirm.MouseButton1Click:Connect(
				function()
					ColorPickerToggled = not ColorPickerToggled
					Colorpicker:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
			)
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		function ContainerContent:Line()
			local Line = Instance.new("TextButton")
			local LineCorner = Instance.new("UICorner")

			Line.Name = "Line"
			Line.Parent = Container
			Line.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Line.ClipsDescendants = true
			Line.Position = UDim2.new(0, 0, 0.70091325, 0)
			Line.Size = UDim2.new(0, 457, 0, 4)
			Line.AutoButtonColor = false
			Line.Font = Enum.Font.SourceSans
			Line.Text = ""
			Line.TextColor3 = Color3.fromRGB(0, 0, 0)
			Line.TextSize = 14.000

			LineCorner.CornerRadius = UDim.new(0, 4)
			LineCorner.Name = "LineCorner"
			LineCorner.Parent = Line
			
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		function ContainerContent:Label(text)
			local Label = Instance.new("TextButton")
			local LabelCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")

			Label.Name = "Label"
			Label.Parent = Container
			Label.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Label.ClipsDescendants = true
			Label.Position = UDim2.new(0.370312512, 0, 0.552631557, 0)
			Label.Size = UDim2.new(0, 457, 0, 43)
			Label.AutoButtonColor = false
			Label.Font = Enum.Font.SourceSans
			Label.Text = ""
			Label.TextColor3 = Color3.fromRGB(0, 0, 0)
			Label.TextSize = 14.000

			LabelCorner.CornerRadius = UDim.new(0, 4)
			LabelCorner.Name = "LabelCorner"
			LabelCorner.Parent = Label

			Title.Name = "Title"
			Title.Parent = Label
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.038480062, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left
			
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		function ContainerContent:Textbox(text,desc,disapper,callback)
			if desc == "" then
				desc = "There is no description for this textbox."
			end
			local TextboxDescToggled = false
			local Textbox = Instance.new("TextButton")
			local TextboxCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local Description = Instance.new("TextLabel")
			local TextboxFrame = Instance.new("Frame")
			local TextboxFrameCorner = Instance.new("UICorner")
			local TextBox = Instance.new("TextBox")
			local ArrowBtn = Instance.new("ImageButton")
			local ArrowIco = Instance.new("ImageLabel")

			Textbox.Name = "Textbox"
			Textbox.Parent = Container
			Textbox.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Textbox.ClipsDescendants = true
			Textbox.Position = UDim2.new(0.0459499061, 0, 0.734449744, 0)
			Textbox.Size = UDim2.new(0, 457, 0, 43)
			Textbox.AutoButtonColor = false
			Textbox.Font = Enum.Font.SourceSans
			Textbox.Text = ""
			Textbox.TextColor3 = Color3.fromRGB(0, 0, 0)
			Textbox.TextSize = 14.000

			TextboxCorner.CornerRadius = UDim.new(0, 4)
			TextboxCorner.Name = "TextboxCorner"
			TextboxCorner.Parent = Textbox

			Title.Name = "Title"
			Title.Parent = Textbox
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			Description.Name = "Description"
			Description.Parent = Title
			Description.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Description.BackgroundTransparency = 1.000
			Description.Position = UDim2.new(-0.200942323, 0, 0.985714269, 0)
			Description.Size = UDim2.new(0, 432, 0, 31)
			Description.Font = Enum.Font.Gotham
			Description.Text = desc
			Description.TextColor3 = Color3.fromRGB(255, 255, 255)
			Description.TextSize = 15.000
			Description.TextTransparency = 1
			Description.TextWrapped = true
			Description.TextXAlignment = Enum.TextXAlignment.Left

			TextboxFrame.Name = "TextboxFrame"
			TextboxFrame.Parent = Title
			TextboxFrame.BackgroundColor3 = Color3.fromRGB(50, 53, 59)
			TextboxFrame.Position = UDim2.new(1.82300889, 0, 0.202380955, 0)
			TextboxFrame.Size = UDim2.new(0, 161, 0, 26)

			TextboxFrameCorner.CornerRadius = UDim.new(0, 4)
			TextboxFrameCorner.Name = "TextboxFrameCorner"
			TextboxFrameCorner.Parent = TextboxFrame

			TextBox.Parent = TextboxFrame
			TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextBox.BackgroundTransparency = 1.000
			TextBox.Size = UDim2.new(0, 161, 0, 26)
			TextBox.Font = Enum.Font.Gotham
			TextBox.Text = ""
			TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextBox.TextSize = 15.000
			TextBox.TextTransparency = 0.300

			ArrowBtn.Name = "ArrowBtn"
			ArrowBtn.Parent = Textbox
			ArrowBtn.BackgroundColor3 = Color3.fromRGB(86, 86, 86)
			ArrowBtn.BackgroundTransparency = 1.000
			ArrowBtn.Position = UDim2.new(0.903719902, 0, 0, 0)
			ArrowBtn.Size = UDim2.new(0, 33, 0, 37)
			ArrowBtn.SliceCenter = Rect.new(30, 30, 30, 30)
			ArrowBtn.SliceScale = 7.000

			ArrowIco.Name = "ArrowIco"
			ArrowIco.Parent = ArrowBtn
			ArrowIco.AnchorPoint = Vector2.new(0.5, 0.5)
			ArrowIco.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ArrowIco.BackgroundTransparency = 1.000
			ArrowIco.Position = UDim2.new(0.495753437, 0, 0.554054081, 0)
			ArrowIco.Selectable = true
			ArrowIco.Size = UDim2.new(0, 28, 0, 24)
			ArrowIco.Image = "http://www.roblox.com/asset/?id=6034818372"
			
			TextBox.FocusLost:Connect(
				function(ep)
					if ep then
						if #TextBox.Text > 0 then
							pcall(callback, TextBox.Text)
							if disapper then
								TextBox.Text = ""
							end
						end
					end
				end
			)
			
			ArrowBtn.MouseButton1Click:Connect(function()
				if TextboxDescToggled == false then
					Textbox:TweenSize(UDim2.new(0, 457, 0, 81), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = PresetColor}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 180}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				else
					Textbox:TweenSize(UDim2.new(0, 457, 0, 43), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = .3}
					):Play()
					TweenService:Create(
						ArrowIco,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					TweenService:Create(
						Description,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 1}
					):Play()
					wait(.4)
					Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
				end
				TextboxDescToggled = not TextboxDescToggled
			end)
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		function ContainerContent:Bind(text,presetbind,callback)
			local Key = presetbind.Name
			local Bind = Instance.new("TextButton")
			local BindCorner = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Circle = Instance.new("Frame")
			local CircleCorner = Instance.new("UICorner")
			local CircleSmall = Instance.new("Frame")
			local CircleSmallCorner = Instance.new("UICorner")
			local BindLabel = Instance.new("TextLabel")

			Bind.Name = "Bind"
			Bind.Parent = Container
			Bind.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			Bind.ClipsDescendants = true
			Bind.Position = UDim2.new(0.40625, 0, 0.828947306, 0)
			Bind.Size = UDim2.new(0, 457, 0, 43)
			Bind.AutoButtonColor = false
			Bind.Font = Enum.Font.SourceSans
			Bind.Text = ""
			Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
			Bind.TextSize = 14.000

			BindCorner.CornerRadius = UDim.new(0, 4)
			BindCorner.Name = "BindCorner"
			BindCorner.Parent = Bind

			Title.Name = "Title"
			Title.Parent = Bind
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(0.0822437406, 0, 0, 0)
			Title.Size = UDim2.new(0, 113, 0, 42)
			Title.Font = Enum.Font.Gotham
			Title.Text = text
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 15.000
			Title.TextTransparency = 0.300
			Title.TextXAlignment = Enum.TextXAlignment.Left

			Circle.Name = "Circle"
			Circle.Parent = Title
			Circle.Active = true
			Circle.AnchorPoint = Vector2.new(0.5, 0.5)
			Circle.BackgroundColor3 = Color3.fromRGB(211, 211, 211)
			Circle.Position = UDim2.new(-0.150690272, 0, 0.503000021, 0)
			Circle.Size = UDim2.new(0, 11, 0, 11)

			CircleCorner.CornerRadius = UDim.new(2, 6)
			CircleCorner.Name = "CircleCorner"
			CircleCorner.Parent = Circle

			CircleSmall.Name = "CircleSmall"
			CircleSmall.Parent = Circle
			CircleSmall.Active = true
			CircleSmall.AnchorPoint = Vector2.new(0.5, 0.5)
			CircleSmall.BackgroundColor3 = Color3.fromRGB(64, 68, 75)
			CircleSmall.BackgroundTransparency = 1.000
			CircleSmall.Position = UDim2.new(0.485673368, 0, 0.503000021, 0)
			CircleSmall.Size = UDim2.new(0, 9, 0, 9)

			CircleSmallCorner.CornerRadius = UDim.new(2, 6)
			CircleSmallCorner.Name = "CircleSmallCorner"
			CircleSmallCorner.Parent = CircleSmall

			BindLabel.Name = "BindLabel"
			BindLabel.Parent = Title
			BindLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BindLabel.BackgroundTransparency = 1.000
			BindLabel.Position = UDim2.new(2.56011987, 0, 0, 0)
			BindLabel.Size = UDim2.new(0, 113, 0, 42)
			BindLabel.Font = Enum.Font.Gotham
			BindLabel.Text = Key
			BindLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			BindLabel.TextSize = 15.000
			BindLabel.TextTransparency = 0.300
			BindLabel.TextXAlignment = Enum.TextXAlignment.Right
			
			Bind.MouseEnter:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
			end)

			Bind.MouseLeave:Connect(function()
				TweenService:Create(
					Title,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.3}
				):Play()
			end)

			Bind.MouseButton1Click:connect(
				function()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						BindLabel,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = PresetColor}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = PresetColor}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						BindLabel,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					BindLabel.Text = "..."
					local inputwait = game:GetService("UserInputService").InputBegan:wait()
					if inputwait.KeyCode.Name ~= "Unknown" then
						BindLabel.Text = inputwait .KeyCode.Name
						Key = inputwait .KeyCode.Name
					end
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						BindLabel,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					TweenService:Create(
						Circle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(211, 211, 211)}
					):Play()
					TweenService:Create(
						CircleSmall,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						Title,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
					TweenService:Create(
						BindLabel,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.3}
					):Play()
				end
			)

			game:GetService("UserInputService").InputBegan:connect(
			function(current, pressed)
				if not pressed then
					if current.KeyCode.Name == Key then
						pcall(callback)
					end
				end
			end
			)
			
			Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
		end
		return ContainerContent
	end
	return Tabs
end
return Flux
]];
	end;

	-- Count = Count + 1;

	return oHttpGet(self, Url, ...);
end));

local oSynReq;
oSynReq = hookfunc(syn.request, newcclosure(function(...)
	local Table = select(1, ...);

	--[[ task.spawn(function()
		local Time = os.time();
		local Tick = tick();

		warn('{', Counter, '}', Table.Url, Table.Method, '@', 'Time:', Time, 'Tick:', tick());

		writefile(Counter .. '_request.lua', fTable(oSynReq(Table)))

		getgenv().Counter = Counter + 1;
	end);

	warn(Table.Url, Table.Method, getrawmetatable(Table)); ]]

	if Table.Method then
		-- warn('Ret 2');

		return {
		     ["StatusMessage"] = "\79\75";
		     ["Success"] = true;
		     ["StatusCode"] = 200;
		     ["Body"] = "\164\124\49\85\171\76\92\84\92\161\75\148\98\39\146\204\188\148\254\48\236\33\33\221\121\166\51\16\169\24\135\123";
		     ["Cookies"] = {
		     };
		     ["Headers"] = {
		          ["expect-ct"] = "\109\97\120\45\97\103\101\61\48";
		          ["Content-Type"] = "\97\112\112\108\105\99\97\116\105\111\110\47\111\99\116\101\116\45\115\116\114\101\97\109";
		          ["iv"] = "\48\97\98\48\48\49\57\51\102\102\102\98\52\56\51\51\101\100\56\98\54\50\101\50\102\98\54\54\52\101\102\48\51\101\53\55\56\51\52\53\56\49\49\97\50\57\99\56\100\57\48\49\50\52\98\98\55\98\102\54\99\97\100\50";
		          ["Date"] = "\84\117\101\44\32\48\49\32\70\101\98\32\50\48\50\50\32\49\49\58\49\52\58\51\49\32\71\77\84";
		          ["x-xss-protection"] = "\48";
		          ["CF-RAY"] = "\54\100\54\97\99\49\97\102\49\98\99\52\55\52\54\51\45\76\72\82";
		          ["key"] = "\99\53\53\100\55\50\101\99\48\52\51\52\97\48\54\52\56\53\50\52\57\102\100\98\54\98\52\50\50\54\49\101\98\48\97\100\54\49\97\50\52\97\97\54\57\98\57\101\56\56\101\57\48\57\49\99\99\50\54\102\50\50\53\54\51\50\55\55\51\54\101\97\48\54\101\56\56\57\54\48\102\54\48\101\97\102\101\101\56\48\48\97\56\51\102\51\54\48\52\102\99\54\53\53\97\99\50\56\52\50\57\51\57\51\101\57\48\54\57\55\101\99\54\50\98\99\48\55\56\50\54\57\56\52\101\48\51\56\99\51\51\53\102\52\52\54\53\56\48\54\52\56\102\53\98\57\48\57\100\55";
		          ["x-permitted-cross-domain-policies"] = "\110\111\110\101";
		          ["Server"] = "\99\108\111\117\100\102\108\97\114\101";
		          ["alt-svc"] = "\104\51\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48\44\32\104\51\45\50\57\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48";
		          ["Content-Length"] = "\51\50";
		          ["NEL"] = "\123\34\115\117\99\99\101\115\115\95\102\114\97\99\116\105\111\110\34\58\48\44\34\114\101\112\111\114\116\95\116\111\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
		          ["referrer-policy"] = "\110\111\45\114\101\102\101\114\114\101\114";
		          ["CF-Cache-Status"] = "\68\89\78\65\77\73\67";
		          ["etag"] = "\87\47\34\50\48\45\51\56\122\116\83\88\78\73\72\53\112\87\65\90\43\117\51\55\89\104\49\53\67\77\105\98\107\34";
		          ["access-control-allow-origin"] = "\42";
		          ["x-download-options"] = "\110\111\111\112\101\110";
		          ["x-dns-prefetch-control"] = "\111\102\102";
		          ["x-content-type-options"] = "\110\111\115\110\105\102\102";
		          ["strict-transport-security"] = "\109\97\120\45\97\103\101\61\49\53\53\53\50\48\48\48\59\32\105\110\99\108\117\100\101\83\117\98\68\111\109\97\105\110\115";
		          ["connection-id"] = "\53\49\56\99\56\100\50\100\99\56\56\98\52\54\57\52\55\99\57\97\56\49\55\51\50\55\51\101\97\100\54\98";
		          ["Report-To"] = "\123\34\101\110\100\112\111\105\110\116\115\34\58\91\123\34\117\114\108\34\58\34\104\116\116\112\115\58\92\47\92\47\97\46\110\101\108\46\99\108\111\117\100\102\108\97\114\101\46\99\111\109\92\47\114\101\112\111\114\116\92\47\118\51\63\115\61\56\53\114\107\55\70\108\120\75\114\85\69\56\106\103\86\65\106\110\72\57\71\86\97\66\53\70\37\50\70\80\71\106\104\81\83\113\85\78\37\50\70\109\51\57\118\49\120\107\57\72\50\118\48\56\66\107\78\101\122\69\116\79\37\50\70\100\54\110\52\101\113\70\115\74\48\105\37\50\70\90\49\75\89\109\102\99\115\97\69\116\116\122\77\108\88\82\65\99\71\98\90\72\85\117\113\98\51\107\68\115\88\121\86\74\117\109\100\55\97\75\107\48\115\78\51\53\109\53\54\118\86\80\69\37\50\70\72\111\114\72\88\117\99\83\76\118\90\102\80\66\82\52\86\34\125\93\44\34\103\114\111\117\112\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
		          ["Connection"] = "\107\101\101\112\45\97\108\105\118\101";
		          ["content-security-policy"] = "\100\101\102\97\117\108\116\45\115\114\99\32\39\115\101\108\102\39\59\98\97\115\101\45\117\114\105\32\39\115\101\108\102\39\59\98\108\111\99\107\45\97\108\108\45\109\105\120\101\100\45\99\111\110\116\101\110\116\59\102\111\110\116\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\100\97\116\97\58\59\102\114\97\109\101\45\97\110\99\101\115\116\111\114\115\32\39\115\101\108\102\39\59\105\109\103\45\115\114\99\32\39\115\101\108\102\39\32\100\97\116\97\58\59\111\98\106\101\99\116\45\115\114\99\32\39\110\111\110\101\39\59\115\99\114\105\112\116\45\115\114\99\32\39\115\101\108\102\39\59\115\99\114\105\112\116\45\115\114\99\45\97\116\116\114\32\39\110\111\110\101\39\59\115\116\121\108\101\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\39\117\110\115\97\102\101\45\105\110\108\105\110\101\39\59\117\112\103\114\97\100\101\45\105\110\115\101\99\117\114\101\45\114\101\113\117\101\115\116\115";
		          ["x-frame-options"] = "\83\65\77\69\79\82\73\71\73\78";
		     };
		}
	else
		-- warn('Ret 1');

		return {
		     ["StatusMessage"] = "\79\75";
		     ["Success"] = true;
		     ["StatusCode"] = 200;
		     ["Body"] = "\100\50\98\98\54\53\56\52\49\102\57\50\55\55\50\51\50\56\49\100\57\101\101\54\51\97\54\51\99\57\98\100\49\101\97\49\50\55\54\98\57\50\98\98\57\57\98\53\51\55\99\98\102\99\100\53\54\49\100\98\98\48\57\53";
		     ["Cookies"] = {
		     };
		     ["Headers"] = {
		          ["expect-ct"] = "\109\97\120\45\97\103\101\61\48";
		          ["Content-Type"] = "\116\101\120\116\47\104\116\109\108\59\32\99\104\97\114\115\101\116\61\117\116\102\45\56";
		          ["Date"] = "\84\117\101\44\32\48\49\32\70\101\98\32\50\48\50\50\32\49\49\58\49\52\58\51\48\32\71\77\84";
		          ["x-xss-protection"] = "\48";
		          ["CF-RAY"] = "\54\100\54\97\99\49\97\100\55\100\55\50\55\53\101\49\45\76\72\82";
		          ["Transfer-Encoding"] = "\99\104\117\110\107\101\100";
		          ["Server"] = "\99\108\111\117\100\102\108\97\114\101";
		          ["alt-svc"] = "\104\51\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48\44\32\104\51\45\50\57\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48";
		          ["NEL"] = "\123\34\115\117\99\99\101\115\115\95\102\114\97\99\116\105\111\110\34\58\48\44\34\114\101\112\111\114\116\95\116\111\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
		          ["x-permitted-cross-domain-policies"] = "\110\111\110\101";
		          ["CF-Cache-Status"] = "\68\89\78\65\77\73\67";
		          ["strict-transport-security"] = "\109\97\120\45\97\103\101\61\49\53\53\53\50\48\48\48\59\32\105\110\99\108\117\100\101\83\117\98\68\111\109\97\105\110\115";
		          ["referrer-policy"] = "\110\111\45\114\101\102\101\114\114\101\114";
		          ["Report-To"] = "\123\34\101\110\100\112\111\105\110\116\115\34\58\91\123\34\117\114\108\34\58\34\104\116\116\112\115\58\92\47\92\47\97\46\110\101\108\46\99\108\111\117\100\102\108\97\114\101\46\99\111\109\92\47\114\101\112\111\114\116\92\47\118\51\63\115\61\68\52\68\37\50\66\65\37\50\70\114\78\87\81\78\55\122\110\49\87\74\74\76\49\77\53\120\66\51\101\115\56\70\118\67\105\82\74\98\112\113\89\48\90\56\90\80\85\109\48\116\81\105\52\74\104\51\76\78\50\115\57\107\75\75\55\68\84\120\103\122\112\115\109\110\65\106\82\75\65\116\66\97\49\101\103\81\113\115\106\107\37\50\66\104\112\52\52\106\80\117\73\82\113\106\87\49\85\88\76\71\112\107\71\54\100\69\76\84\37\50\66\75\101\68\71\81\55\103\68\81\104\84\73\102\107\103\106\76\84\120\76\118\98\74\108\106\52\109\97\103\66\34\125\93\44\34\103\114\111\117\112\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
		          ["x-download-options"] = "\110\111\111\112\101\110";
		          ["x-dns-prefetch-control"] = "\111\102\102";
		          ["x-content-type-options"] = "\110\111\115\110\105\102\102";
		          ["connection-id"] = "\52\56\55\54\48\51\102\55\48\54\98\51\49\54\101\56\98\98\55\51\53\100\57\56\54\52\55\98\101\57\56\55";
		          ["Connection"] = "\107\101\101\112\45\97\108\105\118\101";
		          ["access-control-allow-origin"] = "\42";
		          ["content-security-policy"] = "\100\101\102\97\117\108\116\45\115\114\99\32\39\115\101\108\102\39\59\98\97\115\101\45\117\114\105\32\39\115\101\108\102\39\59\98\108\111\99\107\45\97\108\108\45\109\105\120\101\100\45\99\111\110\116\101\110\116\59\102\111\110\116\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\100\97\116\97\58\59\102\114\97\109\101\45\97\110\99\101\115\116\111\114\115\32\39\115\101\108\102\39\59\105\109\103\45\115\114\99\32\39\115\101\108\102\39\32\100\97\116\97\58\59\111\98\106\101\99\116\45\115\114\99\32\39\110\111\110\101\39\59\115\99\114\105\112\116\45\115\114\99\32\39\115\101\108\102\39\59\115\99\114\105\112\116\45\115\114\99\45\97\116\116\114\32\39\110\111\110\101\39\59\115\116\121\108\101\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\39\117\110\115\97\102\101\45\105\110\108\105\110\101\39\59\117\112\103\114\97\100\101\45\105\110\115\101\99\117\114\101\45\114\101\113\117\101\115\116\115";
		          ["x-frame-options"] = "\83\65\77\69\79\82\73\71\73\78";
		     };
		}
	end;

	return oSynReq(...);
end));

local Kick;
Kick = hookfunc(game.Players.LocalPlayer.Kick, newcclosure(function(Plr, ...)
	-- warn(debug.traceback(), ...);
	return;
end));

local LS;
LS = hookfunc(loadstring, newcclosure(function(Str)
	if Str:find('2147483648', 1, true) then
Str = [===[
local function WriteStk(Orig, New)
	for Idx, Value in next, New do
		if type(Value) ~= 'table' then
			Orig[Idx] = Value;
		else
			if type(Orig[Idx]) ~= 'table' then
				Orig[Idx] = Value;
			else
				WriteStk(Orig[Idx], Value);
			end;
		end;
	end;
end;

return (function(AG, Eh, Nh, gh, Lh, Qh, Kh, Zh, kh, nG, BG, Jh, Ph, ch, SG, Yh, Rh, mh, zh, eh, dG, Ih, qh, xh, KG, hh, sh, Ah, ih, oh, gG, dh, yh, uh, lh, ah, Wh, Uh, Ch, Xh, Vh, fh, ph, FG, Mh, wh, jh, Hh, vh, Gh, JG, tG, Th, Sh, iG, bh, rh, Oh, Dh, ...)
	local F, B = Jh, (dh);
	local t, J, d, K, S, g = Kh, Sh, gh, ih, Ah, (eh[Ph]);
	local i, A, e, P, X, r, U, o, p, m = eh[Xh], rh, Uh, eh[oh], ph, mh[Hh], Lh, fh, bh, (Ch);
	local H, L = Oh, (eh[Qh]);
	local b = Dh;
	local C = (b());
	local Q = 1;
	local th = 2;
	local O = ({});
	local D, x, u, c, N, z, W, y, l, M, I, j, h, Y = uh, uh, uh, uh, uh, uh, uh, uh, uh, uh, uh, uh, uh, (uh);
	while (ch) do
		if (not(th <= 7)) then
			do
				if (not(th <= 11)) then
					if (not(th <= 13)) then
						if (th ~= 14) then
							W = 2147483648;
							th = 0;
						else
							I = function(iB, TB, JB)
								local lB = (JB / M[TB]) % M[iB];
								lB = lB - lB % 1;
								return lB;
							end;
							th = 11;
						end;
					else
						if (th ~= 12) then
							h = function()
								local jQ, OQ, wQ = uh, uh, (1);
								while (ch) do
									if (not(wQ <= 0)) then
										do
											if (wQ ~= 1) then
												Q = OQ;
												do
													wQ = 0;
												end;
											else
												jQ, OQ = L(Mh, u, Q);
												do
													wQ = 2;
												end;
												continue;
											end;
										end;
									else
										do
											return jQ;
										end;
									end;
								end;
							end;
							th = 12;
						else
							Y = jh[hh];
							break;
						end;
					end;
				else
					do
						if (not(th <= 9)) then
							if (th ~= 10) then
								do
									j = function()
										local f_, s_ = uh, uh;
										local p_ = 0;
										do
											repeat
												if (p_ ~= 0) then
													Q = s_;
													p_ = 2;
													do
														continue;
													end;
												else
													f_, s_ = L(Ih, u, Q);
													do
														p_ = 1;
													end;
												end;
											until (p_ == 2);
										end;
										return f_;
									end;
								end;
								do
									th = 13;
								end;
								do
									continue;
								end;
								local D = uh;
							else
								l = 2 ^ 52;
								th = 7;
							end;
						else
							if (th ~= 8) then
								th = 3;
							else
								th = 1;
								do
									continue;
								end;
								local W = 2147483648;
							end;
						end;
					end;
				end;
			end;
		else
			if (not(th <= 3)) then
				do
					if (not(th <= 5)) then
						do
							if (th == 6) then
								z = function()
									local Y2, L2 = uh, (uh);
									do
										for Hu = 0, 2 do
											if (not(Hu <= 0)) then
												if (Hu ~= 1) then
													do
														return Y2;
													end;
												else
													Q = L2;
													continue;
												end;
											else
												Y2, L2 = L(lh, u, Q);
											end;
										end;
									end;
								end;
								th = 15;
							else
								M = {
									[0] = 1
								};
								th = 5;
								do
									continue;
								end;
								local h = function()
									local jQ, OQ, wQ = uh, uh, (1);
									while (ch) do
										if (not(wQ <= 0)) then
											do
												if (wQ ~= 1) then
													Q = OQ;
													do
														wQ = 0;
													end;
												else
													jQ, OQ = L(Mh, u, Q);
													do
														wQ = 2;
													end;
													continue;
												end;
											end;
										else
											do
												return jQ;
											end;
										end;
									end;
								end;
							end;
						end;
					else
						if (th == 4) then
							N = function()
								local x_, b_ = 0, (uh);
								while (ch) do
									if (x_ ~= 0) then
										Q = Q + 1;
										do
											break;
										end;
									else
										b_ = i(u, Q, Q);
										x_ = 1;
										do
											continue;
										end;
									end;
								end;
								return b_;
							end;
							th = 6;
						else
							do
								local ZR = (uh);
								for i_ = 0, 1 do
									if (i_ ~= 0) then
										for h6 = 1, 31 do
											for n_ = 0, 1 do
												if (n_ ~= 0) then
													ZR = ZR * 2;
												else
													M[h6] = ZR;
													continue;
												end;
											end;
										end;
									else
										ZR = 2;
									end;
								end;
							end;
							th = 14;
							continue;
						end;
					end;
				end;
			else
				if (not(th <= 1)) then
					do
						if (th ~= 2) then
							do
								u = yh;
							end;
							th = 8;
							continue;
						else
							th = 9;
						end;
					end;
				else
					do
						if (th == 0) then
							y = 4294967296;
							th = 10;
							do
								continue;
							end;
							local Y = Nh;
						else
							u = P(g(u, 5), zh, function(CF)
								if (i(CF, 2) ~= 72) then
									local Zq = (A(t(CF, 16)));
									if (not(c)) then
										return Zq;
									else
										local F7 = (uh);
										for Ql = 0, 2 do
											if (not(Ql <= 0)) then
												if (Ql ~= 1) then
													do
														return F7;
													end;
												else
													c = uh;
													continue;
												end;
											else
												do
													F7 = e(Zq, c);
												end;
												do
													continue;
												end;
												local F7 = e(Zq, c);
											end;
										end;
									end;
								else
									local Qz = (1);
									while (ch) do
										if (Qz ~= 0) then
											c = t(g(CF, 1, 1));
											Qz = 0;
											do
												continue;
											end;
											return Wh;
										else
											return Wh;
										end;
									end;
								end;
							end);
							th = 4;
						end;
					end;
				end;
			end;
		end;
	end;
	local E, q = Yh, vh;
	local v, V = Eh, (qh);
	local s = function(yH)
		local VH = {
			i(u, Q, Q + 3)
		};
		Q = Q + 4;
		local bH = (1);
		local wH, AH, UH, HH = uh, uh, uh, uh;
		while (ch) do
			if (not(bH <= 2)) then
				do
					if (not(bH <= 3)) then
						do
							if (bH ~= 4) then
								x = (1 * x + yH) % 256;
								do
									bH = 4;
								end;
								do
									continue;
								end;
								x = (1 * x + yH) % 256;
							else
								return HH * 16777216 + UH * 65536 + AH * 256 + wH;
							end;
						end;
					else
						AH = Y(VH[2], x);
						bH = 0;
					end;
				end;
			else
				if (not(bH <= 0)) then
					if (bH ~= 1) then
						do
							HH = Y(VH[4], x);
						end;
						bH = 5;
					else
						wH = Y(VH[1], x);
						bH = 3;
					end;
				else
					UH = Y(VH[3], x);
					bH = 2;
					continue;
				end;
			end;
		end;
	end;
	local k = function(N8)
		local Q8, Y8 = uh, uh;
		local m8 = 0;
		repeat
			do
				if (not(m8 <= 1)) then
					if (not(m8 <= 2)) then
						if (m8 ~= 3) then
							Y8 = Wh;
							m8 = 1;
							do
								continue;
							end;
							return Y8;
						else
							Q = Q + Q8;
							m8 = 2;
							continue;
						end;
					else
						return Y8;
					end;
				else
					if (m8 ~= 0) then
						for iV = 1, Q8, 7997 do
							local hV, jV = 0, (uh);
							do
								while (hV < 2) do
									do
										if (hV == 0) then
											jV = iV + 7997 - 1;
											hV = 1;
											do
												continue;
											end;
											if (not(not(not(not(jV > Q8))))) then
												do
													jV = Q8;
												end;
											else
											end;
										else
											do
												if (not(not(not(not(jV > Q8))))) then
													do
														jV = Q8;
													end;
												else
												end;
											end;
											hV = 2;
										end;
									end;
								end;
							end;
							local aV = (({
								i(u, Q + iV - 1, Q + jV - 1)
							}));
							hV = 0;
							repeat
								if (hV ~= 0) then
									Y8 = Y8..A(H(aV));
									hV = 2;
								else
									for qu = 1, #aV do
										do
											for oi = 0, 1 do
												if (oi == 0) then
													do
														(aV)[qu] = Y(aV[qu], D);
													end;
													do
														do
															continue;
														end;
													end;
													do
														(aV)[qu] = Y(aV[qu], D);
													end;
												else
													do
														D = (N8 * D + Th) % 256;
													end;
												end;
											end;
										end;
									end;
									hV = 1;
									do
										continue;
									end;
								end;
							until (hV >= 2);
						end;
						m8 = 3;
						do
							continue;
						end;
						do
							for iV = 1, Q8, 7997 do
								local hV, jV = 0, (uh);
								do
									while (hV < 2) do
										do
											if (hV == 0) then
												jV = iV + 7997 - 1;
												hV = 1;
												do
													continue;
												end;
												if (not(not(not(not(jV > Q8))))) then
													do
														jV = Q8;
													end;
												else
												end;
											else
												do
													if (not(not(not(not(jV > Q8))))) then
														do
															jV = Q8;
														end;
													else
													end;
												end;
												hV = 2;
											end;
										end;
									end;
								end;
								local aV = (({
									i(u, Q + iV - 1, Q + jV - 1)
								}));
								hV = 0;
								repeat
									if (hV ~= 0) then
										Y8 = Y8..A(H(aV));
										hV = 2;
									else
										for qu = 1, #aV do
											do
												for oi = 0, 1 do
													if (oi == 0) then
														do
															(aV)[qu] = Y(aV[qu], D);
														end;
														do
															do
																continue;
															end;
														end;
														do
															(aV)[qu] = Y(aV[qu], D);
														end;
													else
														do
															D = (N8 * D + Th) % 256;
														end;
													end;
												end;
											end;
										end;
										hV = 1;
										do
											continue;
										end;
									end;
								until (hV >= 2);
							end;
						end;
					else
						do
							Q8 = z();
						end;
						m8 = 4;
					end;
				end;
			end;
		until (sh);
	end;
	th = 0;
	repeat
		do
			if (th ~= 0) then
				x = N();
				th = 2;
				do
					continue;
				end;
				x = N();
			else
				D = N();
				th = 1;
			end;
		end;
	until (th >= 2);
	th = 2;
	local a, R, Z, w, G, Fh = uh, uh, uh, uh, uh, uh;
	while (th < 8) do
		if (not(th <= 3)) then
			if (not(th <= 5)) then
				if (th ~= 6) then
					Z = {};
					th = 4;
				else
					R = function(...)
						return B(kh, ...), {
							...
						};
					end;
					th = 7;
				end;
			else
				do
					if (th == 4) then
						do
							w = 1;
						end;
						th = 0;
					else
						function Fh(be, Ae, se)
							local Ie, Be, ye, he = be[5], be[9], be[8], be[6];
							local Qe, Le = be[7], be[2];
							local xe = (be[3]);
							local ce = be[1];
							local oe = U({}, {
								__mode = ah
							});
							local Fe = (uh);
							do
								Fe = function(...)
									local qN = {};
									local CN, rN = 0, 1;
									local lN = b();
									local iN = (lN == C and Ae or lN);
									local fN, oN = R(...);
									do
										fN = fN - 1;
									end;
									for W3 = 0, fN do
										if (Qe > W3) then
											qN[W3] = oN[W3 + 1];
										else
											break;
										end;
									end;
									G[2] = be;
									(G)[3] = qN;
									do
										if (not Be) then
											oN = uh;
										elseif (not(ye)) then
										else
											(qN)[Qe] = {
												n = fN >= Qe and fN - Qe + 1 or 0,
												H(oN, Qe + 1, fN + 1)
											};
										end;
									end;
									if (iN == lN) then
									else
										(xh)(Fe, iN);
									end;
									local aN, PN, GN, zN = J(function()
										do
											while (true) do
												local Mr = ce[rN];
												local Nr = (Mr[6]);
												rN = rN + 1;
												local PCBefore = rN;

												do
													if (not(Nr >= 77)) then
														if (not(Nr >= 38)) then
															do
																if (not(Nr >= 19)) then
																	do
																		if (not(Nr < 9)) then
																			if (not(Nr >= 14)) then
																				if (not(Nr >= 11)) then
																					if (Nr == 10) then
																						do
																							qN[Mr[1]] = qN[Mr[3]] ^ Mr[7];
																						end;
																					else
																						qN[Mr[1]] = E(qN[Mr[3]]);
																					end;
																				else
																					if (Nr >= 12) then
																						if (Nr ~= 13) then
																							if (not(not(qN[Mr[3]] <= qN[Mr[10]]))) then
																								-- (rN, 'LE3', true);
																							else
																								-- (rN, 'LE3', false);
																								rN = rN + 1;
																							end;
																						else
																							repeat
																								local LF, hF = oe, qN;
																								if (not(#LF > 0)) then
																								else
																									local Pa = {};
																									for UE, JE in m, LF do
																										do
																											for n8, d8 in m, JE do
																												if (not(d8[1] == hF and d8[2] >= 0)) then
																												else
																													local DZ = (d8[2]);
																													if (not Pa[DZ]) then
																														(Pa)[DZ] = {
																															hF[DZ]
																														};
																													end;
																													do
																														(d8)[1] = Pa[DZ];
																													end;
																													(d8)[2] = 1;
																												end;
																											end;
																										end;
																									end;
																								end;
																							until (ch);
																							do
																								return ch, Mr[1], 0;
																							end;
																						end;
																					else
																						qN[Mr[1]] = Mr[4] > qN[Mr[10]];
																					end;
																				end;
																			else
																				do
																					if (Nr < 16) then
																						do
																							if (Nr ~= 15) then
																								(qN)[Mr[1]] = qN[Mr[3]] - Mr[7];
																							else
																								if (not(qN[Mr[3]] <= qN[Mr[10]])) then
																									-- (rN, 'LE4', true);
																								else
																									rN = rN + 1;
																								end;
																							end;
																						end;
																					else
																						if (not(Nr >= 17)) then
																							do
																								if (Mr[10] ~= 163) then
																									repeat
																										local JX, KX = oe, qN;
																										do
																											if (not(#JX > 0)) then
																											else
																												local kz = ({});
																												for EL, nL in m, JX do
																													for kp, Up in m, nL do
																														do
																															if (Up[1] == KX and Up[2] >= 0) then
																																local cS = Up[2];
																																if (not(not kz[cS])) then
																																else
																																	kz[cS] = {
																																		KX[cS]
																																	};
																																end;
																																do
																																	Up[1] = kz[cS];
																																end;
																																(Up)[2] = 1;
																															end;
																														end;
																													end;
																												end;
																											end;
																										end;
																									until (ch);
																									return;
																								else
																									rN = rN - 1;
																									do
																										(ce)[rN] = {
																											[6] = 153,
																											[3] = (Mr[3] - 75) % 256,
																											[1] = (Mr[1] - 75) % 256
																										};
																									end;
																								end;
																							end;
																						else
																							if (Nr ~= 18) then
																								(qN)[Mr[1]] = qN[Mr[3]] <= qN[Mr[10]];
																							else
																								(qN)[Mr[1]] = v(Mr[4], Mr[7]);
																							end;
																						end;
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < 4)) then
																				do
																					if (not(Nr >= 6)) then
																						do
																							if (Nr ~= 5) then
																								(qN)[Mr[1]] = q(Mr[4], qN[Mr[10]]);
																							else
																								(qN)[Mr[1]] = not qN[Mr[3]];
																							end;
																						end;
																					else
																						if (not(Nr < 7)) then
																							if (Nr ~= 8) then
																								do
																									qN[Mr[1]] = qN[Mr[3]] % Mr[7];
																								end;
																							else
																								(qN)[Mr[1]] = Mr[4] * qN[Mr[10]];
																							end;
																						else
																							do
																								if (not(qN[Mr[3]] <= Mr[7])) then
																									do
																										-- (rN, 'LE5', true);
																										rN = rN + 1;
																									end;
																								else
																									-- (rN, 'LE5', false);
																								end;
																							end;
																						end;
																					end;
																				end;
																			else
																				do
																					if (not(Nr < 2)) then
																						do
																							if (Nr ~= 3) then
																								do
																									-- (rN, 'StkNotEQ2', qN[Mr[3]] ~= qN[Mr[10]]);
																									(qN)[Mr[1]] = qN[Mr[3]] ~= qN[Mr[10]];
																								end;
																							else
																								local j_ = qN[Mr[3]] / Mr[7];
																								do
																									(qN)[Mr[1]] = j_ - j_ % 1;
																								end;
																							end;
																						end;
																					else
																						if (Nr ~= 1) then
																							local lZ, OZ = Mr[1], ((Mr[10] - 1) * 50);
																							for jG = 1, CN - lZ do
																								qN[lZ][OZ + jG] = qN[lZ + jG];
																							end;
																						else
																							local N0 = Mr[1];
																							CN = N0 + Mr[3] - 1;
																							if qN[N0] then
																								(qN)[N0] = qN[N0](H(qN, N0 + 1, CN));
																							end;
																							CN = N0;
																						end;
																					end;
																				end;
																			end;
																		end;
																	end;
																else
																	do
																		if (not(Nr >= 28)) then
																			if (not(Nr >= 23)) then
																				if (not(Nr < 21)) then
																					if (Nr ~= 22) then
																						do
																							if (not(Mr[4] < qN[Mr[10]])) then
																								-- (rN, 'L', true);
																							else
																								do
																									-- (rN, 'L', false);
																									rN = rN + 1;
																								end;
																							end;
																						end;
																					else
																						local oc = Mr[4] / Mr[7];
																						do
																							qN[Mr[1]] = oc - oc % 1;
																						end;
																					end;
																				else
																					do
																						if (Nr ~= 20) then
																							if (Mr[10] ~= 143) then
																								repeat
																									local ZA, eA = oe, (qN);
																									if (not(#ZA > 0)) then
																									else
																										local Ce = ({});
																										do
																											for oK, NK in m, ZA do
																												for I4, a4 in m, NK do
																													if (a4[1] == eA and a4[2] >= 0) then
																														local DW = (a4[2]);
																														if (not(not Ce[DW])) then
																														else
																															Ce[DW] = {
																																eA[DW]
																															};
																														end;
																														(a4)[1] = Ce[DW];
																														a4[2] = 1;
																													end;
																												end;
																											end;
																										end;
																									end;
																								until (ch);
																								local Nm = (Mr[1]);
																								return sh, Nm, Nm + Mr[3] - 2;
																							else
																								rN = rN - 1;
																								(ce)[rN] = {
																									[3] = (Mr[3] - 197) % 256,
																									[6] = 16,
																									[1] = (Mr[1] - 197) % tG
																								};
																							end;
																						else
																							local ae = (Mr[1]);
																							do
																								(qN)[ae] = qN[ae](qN[ae + 1], qN[ae + 2]);
																							end;
																							CN = ae;
																						end;
																					end;
																				end;
																			else
																				do
																					if (not(Nr < 25)) then
																						do
																							if (not(Nr < 26)) then
																								if (Nr ~= 27) then
																									(qN)[Mr[1]] = qN[Mr[3]] + Mr[7];
																								else
																									(qN)[Mr[1]] = qN[Mr[3]] > qN[Mr[10]];
																								end;
																							else
																								qN[Mr[1]] = V(Mr[4], Mr[7]);
																							end;
																						end;
																					else
																						if (Nr ~= 24) then
																							do
																								qN[Mr[1]] = qN[Mr[3]][Mr[7]];
																							end;
																						else
																							qN[Mr[1]][qN[Mr[3]]] = qN[Mr[10]];
																						end;
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < 33)) then
																				do
																					if (not(Nr >= 35)) then
																						if (Nr ~= 34) then
																							-- (rN, 'G', Mr[4] > Mr[7]);
																							qN[Mr[1]] = Mr[4] > Mr[7];
																						else
																							if (not(not(Mr[4] <= Mr[7]))) then
																								-- (rN, 'LE8', true);
																							else
																								-- (rN, 'LE8', false);
																								rN = rN + 1;
																							end;
																						end;
																					else
																						if (not(Nr < 36)) then
																							if (Nr ~= 37) then
																								qN[Mr[1]] = Vh(Mr[4], Mr[7]);
																							else
																								if (Mr[10] ~= 187) then
																									repeat
																										local bs, Qs = oe, qN;
																										if (not(#bs > 0)) then
																										else
																											local eX = ({});
																											for YM, jM in m, bs do
																												for xC, TC in m, jM do
																													do
																														if (not(TC[1] == Qs and TC[2] >= 0)) then
																														else
																															local C6 = (TC[2]);
																															if (not(not eX[C6])) then
																															else
																																eX[C6] = {
																																	Qs[C6]
																																};
																															end;
																															do
																																TC[1] = eX[C6];
																															end;
																															TC[2] = 1;
																														end;
																													end;
																												end;
																											end;
																										end;
																									until (ch);
																									return sh, Mr[1], CN;
																								else
																									rN = rN - 1;
																									(ce)[rN] = {
																										[3] = (Mr[3] - 46) % 256,
																										[6] = 80,
																										[1] = (Mr[1] - 46) % 256
																									};
																								end;
																							end;
																						else
																							qN[Mr[1]] = Mr[4] / Mr[7];
																						end;
																					end;
																				end;
																			else
																				if (not(Nr >= 30)) then
																					do
																						if (Nr ~= 29) then
																							do
																								qN[Mr[1]] = Mr[4] <= Mr[7];
																							end;
																						else
																							(qN)[Mr[1]] = Mr[4] / qN[Mr[10]];
																						end;
																					end;
																				else
																					if (not(Nr >= 31)) then
																						local SX = Mr[3];
																						local NX = qN[SX];
																						do
																							for eY = SX + 1, Mr[10] do
																								do
																									NX = NX..qN[eY];
																								end;
																							end;
																						end;
																						(qN)[Mr[1]] = NX;
																					else
																						if (Nr ~= 32) then
																							-- (rN, 'StkEQ', qN[Mr[3]] == qN[Mr[10]]);
																							qN[Mr[1]] = qN[Mr[3]] == qN[Mr[10]];
																						else
																							-- (rN, 'KstEQ', qN[Mr[3]] == Mr[7]);
																							(qN)[Mr[1]] = qN[Mr[3]] == Mr[7];
																						end;
																					end;
																				end;
																			end;
																		end;
																	end;
																end;
															end;
														else
															do
																if (not(Nr >= 57)) then
																	do
																		if (not(Nr < 47)) then
																			do
																				if (Nr < 52) then
																					if (not(Nr >= 49)) then
																						if (Nr == 48) then
																							if (not(Mr[4] <= qN[Mr[10]])) then
																								-- ('LE9', true);
																								rN = rN + 1;
																							else
																								-- ('LE9', false);
																							end;
																						else
																							if (Mr[3] == 8) then
																								do
																									rN = rN - 1;
																								end;
																								ce[rN] = {
																									[6] = 80,
																									[1] = (Mr[1] - 201) % 256,
																									[3] = (Mr[10] - 201) % 256
																								};
																							else
																								do
																									if (not(not qN[Mr[1]])) then
																										-- (rN, 'TEST', 'true')
																									else
																										do
																											-- (rN, 'TEST', 'false')
																											rN = rN + 1;
																										end;
																									end;
																								end;
																							end;
																						end;
																					else
																						if (not(Nr < 50)) then
																							if (Nr ~= 51) then
																								qN[Mr[1]] = Mr[4] % Mr[7];
																							else
																								if (not(not(qN[Mr[3]] < Mr[7]))) then
																									-- (rN, 'L2', true);
																								else
																									do
																										-- (rN, 'L2', false);
																										rN = rN + 1;
																									end;
																								end;
																							end;
																						else
																							(qN)[Mr[1]] = Mr[4] ~= Mr[7];
																						end;
																					end;
																				else
																					if (not(Nr >= 54)) then
																						if (Nr ~= 53) then
																							do
																								qN[Mr[1]] = qN[Mr[3]] * qN[Mr[10]];
																							end;
																						else
																							(G)[Mr[3]] = qN[Mr[1]];
																						end;
																					else
																						if (not(Nr >= 55)) then
																							CN = Mr[1];
																							qN[CN]();
																							CN = CN - 1;
																						else
																							do
																								if (Nr == 56) then
																									do
																										qN[Mr[1]] = Mr[4] >= Mr[7];
																									end;
																								else
																									(qN)[Mr[1]] = Vh(Mr[4], qN[Mr[10]]);
																								end;
																							end;
																						end;
																					end;
																				end;
																			end;
																		else
																			do
																				if (Nr < 42) then
																					if (not(Nr < 40)) then
																						if (Nr == 41) then
																							qN[Mr[1]] = v(qN[Mr[3]], Mr[7]);
																						else
																							(qN)[Mr[1]] = uh;
																						end;
																					else
																						do
																							if (Nr ~= 39) then
																								qN[Mr[1]] = ch;
																							else
																								if (not(Mr[4] <= qN[Mr[10]])) then
																									-- (rN, 'LE10', true);
																								else
																									do
																										-- (rN, 'LE11', false);
																										rN = rN + 1;
																									end;
																								end;
																							end;
																						end;
																					end;
																				else
																					if (not(Nr >= 44)) then
																						if (Nr == 43) then
																							do
																								qN[Mr[1]] = Mr[4] ^ qN[Mr[10]];
																							end;
																						else
																							local B9 = Mr[1];
																							local v9 = (Mr[3]);
																							CN = B9 + v9 - 1;
																							repeat
																								local mB, AB = oe, (qN);
																								do
																									if (not(#mB > 0)) then
																									else
																										local Up = ({});
																										do
																											for mF, eF in m, mB do
																												for jl, bl in m, eF do
																													do
																														if (not(bl[1] == AB and bl[2] >= 0)) then
																														else
																															local Ju = bl[2];
																															do
																																if (not(not Up[Ju])) then
																																else
																																	Up[Ju] = {
																																		AB[Ju]
																																	};
																																end;
																															end;
																															bl[1] = Up[Ju];
																															bl[2] = 1;
																														end;
																													end;
																												end;
																											end;
																										end;
																									end;
																								end;
																							until (ch);
																							do
																								return ch, B9, v9;
																							end;
																						end;
																					else
																						do
																							if (not(Nr < 45)) then
																								do
																									if (Nr ~= 46) then
																										(iN)[Mr[2]] = qN[Mr[1]];
																									else
																										local Vi, Si = Mr[1], (fN - Qe);
																										do
																											if (Si < 0) then
																												Si = -1;
																											end;
																										end;
																										do
																											for Ax = Vi, Vi + Si do
																												do
																													qN[Ax] = oN[Qe + (Ax - Vi) + 1];
																												end;
																											end;
																										end;
																										CN = Vi + Si;
																									end;
																								end;
																							else
																								qN[Mr[1]] = q(qN[Mr[3]], Mr[7]);
																							end;
																						end;
																					end;
																				end;
																			end;
																		end;
																	end;
																else
																	if (not(Nr >= 67)) then
																		if (not(Nr >= 62)) then
																			if (not(Nr < 59)) then
																				if (not(Nr < 60)) then
																					if (Nr ~= 61) then
																						-- (rN, 'WeirdEQ', Mr[4] == Mr[7]);
																						(qN)[Mr[1]] = Mr[4] == Mr[7];
																					else
																						-- (rN, 'StkNotEQ', qN[Mr[3]] ~= qN[Mr[10]]);
																						if (qN[Mr[3]] ~= qN[Mr[10]]) then
																						else
																							rN = rN + 1;
																						end;
																					end;
																				else
																					do
																						qN[Mr[1]] = Mr[4] * Mr[7];
																					end;
																				end;
																			else
																				if (Nr == 58) then
																					local zm = qN[Mr[3]] / qN[Mr[10]];
																					qN[Mr[1]] = zm - zm % 1;
																				else
																					do
																						-- (rN, 'LE11', Mr[4] <= qN[Mr[10]]);
																						(qN)[Mr[1]] = Mr[4] <= qN[Mr[10]];
																					end;
																				end;
																			end;
																		else
																			if (not(Nr >= 64)) then
																				do
																					if (Nr == 63) then
																						(qN)[Mr[1]] = v(Mr[4], qN[Mr[10]]);
																					else
																						-- (rN, 'KstEQ', qN[Mr[3]] == Mr[7]);
																						if (qN[Mr[3]] == Mr[7]) then
																							rN = rN + 1;
																						end;
																					end;
																				end;
																			else
																				if (not(Nr >= 65)) then
																					do
																						(qN)[Mr[1]] = qN[Mr[3]] > Mr[7];
																					end;
																				else
																					if (Nr == 66) then
																						qN[Mr[1]] = Vh(qN[Mr[3]], qN[Mr[10]]);
																					else
																						if (qN[Mr[3]] < Mr[7]) then
																							-- (rN, 'L3', true);
																							rN = rN + 1;
																						else
																							-- (rN, 'L3', false);
																						end;
																					end;
																				end;
																			end;
																		end;
																	else
																		do
																			if (not(Nr < 72)) then
																				if (not(Nr >= 74)) then
																					if (Nr ~= 73) then
																						do
																							repeat
																								local hZ, AZ = oe, qN;
																								if (#hZ > 0) then
																									local Fp = {};
																									for Hc, Wc in m, hZ do
																										for uj, jj in m, Wc do
																											if (jj[1] == AZ and jj[2] >= 0) then
																												local eG = (jj[2]);
																												if (not(not Fp[eG])) then
																												else
																													(Fp)[eG] = {
																														AZ[eG]
																													};
																												end;
																												jj[1] = Fp[eG];
																												(jj)[2] = 1;
																											end;
																										end;
																									end;
																								end;
																							until (ch);
																						end;
																						local tN = Mr[1];
																						do
																							CN = tN + 1;
																						end;
																						return ch, tN, 2;
																					else
																						local Stk = qN;

																						CN = Mr[1];

																						if CN == 80 then 
																							-- writefile('PreWLStk.bin', fTable(qN));
																							-- warn('Call WL func', debug.traceback());

																							local nStk = {
     [1] = {
          [1] = "\67";
          [2] = "\68";
          [3] = "\99";
          [4] = "\66";
          [5] = "\51";
          [6] = "\111";
          [7] = "\72";
          [8] = "\116";
          [9] = "\108";
          [10] = "\76";
          [11] = "\82";
          [12] = "\111";
          [13] = "\43";
          [14] = "\112";
          [15] = "\40";
          [16] = "\110";
          [17] = "\46";
          [18] = "\113";
          [19] = "\109";
          [20] = "\103";
          [21] = "\53";
          [22] = "\115";
          [23] = "\121";
          [24] = "\41";
          [25] = "\86";
          [26] = "\42";
          [27] = "\121";
          [28] = "\121";
          [29] = "\105";
          [30] = "\106";
          [31] = "\66";
          [32] = "\43";
          [33] = "\74";
          [34] = "\99";
          [35] = "\64";
          [36] = "\68";
          [37] = "\112";
          [38] = "\75";
          [39] = "\110";
          [40] = "\101";
          [41] = "\84";
          [42] = "\113";
          [43] = "\112";
          [44] = "\94";
          [45] = "\37";
          [46] = "\93";
          [47] = "\59";
          [48] = "\82";
          [49] = "\38";
          [50] = "\78";
          [51] = "\68";
          [52] = "\107";
          [53] = "\101";
          [54] = "\45";
          [55] = "\75";
          [56] = "\98";
          [57] = "\97";
          [58] = "\88";
          [59] = "\116";
          [60] = "\46";
          [61] = "\107";
          [62] = "\98";
          [63] = "\121";
     };
     [2] = {
          [1] = "\88";
          [2] = "\116";
          [3] = "\38";
          [4] = "\46";
          [5] = "\115";
          [6] = "\90";
          [7] = "\97";
          [8] = "\33";
          [9] = "\106";
          [10] = "\111";
          [11] = "\69";
          [12] = "\93";
          [13] = "\110";
          [14] = "\105";
          [15] = "\68";
          [16] = "\109";
          [17] = "\111";
          [18] = "\36";
          [19] = "\80";
          [20] = "\109";
          [21] = "\119";
          [22] = "\116";
          [23] = "\105";
          [24] = "\85";
          [25] = "\101";
          [26] = "\102";
          [27] = "\110";
          [28] = "\117";
          [29] = "\83";
          [30] = "\67";
          [31] = "\42";
          [32] = "\88";
          [33] = "\35";
          [34] = "\110";
          [35] = "\43";
          [36] = "\111";
          [37] = "\90";
          [38] = "\107";
          [39] = "\37";
          [40] = "\45";
          [41] = "\44";
          [42] = "\33";
          [43] = "\61";
          [44] = "\83";
          [45] = "\55";
          [46] = "\67";
          [47] = "\93";
          [48] = "\120";
          [49] = "\52";
          [50] = "\119";
          [51] = "\111";
          [52] = "\100";
          [53] = "\73";
          [54] = "\75";
          [55] = "\44";
          [56] = "\99";
          [57] = "\122";
          [58] = "\98";
          [59] = "\38";
          [60] = "\58";
          [61] = "\47";
          [62] = "\85";
          [63] = "\75";
          [64] = "\91";
     };
     [3] = {
          [1] = "\117";
          [2] = "\75";
          [3] = "\75";
          [4] = "\98";
          [5] = "\38";
          [6] = "\56";
          [7] = "\46";
          [8] = "\48";
          [9] = "\99";
          [10] = "\80";
          [11] = "\64";
          [12] = "\41";
          [13] = "\76";
          [14] = "\38";
          [15] = "\37";
          [16] = "\108";
          [17] = "\101";
          [18] = "\107";
          [19] = "\121";
          [20] = "\69";
          [21] = "\41";
          [22] = "\87";
          [23] = "\50";
          [24] = "\46";
          [25] = "\73";
          [26] = "\44";
          [27] = "\105";
          [28] = "\99";
          [29] = "\74";
          [30] = "\53";
          [31] = "\93";
          [32] = "\83";
          [33] = "\79";
          [34] = "\38";
          [35] = "\97";
          [36] = "\122";
          [37] = "\94";
          [38] = "\86";
          [39] = "\80";
          [40] = "\91";
          [41] = "\105";
          [42] = "\110";
          [43] = "\112";
          [44] = "\59";
          [45] = "\52";
          [46] = "\88";
          [47] = "\88";
          [48] = "\112";
          [49] = "\48";
          [50] = "\44";
          [51] = "\56";
          [52] = "\84";
          [53] = "\72";
          [54] = "\97";
     };
     [4] = {
          [1] = "\84";
          [2] = "\78";
          [3] = "\57";
          [4] = "\94";
          [5] = "\73";
          [6] = "\79";
          [7] = "\54";
          [8] = "\118";
          [9] = "\106";
          [10] = "\98";
          [11] = "\90";
          [12] = "\85";
          [13] = "\33";
          [14] = "\104";
          [15] = "\91";
          [16] = "\40";
          [17] = "\58";
          [18] = "\61";
          [19] = "\83";
          [20] = "\114";
          [21] = "\118";
          [22] = "\85";
          [23] = "\82";
          [24] = "\76";
          [25] = "\57";
          [26] = "\35";
          [27] = "\56";
          [28] = "\114";
          [29] = "\106";
          [30] = "\114";
          [31] = "\122";
          [32] = "\91";
          [33] = "\66";
          [34] = "\61";
          [35] = "\43";
          [36] = "\58";
          [37] = "\121";
          [38] = "\38";
          [39] = "\86";
          [40] = "\49";
          [41] = "\110";
          [42] = "\102";
          [43] = "\83";
          [44] = "\108";
          [45] = "\58";
          [46] = "\51";
          [47] = "\48";
          [48] = "\76";
          [49] = "\98";
          [50] = "\55";
          [51] = "\37";
          [52] = "\120";
          [53] = "\46";
     };
     [5] = {
          [1] = "\77";
          [2] = "\59";
          [3] = "\85";
          [4] = "\110";
          [5] = "\59";
          [6] = "\37";
          [7] = "\79";
          [8] = "\67";
          [9] = "\110";
          [10] = "\112";
          [11] = "\110";
          [12] = "\61";
          [13] = "\57";
          [14] = "\121";
          [15] = "\103";
          [16] = "\38";
          [17] = "\56";
          [18] = "\100";
          [19] = "\41";
          [20] = "\81";
          [21] = "\45";
          [22] = "\69";
          [23] = "\79";
          [24] = "\100";
          [25] = "\33";
          [26] = "\73";
          [27] = "\103";
          [28] = "\105";
          [29] = "\53";
          [30] = "\119";
          [31] = "\113";
          [32] = "\107";
          [33] = "\70";
          [34] = "\51";
          [35] = "\120";
          [36] = "\118";
          [37] = "\41";
          [38] = "\99";
          [39] = "\54";
          [40] = "\67";
          [41] = "\91";
          [42] = "\49";
          [43] = "\116";
          [44] = "\75";
          [45] = "\102";
          [46] = "\72";
          [47] = "\67";
          [48] = "\105";
          [49] = "\38";
          [50] = "\69";
          [51] = "\47";
          [52] = "\108";
          [53] = "\86";
          [54] = "\98";
          [55] = "\113";
     };
     [6] = {
          [1] = "\42";
          [2] = "\61";
          [3] = "\59";
          [4] = "\111";
          [5] = "\117";
          [6] = "\71";
          [7] = "\91";
          [8] = "\66";
          [9] = "\44";
          [10] = "\114";
          [11] = "\115";
          [12] = "\37";
          [13] = "\40";
          [14] = "\111";
          [15] = "\109";
          [16] = "\111";
          [17] = "\80";
          [18] = "\121";
          [19] = "\111";
          [20] = "\121";
          [21] = "\49";
          [22] = "\111";
          [23] = "\121";
          [24] = "\75";
          [25] = "\100";
          [26] = "\79";
          [27] = "\112";
          [28] = "\105";
          [29] = "\89";
          [30] = "\53";
          [31] = "\52";
          [32] = "\100";
          [33] = "\35";
          [34] = "\45";
          [35] = "\40";
          [36] = "\100";
          [37] = "\91";
          [38] = "\113";
          [39] = "\86";
          [40] = "\114";
          [41] = "\77";
          [42] = "\101";
          [43] = "\73";
          [44] = "\82";
          [45] = "\102";
          [46] = "\79";
          [47] = "\40";
          [48] = "\112";
          [49] = "\52";
          [50] = "\108";
          [51] = "\55";
          [52] = "\57";
          [53] = "\112";
          [54] = "\103";
          [55] = "\76";
     };
     [7] = {
          [1] = "\72";
          [2] = "\101";
          [3] = "\116";
          [4] = "\36";
          [5] = "\101";
          [6] = "\122";
          [7] = "\75";
          [8] = "\117";
          [9] = "\72";
          [10] = "\103";
          [11] = "\93";
          [12] = "\79";
          [13] = "\115";
          [14] = "\61";
          [15] = "\71";
          [16] = "\112";
          [17] = "\74";
          [18] = "\117";
          [19] = "\61";
          [20] = "\103";
          [21] = "\100";
          [22] = "\120";
          [23] = "\114";
          [24] = "\107";
          [25] = "\33";
          [26] = "\54";
          [27] = "\87";
          [28] = "\97";
          [29] = "\89";
          [30] = "\83";
          [31] = "\54";
          [32] = "\50";
          [33] = "\97";
          [34] = "\93";
          [35] = "\84";
          [36] = "\91";
          [37] = "\90";
          [38] = "\89";
          [39] = "\41";
          [40] = "\120";
          [41] = "\43";
          [42] = "\67";
          [43] = "\61";
          [44] = "\79";
          [45] = "\37";
          [46] = "\89";
          [47] = "\84";
          [48] = "\85";
          [49] = "\103";
          [50] = "\41";
          [51] = "\120";
          [52] = "\80";
          [53] = "\66";
          [54] = "\55";
          [55] = "\89";
          [56] = "\57";
          [57] = "\81";
          [58] = "\78";
     };
     [8] = {
          [1] = "\80";
          [2] = "\108";
          [3] = "\75";
          [4] = "\87";
          [5] = "\116";
          [6] = "\47";
          [7] = "\79";
          [8] = "\32";
          [9] = "\58";
          [10] = "\107";
          [11] = "\64";
          [12] = "\76";
          [13] = "\117";
          [14] = "\61";
          [15] = "\70";
          [16] = "\103";
          [17] = "\104";
          [18] = "\89";
          [19] = "\122";
          [20] = "\97";
          [21] = "\101";
          [22] = "\82";
          [23] = "\42";
          [24] = "\100";
          [25] = "\75";
          [26] = "\116";
          [27] = "\108";
          [28] = "\116";
          [29] = "\69";
          [30] = "\101";
          [31] = "\105";
          [32] = "\65";
          [33] = "\74";
          [34] = "\67";
          [35] = "\81";
          [36] = "\45";
          [37] = "\45";
          [38] = "\82";
          [39] = "\97";
          [40] = "\72";
          [41] = "\104";
          [42] = "\59";
          [43] = "\82";
          [44] = "\104";
          [45] = "\46";
          [46] = "\118";
          [47] = "\110";
          [48] = "\48";
          [49] = "\84";
          [50] = "\44";
          [51] = "\102";
          [52] = "\87";
          [53] = "\104";
          [54] = "\99";
          [55] = "\91";
          [56] = "\105";
          [57] = "\70";
          [58] = "\110";
          [59] = "\115";
          [60] = "\86";
          [61] = "\100";
          [62] = "\99";
          [63] = "\46";
          [64] = "\66";
          [65] = "\119";
          [66] = "\35";
          [67] = "\105";
          [68] = "\46";
          [69] = "\98";
          [70] = "\83";
          [71] = "\59";
          [72] = "\32";
     };
     [9] = {
          [1] = "\36";
          [2] = "\67";
          [3] = "\66";
          [4] = "\108";
          [5] = "\122";
          [6] = "\114";
          [7] = "\33";
          [8] = "\35";
          [9] = "\68";
          [10] = "\48";
          [11] = "\113";
          [12] = "\45";
          [13] = "\117";
          [14] = "\56";
          [15] = "\110";
          [16] = "\46";
          [17] = "\49";
          [18] = "\44";
          [19] = "\48";
          [20] = "\111";
          [21] = "\101";
          [22] = "\57";
          [23] = "\79";
          [24] = "\117";
          [25] = "\58";
          [26] = "\50";
          [27] = "\101";
          [28] = "\108";
          [29] = "\98";
          [30] = "\100";
          [31] = "\79";
          [32] = "\111";
          [33] = "\85";
          [34] = "\116";
          [35] = "\48";
          [36] = "\59";
          [37] = "\40";
          [38] = "\86";
          [39] = "\73";
          [40] = "\53";
          [41] = "\120";
          [42] = "\85";
          [43] = "\49";
          [44] = "\94";
          [45] = "\113";
          [46] = "\108";
          [47] = "\93";
          [48] = "\108";
          [49] = "\76";
          [50] = "\52";
          [51] = "\68";
          [52] = "\66";
          [53] = "\59";
          [54] = "\111";
          [55] = "\52";
     };
     [10] = {
          [1] = "\91";
          [2] = "\97";
          [3] = "\110";
          [4] = "\99";
          [5] = "\100";
          [6] = "\98";
          [7] = "\106";
          [8] = "\70";
          [9] = "\89";
          [10] = "\117";
          [11] = "\76";
          [12] = "\49";
          [13] = "\73";
          [14] = "\33";
          [15] = "\85";
          [16] = "\76";
          [17] = "\76";
          [18] = "\99";
          [19] = "\66";
          [20] = "\49";
          [21] = "\48";
          [22] = "\80";
          [23] = "\110";
          [24] = "\59";
          [25] = "\61";
          [26] = "\84";
          [27] = "\91";
          [28] = "\57";
          [29] = "\78";
          [30] = "\50";
          [31] = "\82";
          [32] = "\121";
          [33] = "\98";
          [34] = "\87";
          [35] = "\117";
          [36] = "\121";
          [37] = "\79";
          [38] = "\82";
          [39] = "\89";
          [40] = "\118";
          [41] = "\80";
          [42] = "\38";
          [43] = "\75";
          [44] = "\87";
          [45] = "\100";
          [46] = "\61";
          [47] = "\35";
          [48] = "\107";
          [49] = "\102";
          [50] = "\71";
          [51] = "\53";
          [52] = "\99";
          [53] = "\66";
          [54] = "\121";
          [55] = "\74";
     };
     [11] = {
          [1] = "\98";
          [2] = "\110";
          [3] = "\87";
          [4] = "\120";
          [5] = "\90";
          [6] = "\113";
          [7] = "\50";
          [8] = "\81";
          [9] = "\86";
          [10] = "\117";
          [11] = "\113";
          [12] = "\74";
          [13] = "\71";
          [14] = "\112";
          [15] = "\73";
          [16] = "\42";
          [17] = "\111";
          [18] = "\71";
          [19] = "\116";
          [20] = "\78";
          [21] = "\56";
          [22] = "\80";
          [23] = "\79";
          [24] = "\86";
          [25] = "\85";
          [26] = "\112";
          [27] = "\54";
          [28] = "\41";
          [29] = "\35";
          [30] = "\112";
          [31] = "\97";
          [32] = "\116";
          [33] = "\104";
          [34] = "\75";
          [35] = "\91";
          [36] = "\98";
          [37] = "\64";
          [38] = "\91";
          [39] = "\45";
          [40] = "\77";
          [41] = "\58";
          [42] = "\78";
          [43] = "\115";
          [44] = "\70";
          [45] = "\87";
          [46] = "\102";
          [47] = "\58";
          [48] = "\77";
          [49] = "\89";
          [50] = "\85";
          [51] = "\113";
          [52] = "\52";
          [53] = "\99";
          [54] = "\51";
          [55] = "\121";
     };
     [12] = {
          [1] = "\38";
          [2] = "\112";
          [3] = "\101";
          [4] = "\77";
          [5] = "\82";
          [6] = "\115";
          [7] = "\68";
          [8] = "\78";
          [9] = "\86";
          [10] = "\88";
          [11] = "\61";
          [12] = "\110";
          [13] = "\35";
          [14] = "\48";
          [15] = "\77";
          [16] = "\116";
          [17] = "\42";
          [18] = "\101";
          [19] = "\57";
          [20] = "\86";
          [21] = "\53";
          [22] = "\107";
          [23] = "\49";
          [24] = "\46";
          [25] = "\73";
          [26] = "\50";
          [27] = "\84";
          [28] = "\73";
          [29] = "\104";
          [30] = "\102";
          [31] = "\105";
          [32] = "\99";
          [33] = "\104";
          [34] = "\37";
          [35] = "\75";
          [36] = "\102";
          [37] = "\71";
          [38] = "\53";
          [39] = "\87";
          [40] = "\117";
          [41] = "\85";
          [42] = "\40";
          [43] = "\105";
          [44] = "\100";
          [45] = "\91";
          [46] = "\122";
          [47] = "\40";
          [48] = "\117";
          [49] = "\114";
          [50] = "\42";
          [51] = "\64";
          [52] = "\120";
          [53] = "\94";
          [54] = "\86";
          [55] = "\70";
          [56] = "\113";
          [57] = "\101";
     };
     [13] = {
          [1] = "\105";
          [2] = "\104";
          [3] = "\110";
          [4] = "\115";
          [5] = "\61";
          [6] = "\61";
          [7] = "\115";
          [8] = "\116";
          [9] = "\102";
          [10] = "\54";
          [11] = "\68";
          [12] = "\68";
          [13] = "\115";
          [14] = "\122";
          [15] = "\82";
          [16] = "\114";
          [17] = "\40";
          [18] = "\35";
          [19] = "\70";
          [20] = "\110";
          [21] = "\41";
          [22] = "\112";
          [23] = "\99";
          [24] = "\75";
          [25] = "\73";
          [26] = "\119";
          [27] = "\77";
          [28] = "\42";
          [29] = "\43";
          [30] = "\86";
          [31] = "\101";
          [32] = "\113";
          [33] = "\70";
          [34] = "\78";
          [35] = "\88";
          [36] = "\61";
          [37] = "\78";
          [38] = "\108";
          [39] = "\43";
          [40] = "\105";
          [41] = "\44";
          [42] = "\68";
          [43] = "\74";
          [44] = "\80";
          [45] = "\100";
          [46] = "\108";
          [47] = "\67";
          [48] = "\107";
          [49] = "\41";
          [50] = "\108";
          [51] = "\78";
          [52] = "\117";
          [53] = "\40";
          [54] = "\107";
          [55] = "\112";
          [56] = "\111";
          [57] = "\81";
     };
     [14] = {
          [1] = "\114";
          [2] = "\57";
          [3] = "\118";
          [4] = "\83";
          [5] = "\43";
          [6] = "\79";
          [7] = "\87";
          [8] = "\73";
          [9] = "\122";
          [10] = "\122";
          [11] = "\71";
          [12] = "\94";
          [13] = "\119";
          [14] = "\98";
          [15] = "\78";
          [16] = "\52";
          [17] = "\97";
          [18] = "\51";
          [19] = "\121";
          [20] = "\93";
          [21] = "\46";
          [22] = "\70";
          [23] = "\111";
          [24] = "\37";
          [25] = "\72";
          [26] = "\79";
          [27] = "\106";
          [28] = "\104";
          [29] = "\98";
          [30] = "\74";
          [31] = "\66";
          [32] = "\85";
          [33] = "\80";
          [34] = "\109";
          [35] = "\33";
          [36] = "\114";
          [37] = "\49";
          [38] = "\54";
          [39] = "\83";
          [40] = "\49";
          [41] = "\47";
          [42] = "\48";
          [43] = "\36";
          [44] = "\86";
          [45] = "\76";
          [46] = "\58";
          [47] = "\36";
          [48] = "\73";
          [49] = "\48";
          [50] = "\73";
          [51] = "\43";
          [52] = "\70";
          [53] = "\98";
          [54] = "\116";
     };
     [15] = {
          [1] = "\83";
          [2] = "\85";
          [3] = "\38";
          [4] = "\41";
          [5] = "\74";
          [6] = "\119";
          [7] = "\40";
          [8] = "\107";
          [9] = "\71";
          [10] = "\80";
          [11] = "\121";
          [12] = "\59";
          [13] = "\112";
          [14] = "\114";
          [15] = "\45";
          [16] = "\99";
          [17] = "\94";
          [18] = "\88";
          [19] = "\74";
          [20] = "\43";
          [21] = "\116";
          [22] = "\61";
          [23] = "\58";
          [24] = "\94";
          [25] = "\69";
          [26] = "\72";
          [27] = "\88";
          [28] = "\102";
          [29] = "\57";
          [30] = "\74";
          [31] = "\97";
          [32] = "\114";
          [33] = "\98";
          [34] = "\107";
          [35] = "\58";
          [36] = "\115";
          [37] = "\86";
          [38] = "\97";
          [39] = "\119";
          [40] = "\101";
          [41] = "\83";
          [42] = "\37";
          [43] = "\73";
          [44] = "\76";
          [45] = "\111";
          [46] = "\45";
          [47] = "\42";
          [48] = "\67";
          [49] = "\81";
          [50] = "\64";
          [51] = "\51";
          [52] = "\71";
          [53] = "\58";
          [54] = "\40";
          [55] = "\98";
     };
     [16] = {
          [1] = "\45";
          [2] = "\108";
          [3] = "\97";
          [4] = "\72";
          [5] = "\101";
          [6] = "\52";
          [7] = "\115";
          [8] = "\80";
          [9] = "\91";
          [10] = "\115";
          [11] = "\75";
          [12] = "\46";
          [13] = "\105";
          [14] = "\100";
          [15] = "\104";
          [16] = "\104";
          [17] = "\50";
          [18] = "\88";
          [19] = "\85";
          [20] = "\56";
          [21] = "\46";
          [22] = "\61";
          [23] = "\94";
          [24] = "\73";
          [25] = "\56";
          [26] = "\89";
          [27] = "\87";
          [28] = "\90";
          [29] = "\105";
          [30] = "\81";
          [31] = "\79";
          [32] = "\42";
          [33] = "\58";
          [34] = "\40";
          [35] = "\36";
          [36] = "\71";
          [37] = "\46";
          [38] = "\122";
          [39] = "\99";
          [40] = "\83";
          [41] = "\44";
          [42] = "\94";
          [43] = "\55";
          [44] = "\100";
          [45] = "\83";
          [46] = "\51";
          [47] = "\85";
          [48] = "\35";
          [49] = "\121";
          [50] = "\38";
          [51] = "\55";
          [52] = "\106";
          [53] = "\88";
          [54] = "\79";
          [55] = "\84";
          [56] = "\81";
     };
     [17] = {
          [1] = "\61";
          [2] = "\94";
          [3] = "\99";
          [4] = "\70";
          [5] = "\118";
          [6] = "\114";
          [7] = "\122";
          [8] = "\77";
          [9] = "\110";
          [10] = "\45";
          [11] = "\88";
          [12] = "\94";
          [13] = "\104";
          [14] = "\119";
          [15] = "\78";
          [16] = "\80";
          [17] = "\122";
          [18] = "\118";
          [19] = "\56";
          [20] = "\115";
          [21] = "\73";
          [22] = "\69";
          [23] = "\90";
          [24] = "\55";
          [25] = "\112";
          [26] = "\116";
          [27] = "\35";
          [28] = "\93";
          [29] = "\97";
          [30] = "\73";
          [31] = "\97";
          [32] = "\68";
          [33] = "\48";
          [34] = "\93";
          [35] = "\111";
          [36] = "\79";
          [37] = "\111";
          [38] = "\61";
          [39] = "\78";
          [40] = "\97";
          [41] = "\75";
          [42] = "\99";
          [43] = "\104";
          [44] = "\67";
          [45] = "\106";
          [46] = "\71";
          [47] = "\50";
          [48] = "\83";
          [49] = "\50";
          [50] = "\94";
          [51] = "\49";
          [52] = "\108";
          [53] = "\88";
          [54] = "\44";
          [55] = "\81";
     };
     [18] = {
          [1] = "\83";
          [2] = "\76";
          [3] = "\61";
          [4] = "\110";
          [5] = "\46";
          [6] = "\53";
          [7] = "\101";
          [8] = "\75";
          [9] = "\76";
          [10] = "\102";
          [11] = "\71";
          [12] = "\111";
          [13] = "\35";
          [14] = "\76";
          [15] = "\97";
          [16] = "\121";
          [17] = "\46";
          [18] = "\109";
          [19] = "\74";
          [20] = "\61";
          [21] = "\42";
          [22] = "\55";
          [23] = "\49";
          [24] = "\36";
          [25] = "\85";
          [26] = "\51";
          [27] = "\43";
          [28] = "\105";
          [29] = "\51";
          [30] = "\38";
          [31] = "\55";
          [32] = "\104";
          [33] = "\104";
          [34] = "\106";
          [35] = "\75";
          [36] = "\82";
          [37] = "\48";
          [38] = "\106";
          [39] = "\117";
          [40] = "\71";
          [41] = "\101";
          [42] = "\87";
          [43] = "\102";
          [44] = "\58";
          [45] = "\55";
          [46] = "\72";
          [47] = "\98";
          [48] = "\120";
          [49] = "\44";
          [50] = "\98";
          [51] = "\121";
          [52] = "\38";
          [53] = "\116";
          [54] = "\88";
          [55] = "\58";
     };
     [19] = {
          [1] = "\112";
          [2] = "\40";
          [3] = "\43";
          [4] = "\101";
          [5] = "\52";
          [6] = "\38";
          [7] = "\104";
          [8] = "\101";
          [9] = "\38";
          [10] = "\43";
          [11] = "\91";
          [12] = "\91";
          [13] = "\83";
          [14] = "\73";
          [15] = "\114";
          [16] = "\98";
          [17] = "\52";
          [18] = "\100";
          [19] = "\46";
          [20] = "\90";
          [21] = "\102";
          [22] = "\44";
          [23] = "\61";
          [24] = "\105";
          [25] = "\91";
          [26] = "\43";
          [27] = "\46";
          [28] = "\86";
          [29] = "\86";
          [30] = "\99";
          [31] = "\42";
          [32] = "\73";
          [33] = "\105";
          [34] = "\118";
          [35] = "\67";
          [36] = "\83";
          [37] = "\49";
          [38] = "\75";
          [39] = "\111";
          [40] = "\86";
          [41] = "\74";
          [42] = "\108";
          [43] = "\106";
          [44] = "\93";
          [45] = "\43";
          [46] = "\58";
          [47] = "\45";
          [48] = "\59";
          [49] = "\58";
          [50] = "\47";
          [51] = "\64";
          [52] = "\33";
          [53] = "\112";
          [54] = "\50";
     };
     [20] = {
          [1] = "\55";
          [2] = "\55";
          [3] = "\67";
          [4] = "\117";
          [5] = "\79";
          [6] = "\103";
          [7] = "\44";
          [8] = "\41";
          [9] = "\115";
          [10] = "\98";
          [11] = "\77";
          [12] = "\113";
          [13] = "\36";
          [14] = "\88";
          [15] = "\84";
          [16] = "\66";
          [17] = "\50";
          [18] = "\40";
          [19] = "\56";
          [20] = "\33";
          [21] = "\97";
          [22] = "\79";
          [23] = "\64";
          [24] = "\37";
          [25] = "\115";
          [26] = "\58";
          [27] = "\106";
          [28] = "\36";
          [29] = "\71";
          [30] = "\59";
          [31] = "\38";
          [32] = "\50";
          [33] = "\58";
          [34] = "\80";
          [35] = "\76";
          [36] = "\87";
          [37] = "\103";
          [38] = "\87";
          [39] = "\69";
          [40] = "\71";
          [41] = "\116";
          [42] = "\98";
          [43] = "\93";
          [44] = "\55";
          [45] = "\37";
          [46] = "\77";
          [47] = "\42";
          [48] = "\46";
          [49] = "\40";
          [50] = "\36";
          [51] = "\109";
          [52] = "\83";
          [53] = "\64";
          [54] = "\36";
          [55] = "\58";
     };
     [21] = {
          [1] = "\77";
          [2] = "\67";
          [3] = "\67";
          [4] = "\115";
          [5] = "\86";
          [6] = "\38";
          [7] = "\41";
          [8] = "\80";
          [9] = "\66";
          [10] = "\102";
          [11] = "\121";
          [12] = "\117";
          [13] = "\49";
          [14] = "\97";
          [15] = "\41";
          [16] = "\102";
          [17] = "\98";
          [18] = "\119";
          [19] = "\110";
          [20] = "\70";
          [21] = "\59";
          [22] = "\121";
          [23] = "\102";
          [24] = "\54";
          [25] = "\106";
          [26] = "\84";
          [27] = "\49";
          [28] = "\91";
          [29] = "\57";
          [30] = "\61";
          [31] = "\70";
          [32] = "\114";
          [33] = "\97";
          [34] = "\66";
          [35] = "\110";
          [36] = "\103";
          [37] = "\72";
          [38] = "\116";
          [39] = "\104";
          [40] = "\89";
          [41] = "\36";
          [42] = "\105";
          [43] = "\85";
          [44] = "\107";
          [45] = "\76";
          [46] = "\67";
          [47] = "\109";
          [48] = "\111";
          [49] = "\81";
          [50] = "\59";
          [51] = "\115";
          [52] = "\45";
          [53] = "\45";
          [54] = "\55";
          [55] = "\91";
          [56] = "\115";
          [57] = "\104";
     };
     [22] = {
          [1] = "\119";
          [2] = "\98";
          [3] = "\90";
          [4] = "\117";
          [5] = "\64";
          [6] = "\108";
          [7] = "\78";
          [8] = "\40";
          [9] = "\114";
          [10] = "\54";
          [11] = "\72";
          [12] = "\49";
          [13] = "\111";
          [14] = "\97";
          [15] = "\37";
          [16] = "\113";
          [17] = "\117";
          [18] = "\113";
          [19] = "\101";
          [20] = "\69";
          [21] = "\101";
          [22] = "\114";
          [23] = "\33";
          [24] = "\54";
          [25] = "\55";
          [26] = "\97";
          [27] = "\48";
          [28] = "\46";
          [29] = "\121";
          [30] = "\47";
          [31] = "\79";
          [32] = "\58";
          [33] = "\35";
          [34] = "\74";
          [35] = "\89";
          [36] = "\110";
          [37] = "\83";
          [38] = "\109";
          [39] = "\87";
          [40] = "\94";
          [41] = "\82";
          [42] = "\111";
          [43] = "\37";
          [44] = "\69";
          [45] = "\114";
          [46] = "\113";
          [47] = "\81";
          [48] = "\70";
          [49] = "\99";
          [50] = "\97";
          [51] = "\121";
          [52] = "\55";
          [53] = "\119";
          [54] = "\84";
          [55] = "\88";
          [56] = "\61";
     };
     [23] = {
          [1] = "\111";
          [2] = "\107";
          [3] = "\45";
          [4] = "\56";
          [5] = "\103";
          [6] = "\40";
          [7] = "\122";
          [8] = "\76";
          [9] = "\86";
          [10] = "\110";
          [11] = "\94";
          [12] = "\66";
          [13] = "\73";
          [14] = "\33";
          [15] = "\108";
          [16] = "\103";
          [17] = "\98";
          [18] = "\46";
          [19] = "\83";
          [20] = "\103";
          [21] = "\100";
          [22] = "\111";
          [23] = "\93";
          [24] = "\44";
          [25] = "\115";
          [26] = "\77";
          [27] = "\86";
          [28] = "\121";
          [29] = "\99";
          [30] = "\81";
          [31] = "\71";
          [32] = "\87";
          [33] = "\67";
          [34] = "\91";
          [35] = "\115";
          [36] = "\44";
          [37] = "\69";
          [38] = "\36";
          [39] = "\120";
          [40] = "\82";
          [41] = "\87";
          [42] = "\56";
          [43] = "\67";
          [44] = "\69";
          [45] = "\59";
          [46] = "\117";
          [47] = "\115";
          [48] = "\45";
          [49] = "\61";
          [50] = "\83";
          [51] = "\121";
          [52] = "\56";
          [53] = "\78";
          [54] = "\83";
     };
     [24] = {
          [1] = "\99";
          [2] = "\99";
          [3] = "\116";
          [4] = "\52";
          [5] = "\42";
          [6] = "\68";
          [7] = "\45";
          [8] = "\57";
          [9] = "\97";
          [10] = "\93";
          [11] = "\45";
          [12] = "\85";
          [13] = "\73";
          [14] = "\42";
          [15] = "\94";
          [16] = "\102";
          [17] = "\48";
          [18] = "\79";
          [19] = "\114";
          [20] = "\35";
          [21] = "\43";
          [22] = "\98";
          [23] = "\107";
          [24] = "\97";
          [25] = "\57";
          [26] = "\85";
          [27] = "\93";
          [28] = "\49";
          [29] = "\49";
          [30] = "\51";
          [31] = "\119";
          [32] = "\103";
          [33] = "\94";
          [34] = "\35";
          [35] = "\110";
          [36] = "\72";
          [37] = "\66";
          [38] = "\50";
          [39] = "\112";
          [40] = "\35";
          [41] = "\117";
          [42] = "\51";
          [43] = "\78";
          [44] = "\40";
          [45] = "\54";
          [46] = "\83";
          [47] = "\49";
          [48] = "\110";
          [49] = "\33";
          [50] = "\109";
          [51] = "\103";
          [52] = "\61";
          [53] = "\58";
          [54] = "\72";
          [55] = "\101";
          [56] = "\67";
          [57] = "\40";
          [58] = "\42";
          [59] = "\52";
          [60] = "\94";
     };
     [25] = {
          [1] = "\47";
          [2] = "\46";
          [3] = "\33";
          [4] = "\101";
          [5] = "\109";
          [6] = "\56";
          [7] = "\93";
          [8] = "\67";
          [9] = "\41";
          [10] = "\87";
          [11] = "\73";
          [12] = "\61";
          [13] = "\72";
          [14] = "\50";
          [15] = "\105";
          [16] = "\69";
          [17] = "\93";
          [18] = "\54";
          [19] = "\114";
          [20] = "\36";
          [21] = "\83";
          [22] = "\103";
          [23] = "\45";
          [24] = "\117";
          [25] = "\44";
          [26] = "\58";
          [27] = "\91";
          [28] = "\40";
          [29] = "\64";
          [30] = "\36";
          [31] = "\47";
          [32] = "\33";
          [33] = "\43";
          [34] = "\56";
          [35] = "\116";
          [36] = "\122";
          [37] = "\45";
          [38] = "\115";
          [39] = "\116";
          [40] = "\48";
          [41] = "\105";
          [42] = "\80";
          [43] = "\70";
          [44] = "\78";
          [45] = "\114";
          [46] = "\86";
          [47] = "\120";
          [48] = "\35";
          [49] = "\116";
          [50] = "\56";
          [51] = "\35";
          [52] = "\78";
          [53] = "\69";
          [54] = "\56";
          [55] = "\68";
     };
     [26] = {
          [1] = "\77";
          [2] = "\46";
          [3] = "\46";
          [4] = "\116";
          [5] = "\98";
          [6] = "\110";
          [7] = "\74";
          [8] = "\74";
          [9] = "\105";
          [10] = "\94";
          [11] = "\56";
          [12] = "\119";
          [13] = "\84";
          [14] = "\104";
          [15] = "\119";
          [16] = "\45";
          [17] = "\97";
          [18] = "\84";
          [19] = "\44";
          [20] = "\67";
          [21] = "\85";
          [22] = "\105";
          [23] = "\103";
          [24] = "\50";
          [25] = "\100";
          [26] = "\51";
          [27] = "\80";
          [28] = "\76";
          [29] = "\102";
          [30] = "\109";
          [31] = "\80";
          [32] = "\70";
          [33] = "\88";
          [34] = "\75";
          [35] = "\50";
          [36] = "\121";
          [37] = "\38";
          [38] = "\54";
          [39] = "\55";
          [40] = "\44";
          [41] = "\75";
          [42] = "\71";
          [43] = "\99";
          [44] = "\54";
          [45] = "\44";
          [46] = "\99";
          [47] = "\101";
          [48] = "\72";
          [49] = "\57";
          [50] = "\78";
          [51] = "\120";
          [52] = "\114";
          [53] = "\68";
          [54] = "\87";
          [55] = "\59";
     };
     [27] = {
          [1] = "\113";
          [2] = "\77";
          [3] = "\100";
          [4] = "\105";
          [5] = "\93";
          [6] = "\70";
          [7] = "\53";
          [8] = "\110";
          [9] = "\76";
          [10] = "\57";
          [11] = "\118";
          [12] = "\111";
          [13] = "\84";
          [14] = "\104";
          [15] = "\114";
          [16] = "\83";
          [17] = "\37";
          [18] = "\46";
          [19] = "\49";
          [20] = "\54";
          [21] = "\97";
          [22] = "\38";
          [23] = "\87";
          [24] = "\93";
          [25] = "\45";
          [26] = "\94";
          [27] = "\80";
          [28] = "\120";
          [29] = "\90";
          [30] = "\85";
          [31] = "\76";
          [32] = "\54";
          [33] = "\91";
          [34] = "\78";
          [35] = "\104";
          [36] = "\33";
          [37] = "\82";
          [38] = "\42";
          [39] = "\97";
          [40] = "\105";
          [41] = "\85";
          [42] = "\41";
          [43] = "\117";
          [44] = "\99";
          [45] = "\67";
          [46] = "\58";
          [47] = "\104";
          [48] = "\38";
          [49] = "\52";
          [50] = "\110";
          [51] = "\40";
          [52] = "\80";
          [53] = "\47";
          [54] = "\97";
          [55] = "\44";
          [56] = "\120";
          [57] = "\109";
     };
     [28] = {
          [1] = "\108";
          [2] = "\49";
          [3] = "\38";
          [4] = "\87";
          [5] = "\108";
          [6] = "\113";
          [7] = "\75";
          [8] = "\109";
          [9] = "\102";
          [10] = "\94";
          [11] = "\88";
          [12] = "\108";
          [13] = "\64";
          [14] = "\93";
          [15] = "\112";
          [16] = "\115";
          [17] = "\83";
          [18] = "\57";
          [19] = "\49";
          [20] = "\67";
          [21] = "\74";
          [22] = "\116";
          [23] = "\122";
          [24] = "\116";
          [25] = "\33";
          [26] = "\49";
          [27] = "\68";
          [28] = "\94";
          [29] = "\32";
          [30] = "\36";
          [31] = "\89";
          [32] = "\106";
          [33] = "\97";
          [34] = "\111";
          [35] = "\76";
          [36] = "\101";
          [37] = "\97";
          [38] = "\89";
          [39] = "\79";
          [40] = "\113";
          [41] = "\52";
          [42] = "\73";
          [43] = "\73";
          [44] = "\71";
          [45] = "\79";
          [46] = "\109";
          [47] = "\79";
          [48] = "\98";
          [49] = "\98";
          [50] = "\110";
          [51] = "\36";
          [52] = "\104";
          [53] = "\42";
          [54] = "\69";
          [55] = "\48";
          [56] = "\105";
          [57] = "\120";
          [58] = "\45";
          [59] = "\93";
          [60] = "\105";
          [61] = "\72";
          [62] = "\112";
          [63] = "\99";
          [64] = "\103";
          [65] = "\89";
          [66] = "\111";
          [67] = "\107";
          [68] = "\107";
          [69] = "\81";
          [70] = "\108";
          [71] = "\50";
     };
     [29] = {
          [1] = "\46";
          [2] = "\52";
          [3] = "\103";
          [4] = "\77";
          [5] = "\121";
          [6] = "\118";
          [7] = "\61";
          [8] = "\103";
          [9] = "\89";
          [10] = "\111";
          [11] = "\52";
          [12] = "\52";
          [13] = "\90";
          [14] = "\98";
          [15] = "\33";
          [16] = "\41";
          [17] = "\73";
          [18] = "\46";
          [19] = "\82";
          [20] = "\108";
          [21] = "\110";
          [22] = "\104";
          [23] = "\122";
          [24] = "\94";
          [25] = "\40";
          [26] = "\93";
          [27] = "\67";
          [28] = "\100";
          [29] = "\105";
          [30] = "\103";
          [31] = "\42";
          [32] = "\78";
          [33] = "\94";
          [34] = "\120";
          [35] = "\42";
          [36] = "\37";
          [37] = "\82";
          [38] = "\44";
          [39] = "\50";
          [40] = "\52";
          [41] = "\110";
          [42] = "\98";
          [43] = "\42";
          [44] = "\61";
          [45] = "\104";
          [46] = "\36";
          [47] = "\88";
          [48] = "\46";
          [49] = "\74";
          [50] = "\48";
          [51] = "\119";
          [52] = "\33";
          [53] = "\67";
          [54] = "\94";
          [55] = "\110";
     };
     [30] = {
          [1] = "\46";
          [2] = "\57";
          [3] = "\42";
          [4] = "\80";
          [5] = "\90";
          [6] = "\51";
          [7] = "\76";
          [8] = "\49";
          [9] = "\45";
          [10] = "\75";
          [11] = "\98";
          [12] = "\53";
          [13] = "\82";
          [14] = "\104";
          [15] = "\40";
          [16] = "\76";
          [17] = "\106";
          [18] = "\93";
          [19] = "\67";
          [20] = "\80";
          [21] = "\51";
          [22] = "\37";
          [23] = "\45";
          [24] = "\78";
          [25] = "\102";
          [26] = "\71";
          [27] = "\112";
          [28] = "\59";
          [29] = "\88";
          [30] = "\61";
          [31] = "\74";
          [32] = "\51";
          [33] = "\105";
          [34] = "\120";
          [35] = "\114";
          [36] = "\77";
          [37] = "\41";
          [38] = "\68";
          [39] = "\56";
          [40] = "\83";
          [41] = "\74";
          [42] = "\97";
          [43] = "\74";
          [44] = "\49";
          [45] = "\58";
          [46] = "\67";
          [47] = "\44";
          [48] = "\41";
          [49] = "\93";
          [50] = "\108";
          [51] = "\103";
          [52] = "\37";
     };
     [31] = {
          [1] = "\59";
          [2] = "\122";
          [3] = "\52";
          [4] = "\103";
          [5] = "\50";
          [6] = "\111";
          [7] = "\43";
          [8] = "\40";
          [9] = "\108";
          [10] = "\107";
          [11] = "\113";
          [12] = "\99";
          [13] = "\121";
          [14] = "\104";
          [15] = "\121";
          [16] = "\77";
          [17] = "\101";
          [18] = "\98";
          [19] = "\90";
          [20] = "\99";
          [21] = "\111";
          [22] = "\114";
          [23] = "\55";
          [24] = "\41";
          [25] = "\117";
          [26] = "\116";
          [27] = "\66";
          [28] = "\120";
          [29] = "\61";
          [30] = "\81";
          [31] = "\103";
          [32] = "\90";
          [33] = "\74";
          [34] = "\71";
          [35] = "\82";
          [36] = "\51";
          [37] = "\76";
          [38] = "\70";
          [39] = "\38";
          [40] = "\120";
          [41] = "\55";
          [42] = "\42";
          [43] = "\82";
          [44] = "\110";
          [45] = "\37";
          [46] = "\100";
          [47] = "\70";
          [48] = "\55";
          [49] = "\110";
          [50] = "\66";
          [51] = "\47";
          [52] = "\42";
          [53] = "\83";
          [54] = "\49";
          [55] = "\54";
          [56] = "\64";
     };
     [32] = {
          [1] = "\97";
          [2] = "\47";
          [3] = "\35";
          [4] = "\46";
          [5] = "\68";
          [6] = "\118";
          [7] = "\53";
          [8] = "\41";
          [9] = "\119";
          [10] = "\38";
          [11] = "\54";
          [12] = "\98";
          [13] = "\71";
          [14] = "\111";
          [15] = "\75";
          [16] = "\35";
          [17] = "\40";
          [18] = "\55";
          [19] = "\38";
          [20] = "\85";
          [21] = "\41";
          [22] = "\75";
          [23] = "\83";
          [24] = "\50";
          [25] = "\59";
          [26] = "\77";
          [27] = "\111";
          [28] = "\48";
          [29] = "\40";
          [30] = "\73";
          [31] = "\108";
          [32] = "\100";
          [33] = "\97";
          [34] = "\93";
          [35] = "\109";
          [36] = "\35";
          [37] = "\42";
          [38] = "\80";
          [39] = "\68";
          [40] = "\46";
          [41] = "\82";
          [42] = "\81";
          [43] = "\33";
          [44] = "\114";
          [45] = "\36";
          [46] = "\79";
          [47] = "\108";
          [48] = "\98";
          [49] = "\47";
          [50] = "\97";
          [51] = "\116";
          [52] = "\110";
          [53] = "\99";
          [54] = "\79";
     };
     [33] = {
          [1] = "\45";
          [2] = "\78";
          [3] = "\82";
          [4] = "\99";
          [5] = "\111";
          [6] = "\51";
          [7] = "\68";
          [8] = "\81";
          [9] = "\80";
          [10] = "\104";
          [11] = "\38";
          [12] = "\49";
          [13] = "\100";
          [14] = "\117";
          [15] = "\116";
          [16] = "\46";
          [17] = "\117";
          [18] = "\57";
          [19] = "\101";
          [20] = "\77";
          [21] = "\68";
          [22] = "\77";
          [23] = "\101";
          [24] = "\98";
          [25] = "\108";
          [26] = "\45";
          [27] = "\78";
          [28] = "\41";
          [29] = "\33";
          [30] = "\118";
          [31] = "\50";
          [32] = "\36";
          [33] = "\121";
          [34] = "\75";
          [35] = "\73";
          [36] = "\120";
          [37] = "\97";
          [38] = "\50";
          [39] = "\79";
          [40] = "\101";
          [41] = "\102";
          [42] = "\88";
          [43] = "\69";
          [44] = "\108";
          [45] = "\122";
          [46] = "\115";
          [47] = "\89";
          [48] = "\66";
          [49] = "\46";
          [50] = "\57";
          [51] = "\67";
          [52] = "\80";
          [53] = "\47";
          [54] = "\118";
          [55] = "\42";
          [56] = "\94";
          [57] = "\117";
     };
     [34] = {
          [1] = "\53";
          [2] = "\73";
          [3] = "\44";
          [4] = "\56";
          [5] = "\80";
          [6] = "\43";
          [7] = "\119";
          [8] = "\77";
          [9] = "\100";
          [10] = "\79";
          [11] = "\83";
          [12] = "\93";
          [13] = "\101";
          [14] = "\76";
          [15] = "\98";
          [16] = "\109";
          [17] = "\75";
          [18] = "\83";
          [19] = "\111";
          [20] = "\114";
          [21] = "\106";
          [22] = "\82";
          [23] = "\71";
          [24] = "\98";
          [25] = "\77";
          [26] = "\112";
          [27] = "\114";
          [28] = "\108";
          [29] = "\87";
          [30] = "\76";
          [31] = "\99";
          [32] = "\116";
          [33] = "\79";
          [34] = "\100";
          [35] = "\89";
          [36] = "\45";
          [37] = "\116";
          [38] = "\49";
          [39] = "\53";
          [40] = "\115";
          [41] = "\73";
          [42] = "\107";
          [43] = "\75";
          [44] = "\58";
          [45] = "\67";
          [46] = "\38";
          [47] = "\37";
          [48] = "\72";
          [49] = "\116";
          [50] = "\41";
          [51] = "\115";
          [52] = "\97";
          [53] = "\51";
          [54] = "\70";
          [55] = "\98";
          [56] = "\117";
          [57] = "\46";
          [58] = "\109";
          [59] = "\50";
          [60] = "\55";
          [61] = "\107";
     };
     [35] = {
          [1] = "\91";
          [2] = "\72";
          [3] = "\80";
          [4] = "\46";
          [5] = "\79";
          [6] = "\48";
          [7] = "\77";
          [8] = "\77";
          [9] = "\84";
          [10] = "\99";
          [11] = "\72";
          [12] = "\53";
          [13] = "\106";
          [14] = "\83";
          [15] = "\44";
          [16] = "\61";
          [17] = "\101";
          [18] = "\107";
          [19] = "\66";
          [20] = "\93";
          [21] = "\33";
          [22] = "\109";
          [23] = "\82";
          [24] = "\111";
          [25] = "\50";
          [26] = "\111";
          [27] = "\47";
          [28] = "\64";
          [29] = "\120";
          [30] = "\105";
          [31] = "\118";
          [32] = "\105";
          [33] = "\87";
          [34] = "\121";
          [35] = "\118";
          [36] = "\121";
          [37] = "\48";
          [38] = "\87";
          [39] = "\54";
          [40] = "\111";
          [41] = "\90";
          [42] = "\43";
          [43] = "\35";
          [44] = "\107";
          [45] = "\41";
          [46] = "\59";
          [47] = "\85";
          [48] = "\81";
          [49] = "\88";
          [50] = "\103";
          [51] = "\87";
          [52] = "\79";
          [53] = "\75";
          [54] = "\85";
          [55] = "\120";
     };
     [36] = {
          [1] = "\107";
          [2] = "\107";
          [3] = "\74";
          [4] = "\111";
          [5] = "\116";
          [6] = "\115";
          [7] = "\68";
          [8] = "\101";
          [9] = "\101";
          [10] = "\93";
          [11] = "\100";
          [12] = "\46";
          [13] = "\97";
          [14] = "\44";
          [15] = "\114";
          [16] = "\88";
          [17] = "\45";
          [18] = "\107";
          [19] = "\41";
          [20] = "\109";
          [21] = "\85";
          [22] = "\112";
          [23] = "\105";
          [24] = "\94";
          [25] = "\45";
          [26] = "\36";
          [27] = "\98";
          [28] = "\112";
          [29] = "\116";
          [30] = "\40";
          [31] = "\88";
          [32] = "\47";
          [33] = "\99";
          [34] = "\116";
          [35] = "\98";
          [36] = "\109";
          [37] = "\79";
          [38] = "\38";
          [39] = "\108";
          [40] = "\108";
          [41] = "\57";
          [42] = "\105";
          [43] = "\122";
          [44] = "\45";
          [45] = "\72";
          [46] = "\46";
          [47] = "\71";
          [48] = "\99";
          [49] = "\35";
          [50] = "\33";
          [51] = "\67";
          [52] = "\40";
          [53] = "\57";
          [54] = "\110";
          [55] = "\97";
          [56] = "\64";
          [57] = "\42";
          [58] = "\90";
          [59] = "\48";
          [60] = "\40";
          [61] = "\59";
          [62] = "\111";
          [63] = "\82";
          [64] = "\44";
          [65] = "\57";
          [66] = "\97";
          [67] = "\82";
          [68] = "\88";
          [69] = "\61";
          [70] = "\59";
          [71] = "\35";
          [72] = "\117";
          [73] = "\116";
          [74] = "\119";
          [75] = "\70";
     };
     [38] = false;
     [44] = "\51\52\100\49\55\102\52\55\98\50\55\49\102\54\54\97\101\49\102\56\56\55\55\51\52\101\53\51\48\53\52\51";
     [45] = "\67\111\110\116\101\110\116\45\84\121\112\101";
     [46] = "\67\111\110\110\101\99\116\105\111\110\45\73\100";
     [47] = "\75\101\121";
     [48] = "\73\118";
     [49] = "\51\52\100\49\55\102\52\55\98\50\55\49\102\54\54\97\101\49\102\56\56\55\55\51\52\101\53\51\48\53\52\51";
     [51] = "\66\111\100\121";
     [52] = "\72\101\97\100\101\114\115";
     [53] = "\87\104\105\116\101\108\105\115\116\32\65\117\116\104\32\70\97\105\108\101\100";
     [81] = "\100";
     [82] = "\111";
     [83] = "\109";
     [84] = "\99";
     [85] = "\35";
     [86] = "\33";
     [0] = {
          [1] = "\76";
          [2] = "\51";
          [3] = "\49";
          [4] = "\101";
          [5] = "\52";
          [6] = "\49";
          [7] = "\55";
          [8] = "\107";
          [9] = "\101";
          [10] = "\61";
          [11] = "\53";
          [12] = "\52";
          [13] = "\102";
          [14] = "\78";
          [15] = "\50";
          [16] = "\103";
          [17] = "\51";
          [18] = "\98";
          [19] = "\116";
          [20] = "\102";
          [21] = "\54";
          [22] = "\100";
          [23] = "\71";
          [24] = "\49";
          [25] = "\89";
          [26] = "\110";
          [27] = "\89";
          [28] = "\115";
          [29] = "\51";
          [30] = "\111";
          [31] = "\68";
          [32] = "\36";
          [33] = "\77";
          [34] = "\97";
          [35] = "\52";
          [36] = "\113";
          [37] = "\90";
          [38] = "\48";
          [39] = "\80";
          [40] = "\102";
          [41] = "\74";
          [42] = "\54";
          [43] = "\42";
          [44] = "\87";
          [45] = "\56";
          [46] = "\55";
          [47] = "\33";
          [48] = "\101";
          [49] = "\53";
          [50] = "\40";
          [51] = "\53";
          [52] = "\51";
          [53] = "\122";
          [54] = "\50";
          [55] = "\37";
          [56] = "\52";
          [57] = "\55";
          [58] = "\55";
          [59] = "\45";
          [60] = "\88";
          [61] = "\97";
          [62] = "\52";
          [63] = "\55";
          [64] = "\68";
          [65] = "\99";
          [66] = "\56";
          [67] = "\70";
          [68] = "\111";
          [69] = "\33";
          [70] = "\85";
          [71] = "\97";
          [72] = "\115";
          [73] = "\79";
          [74] = "\112";
          [75] = "\111";
          [76] = "\55";
          [77] = "\58";
          [78] = "\90";
          [79] = "\35";
          [80] = "\70";
          [81] = "\40";
          [82] = "\51";
          [83] = "\50";
     };
};

																							WriteStk(Stk, nStk);
																						end;

																						(qN)[CN] = qN[CN]();

																						if CN == 80 then
																							-- print('WLRet:', qN[CN]);
																							-- writefile('PostWLStk.bin', fTable(qN));

																							local nStk = {
     [1] = {
          [1] = "\67";
          [2] = "\68";
          [3] = "\99";
          [4] = "\66";
          [5] = "\51";
          [6] = "\111";
          [7] = "\72";
          [8] = "\116";
          [9] = "\108";
          [10] = "\76";
          [11] = "\82";
          [12] = "\111";
          [13] = "\43";
          [14] = "\112";
          [15] = "\40";
          [16] = "\110";
          [17] = "\46";
          [18] = "\113";
          [19] = "\109";
          [20] = "\103";
          [21] = "\53";
          [22] = "\115";
          [23] = "\121";
          [24] = "\41";
          [25] = "\86";
          [26] = "\42";
          [27] = "\121";
          [28] = "\121";
          [29] = "\105";
          [30] = "\106";
          [31] = "\66";
          [32] = "\43";
          [33] = "\74";
          [34] = "\99";
          [35] = "\64";
          [36] = "\68";
          [37] = "\112";
          [38] = "\75";
          [39] = "\110";
          [40] = "\101";
          [41] = "\84";
          [42] = "\113";
          [43] = "\112";
          [44] = "\94";
          [45] = "\37";
          [46] = "\93";
          [47] = "\59";
          [48] = "\82";
          [49] = "\38";
          [50] = "\78";
          [51] = "\68";
          [52] = "\107";
          [53] = "\101";
          [54] = "\45";
          [55] = "\75";
          [56] = "\98";
          [57] = "\97";
          [58] = "\88";
          [59] = "\116";
          [60] = "\46";
          [61] = "\107";
          [62] = "\98";
          [63] = "\121";
     };
     [2] = {
          [1] = "\88";
          [2] = "\116";
          [3] = "\38";
          [4] = "\46";
          [5] = "\115";
          [6] = "\90";
          [7] = "\97";
          [8] = "\33";
          [9] = "\106";
          [10] = "\111";
          [11] = "\69";
          [12] = "\93";
          [13] = "\110";
          [14] = "\105";
          [15] = "\68";
          [16] = "\109";
          [17] = "\111";
          [18] = "\36";
          [19] = "\80";
          [20] = "\109";
          [21] = "\119";
          [22] = "\116";
          [23] = "\105";
          [24] = "\85";
          [25] = "\101";
          [26] = "\102";
          [27] = "\110";
          [28] = "\117";
          [29] = "\83";
          [30] = "\67";
          [31] = "\42";
          [32] = "\88";
          [33] = "\35";
          [34] = "\110";
          [35] = "\43";
          [36] = "\111";
          [37] = "\90";
          [38] = "\107";
          [39] = "\37";
          [40] = "\45";
          [41] = "\44";
          [42] = "\33";
          [43] = "\61";
          [44] = "\83";
          [45] = "\55";
          [46] = "\67";
          [47] = "\93";
          [48] = "\120";
          [49] = "\52";
          [50] = "\119";
          [51] = "\111";
          [52] = "\100";
          [53] = "\73";
          [54] = "\75";
          [55] = "\44";
          [56] = "\99";
          [57] = "\122";
          [58] = "\98";
          [59] = "\38";
          [60] = "\58";
          [61] = "\47";
          [62] = "\85";
          [63] = "\75";
          [64] = "\91";
     };
     [3] = {
          [1] = "\117";
          [2] = "\75";
          [3] = "\75";
          [4] = "\98";
          [5] = "\38";
          [6] = "\56";
          [7] = "\46";
          [8] = "\48";
          [9] = "\99";
          [10] = "\80";
          [11] = "\64";
          [12] = "\41";
          [13] = "\76";
          [14] = "\38";
          [15] = "\37";
          [16] = "\108";
          [17] = "\101";
          [18] = "\107";
          [19] = "\121";
          [20] = "\69";
          [21] = "\41";
          [22] = "\87";
          [23] = "\50";
          [24] = "\46";
          [25] = "\73";
          [26] = "\44";
          [27] = "\105";
          [28] = "\99";
          [29] = "\74";
          [30] = "\53";
          [31] = "\93";
          [32] = "\83";
          [33] = "\79";
          [34] = "\38";
          [35] = "\97";
          [36] = "\122";
          [37] = "\94";
          [38] = "\86";
          [39] = "\80";
          [40] = "\91";
          [41] = "\105";
          [42] = "\110";
          [43] = "\112";
          [44] = "\59";
          [45] = "\52";
          [46] = "\88";
          [47] = "\88";
          [48] = "\112";
          [49] = "\48";
          [50] = "\44";
          [51] = "\56";
          [52] = "\84";
          [53] = "\72";
          [54] = "\97";
     };
     [4] = {
          [1] = "\84";
          [2] = "\78";
          [3] = "\57";
          [4] = "\94";
          [5] = "\73";
          [6] = "\79";
          [7] = "\54";
          [8] = "\118";
          [9] = "\106";
          [10] = "\98";
          [11] = "\90";
          [12] = "\85";
          [13] = "\33";
          [14] = "\104";
          [15] = "\91";
          [16] = "\40";
          [17] = "\58";
          [18] = "\61";
          [19] = "\83";
          [20] = "\114";
          [21] = "\118";
          [22] = "\85";
          [23] = "\82";
          [24] = "\76";
          [25] = "\57";
          [26] = "\35";
          [27] = "\56";
          [28] = "\114";
          [29] = "\106";
          [30] = "\114";
          [31] = "\122";
          [32] = "\91";
          [33] = "\66";
          [34] = "\61";
          [35] = "\43";
          [36] = "\58";
          [37] = "\121";
          [38] = "\38";
          [39] = "\86";
          [40] = "\49";
          [41] = "\110";
          [42] = "\102";
          [43] = "\83";
          [44] = "\108";
          [45] = "\58";
          [46] = "\51";
          [47] = "\48";
          [48] = "\76";
          [49] = "\98";
          [50] = "\55";
          [51] = "\37";
          [52] = "\120";
          [53] = "\46";
     };
     [5] = {
          [1] = "\77";
          [2] = "\59";
          [3] = "\85";
          [4] = "\110";
          [5] = "\59";
          [6] = "\37";
          [7] = "\79";
          [8] = "\67";
          [9] = "\110";
          [10] = "\112";
          [11] = "\110";
          [12] = "\61";
          [13] = "\57";
          [14] = "\121";
          [15] = "\103";
          [16] = "\38";
          [17] = "\56";
          [18] = "\100";
          [19] = "\41";
          [20] = "\81";
          [21] = "\45";
          [22] = "\69";
          [23] = "\79";
          [24] = "\100";
          [25] = "\33";
          [26] = "\73";
          [27] = "\103";
          [28] = "\105";
          [29] = "\53";
          [30] = "\119";
          [31] = "\113";
          [32] = "\107";
          [33] = "\70";
          [34] = "\51";
          [35] = "\120";
          [36] = "\118";
          [37] = "\41";
          [38] = "\99";
          [39] = "\54";
          [40] = "\67";
          [41] = "\91";
          [42] = "\49";
          [43] = "\116";
          [44] = "\75";
          [45] = "\102";
          [46] = "\72";
          [47] = "\67";
          [48] = "\105";
          [49] = "\38";
          [50] = "\69";
          [51] = "\47";
          [52] = "\108";
          [53] = "\86";
          [54] = "\98";
          [55] = "\113";
     };
     [6] = {
          [1] = "\42";
          [2] = "\61";
          [3] = "\59";
          [4] = "\111";
          [5] = "\117";
          [6] = "\71";
          [7] = "\91";
          [8] = "\66";
          [9] = "\44";
          [10] = "\114";
          [11] = "\115";
          [12] = "\37";
          [13] = "\40";
          [14] = "\111";
          [15] = "\109";
          [16] = "\111";
          [17] = "\80";
          [18] = "\121";
          [19] = "\111";
          [20] = "\121";
          [21] = "\49";
          [22] = "\111";
          [23] = "\121";
          [24] = "\75";
          [25] = "\100";
          [26] = "\79";
          [27] = "\112";
          [28] = "\105";
          [29] = "\89";
          [30] = "\53";
          [31] = "\52";
          [32] = "\100";
          [33] = "\35";
          [34] = "\45";
          [35] = "\40";
          [36] = "\100";
          [37] = "\91";
          [38] = "\113";
          [39] = "\86";
          [40] = "\114";
          [41] = "\77";
          [42] = "\101";
          [43] = "\73";
          [44] = "\82";
          [45] = "\102";
          [46] = "\79";
          [47] = "\40";
          [48] = "\112";
          [49] = "\52";
          [50] = "\108";
          [51] = "\55";
          [52] = "\57";
          [53] = "\112";
          [54] = "\103";
          [55] = "\76";
     };
     [7] = {
          [1] = "\72";
          [2] = "\101";
          [3] = "\116";
          [4] = "\36";
          [5] = "\101";
          [6] = "\122";
          [7] = "\75";
          [8] = "\117";
          [9] = "\72";
          [10] = "\103";
          [11] = "\93";
          [12] = "\79";
          [13] = "\115";
          [14] = "\61";
          [15] = "\71";
          [16] = "\112";
          [17] = "\74";
          [18] = "\117";
          [19] = "\61";
          [20] = "\103";
          [21] = "\100";
          [22] = "\120";
          [23] = "\114";
          [24] = "\107";
          [25] = "\33";
          [26] = "\54";
          [27] = "\87";
          [28] = "\97";
          [29] = "\89";
          [30] = "\83";
          [31] = "\54";
          [32] = "\50";
          [33] = "\97";
          [34] = "\93";
          [35] = "\84";
          [36] = "\91";
          [37] = "\90";
          [38] = "\89";
          [39] = "\41";
          [40] = "\120";
          [41] = "\43";
          [42] = "\67";
          [43] = "\61";
          [44] = "\79";
          [45] = "\37";
          [46] = "\89";
          [47] = "\84";
          [48] = "\85";
          [49] = "\103";
          [50] = "\41";
          [51] = "\120";
          [52] = "\80";
          [53] = "\66";
          [54] = "\55";
          [55] = "\89";
          [56] = "\57";
          [57] = "\81";
          [58] = "\78";
     };
     [8] = {
          [1] = "\80";
          [2] = "\108";
          [3] = "\75";
          [4] = "\87";
          [5] = "\116";
          [6] = "\47";
          [7] = "\79";
          [8] = "\32";
          [9] = "\58";
          [10] = "\107";
          [11] = "\64";
          [12] = "\76";
          [13] = "\117";
          [14] = "\61";
          [15] = "\70";
          [16] = "\103";
          [17] = "\104";
          [18] = "\89";
          [19] = "\122";
          [20] = "\97";
          [21] = "\101";
          [22] = "\82";
          [23] = "\42";
          [24] = "\100";
          [25] = "\75";
          [26] = "\116";
          [27] = "\108";
          [28] = "\116";
          [29] = "\69";
          [30] = "\101";
          [31] = "\105";
          [32] = "\65";
          [33] = "\74";
          [34] = "\67";
          [35] = "\81";
          [36] = "\45";
          [37] = "\45";
          [38] = "\82";
          [39] = "\97";
          [40] = "\72";
          [41] = "\104";
          [42] = "\59";
          [43] = "\82";
          [44] = "\104";
          [45] = "\46";
          [46] = "\118";
          [47] = "\110";
          [48] = "\48";
          [49] = "\84";
          [50] = "\44";
          [51] = "\102";
          [52] = "\87";
          [53] = "\104";
          [54] = "\99";
          [55] = "\91";
          [56] = "\105";
          [57] = "\70";
          [58] = "\110";
          [59] = "\115";
          [60] = "\86";
          [61] = "\100";
          [62] = "\99";
          [63] = "\46";
          [64] = "\66";
          [65] = "\119";
          [66] = "\35";
          [67] = "\105";
          [68] = "\46";
          [69] = "\98";
          [70] = "\83";
          [71] = "\59";
          [72] = "\32";
     };
     [9] = {
          [1] = "\36";
          [2] = "\67";
          [3] = "\66";
          [4] = "\108";
          [5] = "\122";
          [6] = "\114";
          [7] = "\33";
          [8] = "\35";
          [9] = "\68";
          [10] = "\48";
          [11] = "\113";
          [12] = "\45";
          [13] = "\117";
          [14] = "\56";
          [15] = "\110";
          [16] = "\46";
          [17] = "\49";
          [18] = "\44";
          [19] = "\48";
          [20] = "\111";
          [21] = "\101";
          [22] = "\57";
          [23] = "\79";
          [24] = "\117";
          [25] = "\58";
          [26] = "\50";
          [27] = "\101";
          [28] = "\108";
          [29] = "\98";
          [30] = "\100";
          [31] = "\79";
          [32] = "\111";
          [33] = "\85";
          [34] = "\116";
          [35] = "\48";
          [36] = "\59";
          [37] = "\40";
          [38] = "\86";
          [39] = "\73";
          [40] = "\53";
          [41] = "\120";
          [42] = "\85";
          [43] = "\49";
          [44] = "\94";
          [45] = "\113";
          [46] = "\108";
          [47] = "\93";
          [48] = "\108";
          [49] = "\76";
          [50] = "\52";
          [51] = "\68";
          [52] = "\66";
          [53] = "\59";
          [54] = "\111";
          [55] = "\52";
     };
     [10] = {
          [1] = "\91";
          [2] = "\97";
          [3] = "\110";
          [4] = "\99";
          [5] = "\100";
          [6] = "\98";
          [7] = "\106";
          [8] = "\70";
          [9] = "\89";
          [10] = "\117";
          [11] = "\76";
          [12] = "\49";
          [13] = "\73";
          [14] = "\33";
          [15] = "\85";
          [16] = "\76";
          [17] = "\76";
          [18] = "\99";
          [19] = "\66";
          [20] = "\49";
          [21] = "\48";
          [22] = "\80";
          [23] = "\110";
          [24] = "\59";
          [25] = "\61";
          [26] = "\84";
          [27] = "\91";
          [28] = "\57";
          [29] = "\78";
          [30] = "\50";
          [31] = "\82";
          [32] = "\121";
          [33] = "\98";
          [34] = "\87";
          [35] = "\117";
          [36] = "\121";
          [37] = "\79";
          [38] = "\82";
          [39] = "\89";
          [40] = "\118";
          [41] = "\80";
          [42] = "\38";
          [43] = "\75";
          [44] = "\87";
          [45] = "\100";
          [46] = "\61";
          [47] = "\35";
          [48] = "\107";
          [49] = "\102";
          [50] = "\71";
          [51] = "\53";
          [52] = "\99";
          [53] = "\66";
          [54] = "\121";
          [55] = "\74";
     };
     [11] = {
          [1] = "\98";
          [2] = "\110";
          [3] = "\87";
          [4] = "\120";
          [5] = "\90";
          [6] = "\113";
          [7] = "\50";
          [8] = "\81";
          [9] = "\86";
          [10] = "\117";
          [11] = "\113";
          [12] = "\74";
          [13] = "\71";
          [14] = "\112";
          [15] = "\73";
          [16] = "\42";
          [17] = "\111";
          [18] = "\71";
          [19] = "\116";
          [20] = "\78";
          [21] = "\56";
          [22] = "\80";
          [23] = "\79";
          [24] = "\86";
          [25] = "\85";
          [26] = "\112";
          [27] = "\54";
          [28] = "\41";
          [29] = "\35";
          [30] = "\112";
          [31] = "\97";
          [32] = "\116";
          [33] = "\104";
          [34] = "\75";
          [35] = "\91";
          [36] = "\98";
          [37] = "\64";
          [38] = "\91";
          [39] = "\45";
          [40] = "\77";
          [41] = "\58";
          [42] = "\78";
          [43] = "\115";
          [44] = "\70";
          [45] = "\87";
          [46] = "\102";
          [47] = "\58";
          [48] = "\77";
          [49] = "\89";
          [50] = "\85";
          [51] = "\113";
          [52] = "\52";
          [53] = "\99";
          [54] = "\51";
          [55] = "\121";
     };
     [12] = {
          [1] = "\38";
          [2] = "\112";
          [3] = "\101";
          [4] = "\77";
          [5] = "\82";
          [6] = "\115";
          [7] = "\68";
          [8] = "\78";
          [9] = "\86";
          [10] = "\88";
          [11] = "\61";
          [12] = "\110";
          [13] = "\35";
          [14] = "\48";
          [15] = "\77";
          [16] = "\116";
          [17] = "\42";
          [18] = "\101";
          [19] = "\57";
          [20] = "\86";
          [21] = "\53";
          [22] = "\107";
          [23] = "\49";
          [24] = "\46";
          [25] = "\73";
          [26] = "\50";
          [27] = "\84";
          [28] = "\73";
          [29] = "\104";
          [30] = "\102";
          [31] = "\105";
          [32] = "\99";
          [33] = "\104";
          [34] = "\37";
          [35] = "\75";
          [36] = "\102";
          [37] = "\71";
          [38] = "\53";
          [39] = "\87";
          [40] = "\117";
          [41] = "\85";
          [42] = "\40";
          [43] = "\105";
          [44] = "\100";
          [45] = "\91";
          [46] = "\122";
          [47] = "\40";
          [48] = "\117";
          [49] = "\114";
          [50] = "\42";
          [51] = "\64";
          [52] = "\120";
          [53] = "\94";
          [54] = "\86";
          [55] = "\70";
          [56] = "\113";
          [57] = "\101";
     };
     [13] = {
          [1] = "\105";
          [2] = "\104";
          [3] = "\110";
          [4] = "\115";
          [5] = "\61";
          [6] = "\61";
          [7] = "\115";
          [8] = "\116";
          [9] = "\102";
          [10] = "\54";
          [11] = "\68";
          [12] = "\68";
          [13] = "\115";
          [14] = "\122";
          [15] = "\82";
          [16] = "\114";
          [17] = "\40";
          [18] = "\35";
          [19] = "\70";
          [20] = "\110";
          [21] = "\41";
          [22] = "\112";
          [23] = "\99";
          [24] = "\75";
          [25] = "\73";
          [26] = "\119";
          [27] = "\77";
          [28] = "\42";
          [29] = "\43";
          [30] = "\86";
          [31] = "\101";
          [32] = "\113";
          [33] = "\70";
          [34] = "\78";
          [35] = "\88";
          [36] = "\61";
          [37] = "\78";
          [38] = "\108";
          [39] = "\43";
          [40] = "\105";
          [41] = "\44";
          [42] = "\68";
          [43] = "\74";
          [44] = "\80";
          [45] = "\100";
          [46] = "\108";
          [47] = "\67";
          [48] = "\107";
          [49] = "\41";
          [50] = "\108";
          [51] = "\78";
          [52] = "\117";
          [53] = "\40";
          [54] = "\107";
          [55] = "\112";
          [56] = "\111";
          [57] = "\81";
     };
     [14] = {
          [1] = "\114";
          [2] = "\57";
          [3] = "\118";
          [4] = "\83";
          [5] = "\43";
          [6] = "\79";
          [7] = "\87";
          [8] = "\73";
          [9] = "\122";
          [10] = "\122";
          [11] = "\71";
          [12] = "\94";
          [13] = "\119";
          [14] = "\98";
          [15] = "\78";
          [16] = "\52";
          [17] = "\97";
          [18] = "\51";
          [19] = "\121";
          [20] = "\93";
          [21] = "\46";
          [22] = "\70";
          [23] = "\111";
          [24] = "\37";
          [25] = "\72";
          [26] = "\79";
          [27] = "\106";
          [28] = "\104";
          [29] = "\98";
          [30] = "\74";
          [31] = "\66";
          [32] = "\85";
          [33] = "\80";
          [34] = "\109";
          [35] = "\33";
          [36] = "\114";
          [37] = "\49";
          [38] = "\54";
          [39] = "\83";
          [40] = "\49";
          [41] = "\47";
          [42] = "\48";
          [43] = "\36";
          [44] = "\86";
          [45] = "\76";
          [46] = "\58";
          [47] = "\36";
          [48] = "\73";
          [49] = "\48";
          [50] = "\73";
          [51] = "\43";
          [52] = "\70";
          [53] = "\98";
          [54] = "\116";
     };
     [15] = {
          [1] = "\83";
          [2] = "\85";
          [3] = "\38";
          [4] = "\41";
          [5] = "\74";
          [6] = "\119";
          [7] = "\40";
          [8] = "\107";
          [9] = "\71";
          [10] = "\80";
          [11] = "\121";
          [12] = "\59";
          [13] = "\112";
          [14] = "\114";
          [15] = "\45";
          [16] = "\99";
          [17] = "\94";
          [18] = "\88";
          [19] = "\74";
          [20] = "\43";
          [21] = "\116";
          [22] = "\61";
          [23] = "\58";
          [24] = "\94";
          [25] = "\69";
          [26] = "\72";
          [27] = "\88";
          [28] = "\102";
          [29] = "\57";
          [30] = "\74";
          [31] = "\97";
          [32] = "\114";
          [33] = "\98";
          [34] = "\107";
          [35] = "\58";
          [36] = "\115";
          [37] = "\86";
          [38] = "\97";
          [39] = "\119";
          [40] = "\101";
          [41] = "\83";
          [42] = "\37";
          [43] = "\73";
          [44] = "\76";
          [45] = "\111";
          [46] = "\45";
          [47] = "\42";
          [48] = "\67";
          [49] = "\81";
          [50] = "\64";
          [51] = "\51";
          [52] = "\71";
          [53] = "\58";
          [54] = "\40";
          [55] = "\98";
     };
     [16] = {
          [1] = "\45";
          [2] = "\108";
          [3] = "\97";
          [4] = "\72";
          [5] = "\101";
          [6] = "\52";
          [7] = "\115";
          [8] = "\80";
          [9] = "\91";
          [10] = "\115";
          [11] = "\75";
          [12] = "\46";
          [13] = "\105";
          [14] = "\100";
          [15] = "\104";
          [16] = "\104";
          [17] = "\50";
          [18] = "\88";
          [19] = "\85";
          [20] = "\56";
          [21] = "\46";
          [22] = "\61";
          [23] = "\94";
          [24] = "\73";
          [25] = "\56";
          [26] = "\89";
          [27] = "\87";
          [28] = "\90";
          [29] = "\105";
          [30] = "\81";
          [31] = "\79";
          [32] = "\42";
          [33] = "\58";
          [34] = "\40";
          [35] = "\36";
          [36] = "\71";
          [37] = "\46";
          [38] = "\122";
          [39] = "\99";
          [40] = "\83";
          [41] = "\44";
          [42] = "\94";
          [43] = "\55";
          [44] = "\100";
          [45] = "\83";
          [46] = "\51";
          [47] = "\85";
          [48] = "\35";
          [49] = "\121";
          [50] = "\38";
          [51] = "\55";
          [52] = "\106";
          [53] = "\88";
          [54] = "\79";
          [55] = "\84";
          [56] = "\81";
     };
     [17] = {
          [1] = "\61";
          [2] = "\94";
          [3] = "\99";
          [4] = "\70";
          [5] = "\118";
          [6] = "\114";
          [7] = "\122";
          [8] = "\77";
          [9] = "\110";
          [10] = "\45";
          [11] = "\88";
          [12] = "\94";
          [13] = "\104";
          [14] = "\119";
          [15] = "\78";
          [16] = "\80";
          [17] = "\122";
          [18] = "\118";
          [19] = "\56";
          [20] = "\115";
          [21] = "\73";
          [22] = "\69";
          [23] = "\90";
          [24] = "\55";
          [25] = "\112";
          [26] = "\116";
          [27] = "\35";
          [28] = "\93";
          [29] = "\97";
          [30] = "\73";
          [31] = "\97";
          [32] = "\68";
          [33] = "\48";
          [34] = "\93";
          [35] = "\111";
          [36] = "\79";
          [37] = "\111";
          [38] = "\61";
          [39] = "\78";
          [40] = "\97";
          [41] = "\75";
          [42] = "\99";
          [43] = "\104";
          [44] = "\67";
          [45] = "\106";
          [46] = "\71";
          [47] = "\50";
          [48] = "\83";
          [49] = "\50";
          [50] = "\94";
          [51] = "\49";
          [52] = "\108";
          [53] = "\88";
          [54] = "\44";
          [55] = "\81";
     };
     [18] = {
          [1] = "\83";
          [2] = "\76";
          [3] = "\61";
          [4] = "\110";
          [5] = "\46";
          [6] = "\53";
          [7] = "\101";
          [8] = "\75";
          [9] = "\76";
          [10] = "\102";
          [11] = "\71";
          [12] = "\111";
          [13] = "\35";
          [14] = "\76";
          [15] = "\97";
          [16] = "\121";
          [17] = "\46";
          [18] = "\109";
          [19] = "\74";
          [20] = "\61";
          [21] = "\42";
          [22] = "\55";
          [23] = "\49";
          [24] = "\36";
          [25] = "\85";
          [26] = "\51";
          [27] = "\43";
          [28] = "\105";
          [29] = "\51";
          [30] = "\38";
          [31] = "\55";
          [32] = "\104";
          [33] = "\104";
          [34] = "\106";
          [35] = "\75";
          [36] = "\82";
          [37] = "\48";
          [38] = "\106";
          [39] = "\117";
          [40] = "\71";
          [41] = "\101";
          [42] = "\87";
          [43] = "\102";
          [44] = "\58";
          [45] = "\55";
          [46] = "\72";
          [47] = "\98";
          [48] = "\120";
          [49] = "\44";
          [50] = "\98";
          [51] = "\121";
          [52] = "\38";
          [53] = "\116";
          [54] = "\88";
          [55] = "\58";
     };
     [19] = {
          [1] = "\112";
          [2] = "\40";
          [3] = "\43";
          [4] = "\101";
          [5] = "\52";
          [6] = "\38";
          [7] = "\104";
          [8] = "\101";
          [9] = "\38";
          [10] = "\43";
          [11] = "\91";
          [12] = "\91";
          [13] = "\83";
          [14] = "\73";
          [15] = "\114";
          [16] = "\98";
          [17] = "\52";
          [18] = "\100";
          [19] = "\46";
          [20] = "\90";
          [21] = "\102";
          [22] = "\44";
          [23] = "\61";
          [24] = "\105";
          [25] = "\91";
          [26] = "\43";
          [27] = "\46";
          [28] = "\86";
          [29] = "\86";
          [30] = "\99";
          [31] = "\42";
          [32] = "\73";
          [33] = "\105";
          [34] = "\118";
          [35] = "\67";
          [36] = "\83";
          [37] = "\49";
          [38] = "\75";
          [39] = "\111";
          [40] = "\86";
          [41] = "\74";
          [42] = "\108";
          [43] = "\106";
          [44] = "\93";
          [45] = "\43";
          [46] = "\58";
          [47] = "\45";
          [48] = "\59";
          [49] = "\58";
          [50] = "\47";
          [51] = "\64";
          [52] = "\33";
          [53] = "\112";
          [54] = "\50";
     };
     [20] = {
          [1] = "\55";
          [2] = "\55";
          [3] = "\67";
          [4] = "\117";
          [5] = "\79";
          [6] = "\103";
          [7] = "\44";
          [8] = "\41";
          [9] = "\115";
          [10] = "\98";
          [11] = "\77";
          [12] = "\113";
          [13] = "\36";
          [14] = "\88";
          [15] = "\84";
          [16] = "\66";
          [17] = "\50";
          [18] = "\40";
          [19] = "\56";
          [20] = "\33";
          [21] = "\97";
          [22] = "\79";
          [23] = "\64";
          [24] = "\37";
          [25] = "\115";
          [26] = "\58";
          [27] = "\106";
          [28] = "\36";
          [29] = "\71";
          [30] = "\59";
          [31] = "\38";
          [32] = "\50";
          [33] = "\58";
          [34] = "\80";
          [35] = "\76";
          [36] = "\87";
          [37] = "\103";
          [38] = "\87";
          [39] = "\69";
          [40] = "\71";
          [41] = "\116";
          [42] = "\98";
          [43] = "\93";
          [44] = "\55";
          [45] = "\37";
          [46] = "\77";
          [47] = "\42";
          [48] = "\46";
          [49] = "\40";
          [50] = "\36";
          [51] = "\109";
          [52] = "\83";
          [53] = "\64";
          [54] = "\36";
          [55] = "\58";
     };
     [21] = {
          [1] = "\77";
          [2] = "\67";
          [3] = "\67";
          [4] = "\115";
          [5] = "\86";
          [6] = "\38";
          [7] = "\41";
          [8] = "\80";
          [9] = "\66";
          [10] = "\102";
          [11] = "\121";
          [12] = "\117";
          [13] = "\49";
          [14] = "\97";
          [15] = "\41";
          [16] = "\102";
          [17] = "\98";
          [18] = "\119";
          [19] = "\110";
          [20] = "\70";
          [21] = "\59";
          [22] = "\121";
          [23] = "\102";
          [24] = "\54";
          [25] = "\106";
          [26] = "\84";
          [27] = "\49";
          [28] = "\91";
          [29] = "\57";
          [30] = "\61";
          [31] = "\70";
          [32] = "\114";
          [33] = "\97";
          [34] = "\66";
          [35] = "\110";
          [36] = "\103";
          [37] = "\72";
          [38] = "\116";
          [39] = "\104";
          [40] = "\89";
          [41] = "\36";
          [42] = "\105";
          [43] = "\85";
          [44] = "\107";
          [45] = "\76";
          [46] = "\67";
          [47] = "\109";
          [48] = "\111";
          [49] = "\81";
          [50] = "\59";
          [51] = "\115";
          [52] = "\45";
          [53] = "\45";
          [54] = "\55";
          [55] = "\91";
          [56] = "\115";
          [57] = "\104";
     };
     [22] = {
          [1] = "\119";
          [2] = "\98";
          [3] = "\90";
          [4] = "\117";
          [5] = "\64";
          [6] = "\108";
          [7] = "\78";
          [8] = "\40";
          [9] = "\114";
          [10] = "\54";
          [11] = "\72";
          [12] = "\49";
          [13] = "\111";
          [14] = "\97";
          [15] = "\37";
          [16] = "\113";
          [17] = "\117";
          [18] = "\113";
          [19] = "\101";
          [20] = "\69";
          [21] = "\101";
          [22] = "\114";
          [23] = "\33";
          [24] = "\54";
          [25] = "\55";
          [26] = "\97";
          [27] = "\48";
          [28] = "\46";
          [29] = "\121";
          [30] = "\47";
          [31] = "\79";
          [32] = "\58";
          [33] = "\35";
          [34] = "\74";
          [35] = "\89";
          [36] = "\110";
          [37] = "\83";
          [38] = "\109";
          [39] = "\87";
          [40] = "\94";
          [41] = "\82";
          [42] = "\111";
          [43] = "\37";
          [44] = "\69";
          [45] = "\114";
          [46] = "\113";
          [47] = "\81";
          [48] = "\70";
          [49] = "\99";
          [50] = "\97";
          [51] = "\121";
          [52] = "\55";
          [53] = "\119";
          [54] = "\84";
          [55] = "\88";
          [56] = "\61";
     };
     [23] = {
          [1] = "\111";
          [2] = "\107";
          [3] = "\45";
          [4] = "\56";
          [5] = "\103";
          [6] = "\40";
          [7] = "\122";
          [8] = "\76";
          [9] = "\86";
          [10] = "\110";
          [11] = "\94";
          [12] = "\66";
          [13] = "\73";
          [14] = "\33";
          [15] = "\108";
          [16] = "\103";
          [17] = "\98";
          [18] = "\46";
          [19] = "\83";
          [20] = "\103";
          [21] = "\100";
          [22] = "\111";
          [23] = "\93";
          [24] = "\44";
          [25] = "\115";
          [26] = "\77";
          [27] = "\86";
          [28] = "\121";
          [29] = "\99";
          [30] = "\81";
          [31] = "\71";
          [32] = "\87";
          [33] = "\67";
          [34] = "\91";
          [35] = "\115";
          [36] = "\44";
          [37] = "\69";
          [38] = "\36";
          [39] = "\120";
          [40] = "\82";
          [41] = "\87";
          [42] = "\56";
          [43] = "\67";
          [44] = "\69";
          [45] = "\59";
          [46] = "\117";
          [47] = "\115";
          [48] = "\45";
          [49] = "\61";
          [50] = "\83";
          [51] = "\121";
          [52] = "\56";
          [53] = "\78";
          [54] = "\83";
     };
     [24] = {
          [1] = "\99";
          [2] = "\99";
          [3] = "\116";
          [4] = "\52";
          [5] = "\42";
          [6] = "\68";
          [7] = "\45";
          [8] = "\57";
          [9] = "\97";
          [10] = "\93";
          [11] = "\45";
          [12] = "\85";
          [13] = "\73";
          [14] = "\42";
          [15] = "\94";
          [16] = "\102";
          [17] = "\48";
          [18] = "\79";
          [19] = "\114";
          [20] = "\35";
          [21] = "\43";
          [22] = "\98";
          [23] = "\107";
          [24] = "\97";
          [25] = "\57";
          [26] = "\85";
          [27] = "\93";
          [28] = "\49";
          [29] = "\49";
          [30] = "\51";
          [31] = "\119";
          [32] = "\103";
          [33] = "\94";
          [34] = "\35";
          [35] = "\110";
          [36] = "\72";
          [37] = "\66";
          [38] = "\50";
          [39] = "\112";
          [40] = "\35";
          [41] = "\117";
          [42] = "\51";
          [43] = "\78";
          [44] = "\40";
          [45] = "\54";
          [46] = "\83";
          [47] = "\49";
          [48] = "\110";
          [49] = "\33";
          [50] = "\109";
          [51] = "\103";
          [52] = "\61";
          [53] = "\58";
          [54] = "\72";
          [55] = "\101";
          [56] = "\67";
          [57] = "\40";
          [58] = "\42";
          [59] = "\52";
          [60] = "\94";
     };
     [25] = {
          [1] = "\47";
          [2] = "\46";
          [3] = "\33";
          [4] = "\101";
          [5] = "\109";
          [6] = "\56";
          [7] = "\93";
          [8] = "\67";
          [9] = "\41";
          [10] = "\87";
          [11] = "\73";
          [12] = "\61";
          [13] = "\72";
          [14] = "\50";
          [15] = "\105";
          [16] = "\69";
          [17] = "\93";
          [18] = "\54";
          [19] = "\114";
          [20] = "\36";
          [21] = "\83";
          [22] = "\103";
          [23] = "\45";
          [24] = "\117";
          [25] = "\44";
          [26] = "\58";
          [27] = "\91";
          [28] = "\40";
          [29] = "\64";
          [30] = "\36";
          [31] = "\47";
          [32] = "\33";
          [33] = "\43";
          [34] = "\56";
          [35] = "\116";
          [36] = "\122";
          [37] = "\45";
          [38] = "\115";
          [39] = "\116";
          [40] = "\48";
          [41] = "\105";
          [42] = "\80";
          [43] = "\70";
          [44] = "\78";
          [45] = "\114";
          [46] = "\86";
          [47] = "\120";
          [48] = "\35";
          [49] = "\116";
          [50] = "\56";
          [51] = "\35";
          [52] = "\78";
          [53] = "\69";
          [54] = "\56";
          [55] = "\68";
     };
     [26] = {
          [1] = "\77";
          [2] = "\46";
          [3] = "\46";
          [4] = "\116";
          [5] = "\98";
          [6] = "\110";
          [7] = "\74";
          [8] = "\74";
          [9] = "\105";
          [10] = "\94";
          [11] = "\56";
          [12] = "\119";
          [13] = "\84";
          [14] = "\104";
          [15] = "\119";
          [16] = "\45";
          [17] = "\97";
          [18] = "\84";
          [19] = "\44";
          [20] = "\67";
          [21] = "\85";
          [22] = "\105";
          [23] = "\103";
          [24] = "\50";
          [25] = "\100";
          [26] = "\51";
          [27] = "\80";
          [28] = "\76";
          [29] = "\102";
          [30] = "\109";
          [31] = "\80";
          [32] = "\70";
          [33] = "\88";
          [34] = "\75";
          [35] = "\50";
          [36] = "\121";
          [37] = "\38";
          [38] = "\54";
          [39] = "\55";
          [40] = "\44";
          [41] = "\75";
          [42] = "\71";
          [43] = "\99";
          [44] = "\54";
          [45] = "\44";
          [46] = "\99";
          [47] = "\101";
          [48] = "\72";
          [49] = "\57";
          [50] = "\78";
          [51] = "\120";
          [52] = "\114";
          [53] = "\68";
          [54] = "\87";
          [55] = "\59";
     };
     [27] = {
          [1] = "\113";
          [2] = "\77";
          [3] = "\100";
          [4] = "\105";
          [5] = "\93";
          [6] = "\70";
          [7] = "\53";
          [8] = "\110";
          [9] = "\76";
          [10] = "\57";
          [11] = "\118";
          [12] = "\111";
          [13] = "\84";
          [14] = "\104";
          [15] = "\114";
          [16] = "\83";
          [17] = "\37";
          [18] = "\46";
          [19] = "\49";
          [20] = "\54";
          [21] = "\97";
          [22] = "\38";
          [23] = "\87";
          [24] = "\93";
          [25] = "\45";
          [26] = "\94";
          [27] = "\80";
          [28] = "\120";
          [29] = "\90";
          [30] = "\85";
          [31] = "\76";
          [32] = "\54";
          [33] = "\91";
          [34] = "\78";
          [35] = "\104";
          [36] = "\33";
          [37] = "\82";
          [38] = "\42";
          [39] = "\97";
          [40] = "\105";
          [41] = "\85";
          [42] = "\41";
          [43] = "\117";
          [44] = "\99";
          [45] = "\67";
          [46] = "\58";
          [47] = "\104";
          [48] = "\38";
          [49] = "\52";
          [50] = "\110";
          [51] = "\40";
          [52] = "\80";
          [53] = "\47";
          [54] = "\97";
          [55] = "\44";
          [56] = "\120";
          [57] = "\109";
     };
     [28] = {
          [1] = "\108";
          [2] = "\49";
          [3] = "\38";
          [4] = "\87";
          [5] = "\108";
          [6] = "\113";
          [7] = "\75";
          [8] = "\109";
          [9] = "\102";
          [10] = "\94";
          [11] = "\88";
          [12] = "\108";
          [13] = "\64";
          [14] = "\93";
          [15] = "\112";
          [16] = "\115";
          [17] = "\83";
          [18] = "\57";
          [19] = "\49";
          [20] = "\67";
          [21] = "\74";
          [22] = "\116";
          [23] = "\122";
          [24] = "\116";
          [25] = "\33";
          [26] = "\49";
          [27] = "\68";
          [28] = "\94";
          [29] = "\32";
          [30] = "\36";
          [31] = "\89";
          [32] = "\106";
          [33] = "\97";
          [34] = "\111";
          [35] = "\76";
          [36] = "\101";
          [37] = "\97";
          [38] = "\89";
          [39] = "\79";
          [40] = "\113";
          [41] = "\52";
          [42] = "\73";
          [43] = "\73";
          [44] = "\71";
          [45] = "\79";
          [46] = "\109";
          [47] = "\79";
          [48] = "\98";
          [49] = "\98";
          [50] = "\110";
          [51] = "\36";
          [52] = "\104";
          [53] = "\42";
          [54] = "\69";
          [55] = "\48";
          [56] = "\105";
          [57] = "\120";
          [58] = "\45";
          [59] = "\93";
          [60] = "\105";
          [61] = "\72";
          [62] = "\112";
          [63] = "\99";
          [64] = "\103";
          [65] = "\89";
          [66] = "\111";
          [67] = "\107";
          [68] = "\107";
          [69] = "\81";
          [70] = "\108";
          [71] = "\50";
     };
     [29] = {
          [1] = "\46";
          [2] = "\52";
          [3] = "\103";
          [4] = "\77";
          [5] = "\121";
          [6] = "\118";
          [7] = "\61";
          [8] = "\103";
          [9] = "\89";
          [10] = "\111";
          [11] = "\52";
          [12] = "\52";
          [13] = "\90";
          [14] = "\98";
          [15] = "\33";
          [16] = "\41";
          [17] = "\73";
          [18] = "\46";
          [19] = "\82";
          [20] = "\108";
          [21] = "\110";
          [22] = "\104";
          [23] = "\122";
          [24] = "\94";
          [25] = "\40";
          [26] = "\93";
          [27] = "\67";
          [28] = "\100";
          [29] = "\105";
          [30] = "\103";
          [31] = "\42";
          [32] = "\78";
          [33] = "\94";
          [34] = "\120";
          [35] = "\42";
          [36] = "\37";
          [37] = "\82";
          [38] = "\44";
          [39] = "\50";
          [40] = "\52";
          [41] = "\110";
          [42] = "\98";
          [43] = "\42";
          [44] = "\61";
          [45] = "\104";
          [46] = "\36";
          [47] = "\88";
          [48] = "\46";
          [49] = "\74";
          [50] = "\48";
          [51] = "\119";
          [52] = "\33";
          [53] = "\67";
          [54] = "\94";
          [55] = "\110";
     };
     [30] = {
          [1] = "\46";
          [2] = "\57";
          [3] = "\42";
          [4] = "\80";
          [5] = "\90";
          [6] = "\51";
          [7] = "\76";
          [8] = "\49";
          [9] = "\45";
          [10] = "\75";
          [11] = "\98";
          [12] = "\53";
          [13] = "\82";
          [14] = "\104";
          [15] = "\40";
          [16] = "\76";
          [17] = "\106";
          [18] = "\93";
          [19] = "\67";
          [20] = "\80";
          [21] = "\51";
          [22] = "\37";
          [23] = "\45";
          [24] = "\78";
          [25] = "\102";
          [26] = "\71";
          [27] = "\112";
          [28] = "\59";
          [29] = "\88";
          [30] = "\61";
          [31] = "\74";
          [32] = "\51";
          [33] = "\105";
          [34] = "\120";
          [35] = "\114";
          [36] = "\77";
          [37] = "\41";
          [38] = "\68";
          [39] = "\56";
          [40] = "\83";
          [41] = "\74";
          [42] = "\97";
          [43] = "\74";
          [44] = "\49";
          [45] = "\58";
          [46] = "\67";
          [47] = "\44";
          [48] = "\41";
          [49] = "\93";
          [50] = "\108";
          [51] = "\103";
          [52] = "\37";
     };
     [31] = {
          [1] = "\59";
          [2] = "\122";
          [3] = "\52";
          [4] = "\103";
          [5] = "\50";
          [6] = "\111";
          [7] = "\43";
          [8] = "\40";
          [9] = "\108";
          [10] = "\107";
          [11] = "\113";
          [12] = "\99";
          [13] = "\121";
          [14] = "\104";
          [15] = "\121";
          [16] = "\77";
          [17] = "\101";
          [18] = "\98";
          [19] = "\90";
          [20] = "\99";
          [21] = "\111";
          [22] = "\114";
          [23] = "\55";
          [24] = "\41";
          [25] = "\117";
          [26] = "\116";
          [27] = "\66";
          [28] = "\120";
          [29] = "\61";
          [30] = "\81";
          [31] = "\103";
          [32] = "\90";
          [33] = "\74";
          [34] = "\71";
          [35] = "\82";
          [36] = "\51";
          [37] = "\76";
          [38] = "\70";
          [39] = "\38";
          [40] = "\120";
          [41] = "\55";
          [42] = "\42";
          [43] = "\82";
          [44] = "\110";
          [45] = "\37";
          [46] = "\100";
          [47] = "\70";
          [48] = "\55";
          [49] = "\110";
          [50] = "\66";
          [51] = "\47";
          [52] = "\42";
          [53] = "\83";
          [54] = "\49";
          [55] = "\54";
          [56] = "\64";
     };
     [32] = {
          [1] = "\97";
          [2] = "\47";
          [3] = "\35";
          [4] = "\46";
          [5] = "\68";
          [6] = "\118";
          [7] = "\53";
          [8] = "\41";
          [9] = "\119";
          [10] = "\38";
          [11] = "\54";
          [12] = "\98";
          [13] = "\71";
          [14] = "\111";
          [15] = "\75";
          [16] = "\35";
          [17] = "\40";
          [18] = "\55";
          [19] = "\38";
          [20] = "\85";
          [21] = "\41";
          [22] = "\75";
          [23] = "\83";
          [24] = "\50";
          [25] = "\59";
          [26] = "\77";
          [27] = "\111";
          [28] = "\48";
          [29] = "\40";
          [30] = "\73";
          [31] = "\108";
          [32] = "\100";
          [33] = "\97";
          [34] = "\93";
          [35] = "\109";
          [36] = "\35";
          [37] = "\42";
          [38] = "\80";
          [39] = "\68";
          [40] = "\46";
          [41] = "\82";
          [42] = "\81";
          [43] = "\33";
          [44] = "\114";
          [45] = "\36";
          [46] = "\79";
          [47] = "\108";
          [48] = "\98";
          [49] = "\47";
          [50] = "\97";
          [51] = "\116";
          [52] = "\110";
          [53] = "\99";
          [54] = "\79";
     };
     [33] = {
          [1] = "\45";
          [2] = "\78";
          [3] = "\82";
          [4] = "\99";
          [5] = "\111";
          [6] = "\51";
          [7] = "\68";
          [8] = "\81";
          [9] = "\80";
          [10] = "\104";
          [11] = "\38";
          [12] = "\49";
          [13] = "\100";
          [14] = "\117";
          [15] = "\116";
          [16] = "\46";
          [17] = "\117";
          [18] = "\57";
          [19] = "\101";
          [20] = "\77";
          [21] = "\68";
          [22] = "\77";
          [23] = "\101";
          [24] = "\98";
          [25] = "\108";
          [26] = "\45";
          [27] = "\78";
          [28] = "\41";
          [29] = "\33";
          [30] = "\118";
          [31] = "\50";
          [32] = "\36";
          [33] = "\121";
          [34] = "\75";
          [35] = "\73";
          [36] = "\120";
          [37] = "\97";
          [38] = "\50";
          [39] = "\79";
          [40] = "\101";
          [41] = "\102";
          [42] = "\88";
          [43] = "\69";
          [44] = "\108";
          [45] = "\122";
          [46] = "\115";
          [47] = "\89";
          [48] = "\66";
          [49] = "\46";
          [50] = "\57";
          [51] = "\67";
          [52] = "\80";
          [53] = "\47";
          [54] = "\118";
          [55] = "\42";
          [56] = "\94";
          [57] = "\117";
     };
     [34] = {
          [1] = "\53";
          [2] = "\73";
          [3] = "\44";
          [4] = "\56";
          [5] = "\80";
          [6] = "\43";
          [7] = "\119";
          [8] = "\77";
          [9] = "\100";
          [10] = "\79";
          [11] = "\83";
          [12] = "\93";
          [13] = "\101";
          [14] = "\76";
          [15] = "\98";
          [16] = "\109";
          [17] = "\75";
          [18] = "\83";
          [19] = "\111";
          [20] = "\114";
          [21] = "\106";
          [22] = "\82";
          [23] = "\71";
          [24] = "\98";
          [25] = "\77";
          [26] = "\112";
          [27] = "\114";
          [28] = "\108";
          [29] = "\87";
          [30] = "\76";
          [31] = "\99";
          [32] = "\116";
          [33] = "\79";
          [34] = "\100";
          [35] = "\89";
          [36] = "\45";
          [37] = "\116";
          [38] = "\49";
          [39] = "\53";
          [40] = "\115";
          [41] = "\73";
          [42] = "\107";
          [43] = "\75";
          [44] = "\58";
          [45] = "\67";
          [46] = "\38";
          [47] = "\37";
          [48] = "\72";
          [49] = "\116";
          [50] = "\41";
          [51] = "\115";
          [52] = "\97";
          [53] = "\51";
          [54] = "\70";
          [55] = "\98";
          [56] = "\117";
          [57] = "\46";
          [58] = "\109";
          [59] = "\50";
          [60] = "\55";
          [61] = "\107";
     };
     [35] = {
          [1] = "\91";
          [2] = "\72";
          [3] = "\80";
          [4] = "\46";
          [5] = "\79";
          [6] = "\48";
          [7] = "\77";
          [8] = "\77";
          [9] = "\84";
          [10] = "\99";
          [11] = "\72";
          [12] = "\53";
          [13] = "\106";
          [14] = "\83";
          [15] = "\44";
          [16] = "\61";
          [17] = "\101";
          [18] = "\107";
          [19] = "\66";
          [20] = "\93";
          [21] = "\33";
          [22] = "\109";
          [23] = "\82";
          [24] = "\111";
          [25] = "\50";
          [26] = "\111";
          [27] = "\47";
          [28] = "\64";
          [29] = "\120";
          [30] = "\105";
          [31] = "\118";
          [32] = "\105";
          [33] = "\87";
          [34] = "\121";
          [35] = "\118";
          [36] = "\121";
          [37] = "\48";
          [38] = "\87";
          [39] = "\54";
          [40] = "\111";
          [41] = "\90";
          [42] = "\43";
          [43] = "\35";
          [44] = "\107";
          [45] = "\41";
          [46] = "\59";
          [47] = "\85";
          [48] = "\81";
          [49] = "\88";
          [50] = "\103";
          [51] = "\87";
          [52] = "\79";
          [53] = "\75";
          [54] = "\85";
          [55] = "\120";
     };
     [36] = {
          [1] = "\107";
          [2] = "\107";
          [3] = "\74";
          [4] = "\111";
          [5] = "\116";
          [6] = "\115";
          [7] = "\68";
          [8] = "\101";
          [9] = "\101";
          [10] = "\93";
          [11] = "\100";
          [12] = "\46";
          [13] = "\97";
          [14] = "\44";
          [15] = "\114";
          [16] = "\88";
          [17] = "\45";
          [18] = "\107";
          [19] = "\41";
          [20] = "\109";
          [21] = "\85";
          [22] = "\112";
          [23] = "\105";
          [24] = "\94";
          [25] = "\45";
          [26] = "\36";
          [27] = "\98";
          [28] = "\112";
          [29] = "\116";
          [30] = "\40";
          [31] = "\88";
          [32] = "\47";
          [33] = "\99";
          [34] = "\116";
          [35] = "\98";
          [36] = "\109";
          [37] = "\79";
          [38] = "\38";
          [39] = "\108";
          [40] = "\108";
          [41] = "\57";
          [42] = "\105";
          [43] = "\122";
          [44] = "\45";
          [45] = "\72";
          [46] = "\46";
          [47] = "\71";
          [48] = "\99";
          [49] = "\35";
          [50] = "\33";
          [51] = "\67";
          [52] = "\40";
          [53] = "\57";
          [54] = "\110";
          [55] = "\97";
          [56] = "\64";
          [57] = "\42";
          [58] = "\90";
          [59] = "\48";
          [60] = "\40";
          [61] = "\59";
          [62] = "\111";
          [63] = "\82";
          [64] = "\44";
          [65] = "\57";
          [66] = "\97";
          [67] = "\82";
          [68] = "\88";
          [69] = "\61";
          [70] = "\59";
          [71] = "\35";
          [72] = "\117";
          [73] = "\116";
          [74] = "\119";
          [75] = "\70";
     };
     [38] = false;
     [43] = "\58\37\55\174\116\236\151\137\25\226\129\162\89\140\173\169\233\72\103\80\28\191\90\80\80\174\65\20\214\25\241\157\93\80\61\96\235\32\137\114\29\138\154\153\92\13\186\182\144\149\102\232\194\74\191\79\229\18\203\191\177\34\42\5\183\189\70\69\143\53\137\16\122\164\93\105\122\132\1\5";
     [44] = "\51\52\100\49\55\102\52\55\98\50\55\49\102\54\54\97\101\49\102\56\56\55\55\51\52\101\53\51\48\53\52\51";
     [45] = "\67\111\110\116\101\110\116\45\84\121\112\101";
     [46] = "\67\111\110\110\101\99\116\105\111\110\45\73\100";
     [47] = "\75\101\121";
     [48] = "\73\118";
     [49] = "\51\52\100\49\55\102\52\55\98\50\55\49\102\54\54\97\101\49\102\56\56\55\55\51\52\101\53\51\48\53\52\51";
     [51] = "\66\111\100\121";
     [52] = "\72\101\97\100\101\114\115";
     [53] = "\87\104\105\116\101\108\105\115\116\32\65\117\116\104\32\70\97\105\108\101\100";
     [54] = "\56\101\54\48\53\53\49\98\57\99\99\52\100\52\98\101\98\56\101\48\48\98\102\53\100\48\97\55\50\98\99\97\49\100\101\56\53\100\102\52\57\56\56\49\48\53\50\52\55\57\51\56\54\53\52\57\50\54\97\98\49\57\100\98";
     [55] = {
          ["StatusMessage"] = "\79\75";
          ["Success"] = true;
          ["StatusCode"] = 200;
          ["Body"] = "\164\124\49\85\171\76\92\84\92\161\75\148\98\39\146\204\188\148\254\48\236\33\33\221\121\166\51\16\169\24\135\123";
          ["Cookies"] = {
          };
          ["Headers"] = {
               ["expect-ct"] = "\109\97\120\45\97\103\101\61\48";
               ["Content-Type"] = "\97\112\112\108\105\99\97\116\105\111\110\47\111\99\116\101\116\45\115\116\114\101\97\109";
               ["iv"] = "\48\97\98\48\48\49\57\51\102\102\102\98\52\56\51\51\101\100\56\98\54\50\101\50\102\98\54\54\52\101\102\48\51\101\53\55\56\51\52\53\56\49\49\97\50\57\99\56\100\57\48\49\50\52\98\98\55\98\102\54\99\97\100\50";
               ["Date"] = "\84\117\101\44\32\48\49\32\70\101\98\32\50\48\50\50\32\49\49\58\49\52\58\51\49\32\71\77\84";
               ["x-xss-protection"] = "\48";
               ["CF-RAY"] = "\54\100\54\97\99\49\97\102\50\101\57\56\56\56\54\100\45\76\72\82";
               ["key"] = "\99\53\53\100\55\50\101\99\48\52\51\52\97\48\54\52\56\53\50\52\57\102\100\98\54\98\52\50\50\54\49\101\98\48\97\100\54\49\97\50\52\97\97\54\57\98\57\101\56\56\101\57\48\57\49\99\99\50\54\102\50\50\53\54\51\50\55\55\51\54\101\97\48\54\101\56\56\57\54\48\102\54\48\101\97\102\101\101\56\48\48\97\56\51\102\51\54\48\52\102\99\54\53\53\97\99\50\56\52\50\57\51\57\51\101\57\48\54\57\55\101\99\54\50\98\99\48\55\56\50\54\57\56\52\101\48\51\56\99\51\51\53\102\52\52\54\53\56\48\54\52\56\102\53\98\57\48\57\100\55";
               ["x-permitted-cross-domain-policies"] = "\110\111\110\101";
               ["Server"] = "\99\108\111\117\100\102\108\97\114\101";
               ["alt-svc"] = "\104\51\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48\44\32\104\51\45\50\57\61\34\58\52\52\51\34\59\32\109\97\61\56\54\52\48\48";
               ["Content-Length"] = "\51\50";
               ["NEL"] = "\123\34\115\117\99\99\101\115\115\95\102\114\97\99\116\105\111\110\34\58\48\44\34\114\101\112\111\114\116\95\116\111\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
               ["referrer-policy"] = "\110\111\45\114\101\102\101\114\114\101\114";
               ["CF-Cache-Status"] = "\68\89\78\65\77\73\67";
               ["etag"] = "\87\47\34\50\48\45\51\56\122\116\83\88\78\73\72\53\112\87\65\90\43\117\51\55\89\104\49\53\67\77\105\98\107\34";
               ["access-control-allow-origin"] = "\42";
               ["x-download-options"] = "\110\111\111\112\101\110";
               ["x-dns-prefetch-control"] = "\111\102\102";
               ["x-content-type-options"] = "\110\111\115\110\105\102\102";
               ["strict-transport-security"] = "\109\97\120\45\97\103\101\61\49\53\53\53\50\48\48\48\59\32\105\110\99\108\117\100\101\83\117\98\68\111\109\97\105\110\115";
               ["connection-id"] = "\53\49\56\99\56\100\50\100\99\56\56\98\52\54\57\52\55\99\57\97\56\49\55\51\50\55\51\101\97\100\54\98";
               ["Report-To"] = "\123\34\101\110\100\112\111\105\110\116\115\34\58\91\123\34\117\114\108\34\58\34\104\116\116\112\115\58\92\47\92\47\97\46\110\101\108\46\99\108\111\117\100\102\108\97\114\101\46\99\111\109\92\47\114\101\112\111\114\116\92\47\118\51\63\115\61\56\77\57\109\85\87\101\49\99\119\122\115\104\75\102\101\120\89\65\85\77\76\80\118\113\74\122\87\76\51\37\50\70\89\69\81\69\88\112\90\120\104\84\121\102\103\105\79\111\108\103\108\116\72\56\90\98\120\89\121\81\71\103\98\83\37\50\66\100\82\56\69\119\89\99\56\73\118\50\99\80\84\75\55\48\117\54\99\122\55\106\56\117\82\72\101\65\116\71\70\120\71\70\121\69\65\100\99\54\69\79\106\116\103\69\122\108\66\113\75\76\88\112\116\70\98\113\69\69\37\50\70\80\57\81\108\55\70\82\104\81\89\79\83\49\106\49\101\88\37\50\70\34\125\93\44\34\103\114\111\117\112\34\58\34\99\102\45\110\101\108\34\44\34\109\97\120\95\97\103\101\34\58\54\48\52\56\48\48\125";
               ["Connection"] = "\107\101\101\112\45\97\108\105\118\101";
               ["content-security-policy"] = "\100\101\102\97\117\108\116\45\115\114\99\32\39\115\101\108\102\39\59\98\97\115\101\45\117\114\105\32\39\115\101\108\102\39\59\98\108\111\99\107\45\97\108\108\45\109\105\120\101\100\45\99\111\110\116\101\110\116\59\102\111\110\116\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\100\97\116\97\58\59\102\114\97\109\101\45\97\110\99\101\115\116\111\114\115\32\39\115\101\108\102\39\59\105\109\103\45\115\114\99\32\39\115\101\108\102\39\32\100\97\116\97\58\59\111\98\106\101\99\116\45\115\114\99\32\39\110\111\110\101\39\59\115\99\114\105\112\116\45\115\114\99\32\39\115\101\108\102\39\59\115\99\114\105\112\116\45\115\114\99\45\97\116\116\114\32\39\110\111\110\101\39\59\115\116\121\108\101\45\115\114\99\32\39\115\101\108\102\39\32\104\116\116\112\115\58\32\39\117\110\115\97\102\101\45\105\110\108\105\110\101\39\59\117\112\103\114\97\100\101\45\105\110\115\101\99\117\114\101\45\114\101\113\117\101\115\116\115";
               ["x-frame-options"] = "\83\65\77\69\79\82\73\71\73\78";
          };
     };
     [57] = {
     };
     [80] = true;
     [81] = "\100";
     [82] = "\111";
     [83] = "\109";
     [84] = "\99";
     [85] = "\35";
     [86] = "\33";
     [0] = {
          [1] = "\76";
          [2] = "\51";
          [3] = "\49";
          [4] = "\101";
          [5] = "\52";
          [6] = "\49";
          [7] = "\55";
          [8] = "\107";
          [9] = "\101";
          [10] = "\61";
          [11] = "\53";
          [12] = "\52";
          [13] = "\102";
          [14] = "\78";
          [15] = "\50";
          [16] = "\103";
          [17] = "\51";
          [18] = "\98";
          [19] = "\116";
          [20] = "\102";
          [21] = "\54";
          [22] = "\100";
          [23] = "\71";
          [24] = "\49";
          [25] = "\89";
          [26] = "\110";
          [27] = "\89";
          [28] = "\115";
          [29] = "\51";
          [30] = "\111";
          [31] = "\68";
          [32] = "\36";
          [33] = "\77";
          [34] = "\97";
          [35] = "\52";
          [36] = "\113";
          [37] = "\90";
          [38] = "\48";
          [39] = "\80";
          [40] = "\102";
          [41] = "\74";
          [42] = "\54";
          [43] = "\42";
          [44] = "\87";
          [45] = "\56";
          [46] = "\55";
          [47] = "\33";
          [48] = "\101";
          [49] = "\53";
          [50] = "\40";
          [51] = "\53";
          [52] = "\51";
          [53] = "\122";
          [54] = "\50";
          [55] = "\37";
          [56] = "\52";
          [57] = "\55";
          [58] = "\55";
          [59] = "\45";
          [60] = "\88";
          [61] = "\97";
          [62] = "\52";
          [63] = "\55";
          [64] = "\68";
          [65] = "\99";
          [66] = "\56";
          [67] = "\70";
          [68] = "\111";
          [69] = "\33";
          [70] = "\85";
          [71] = "\97";
          [72] = "\115";
          [73] = "\79";
          [74] = "\112";
          [75] = "\111";
          [76] = "\55";
          [77] = "\58";
          [78] = "\90";
          [79] = "\35";
          [80] = "\70";
          [81] = "\40";
          [82] = "\51";
          [83] = "\50";
     };
}

																							WriteStk(Stk, nStk);
																						end;
																					end;
																				else
																					if (not(Nr >= 75)) then
																						local II = Mr[1];
																						CN = II + Mr[3] - 1;
																						if qN[II] == Kick then
																							warn('bye');
																							rN = rN + 1;
																						else
																							qN[II](H(qN, II + 1, CN));
																						end;
																						do
																							CN = II - 1;
																						end;
																					else
																						if (Nr ~= 76) then
																							(qN)[Mr[1]] = Vh(qN[Mr[3]], Mr[7]);
																						else
																							-- (rN, 'L2', Mr[4] < qN[Mr[10]]);
																							qN[Mr[1]] = Mr[4] < qN[Mr[10]];
																						end;
																					end;
																				end;
																			else
																				if (Nr < 69) then
																					if (Nr == 68) then
																						do
																							(qN)[Mr[1]] = Y(qN[Mr[3]], qN[Mr[10]]);
																						end;
																					else
																						repeat
																							local IE, NE = oe, qN;
																							if (not(#IE > 0)) then
																							else
																								local EG = ({});
																								for A8, a8 in m, IE do
																									for pe, ue in m, a8 do
																										do
																											if (not(ue[1] == NE and ue[2] >= 0)) then
																											else
																												local kr = (ue[2]);
																												if (not EG[kr]) then
																													EG[kr] = {
																														NE[kr]
																													};
																												end;
																												do
																													ue[1] = EG[kr];
																												end;
																												ue[2] = 1;
																											end;
																										end;
																									end;
																								end;
																							end;
																						until (ch);
																						do
																							return ch, Mr[1], 1;
																						end;
																					end;
																				else
																					if (Nr >= 70) then
																						if (Nr ~= 71) then
																							local QF = (Mr[1]);
																							local mF = (QF + 3);
																							local OF = QF + 2;
																							local LF = ({
																								qN[QF](qN[QF + 1], qN[OF])
																							});
																							for So = 1, Mr[10] do
																								qN[OF + So] = LF[So];
																							end;
																							local SF = (qN[mF]);
																							do
																								if (SF == uh) then
																									rN = rN + 1;
																								else
																									(qN)[OF] = SF;
																								end;
																							end;
																						else
																							rN = Mr[5];
																						end;
																					else
																						qN[Mr[1]] = {
																							H({}, 1, Mr[3])
																						};
																					end;
																				end;
																			end;
																		end;
																	end;
																end;
															end;
														end;
													else
														do
															if (not(Nr >= 116)) then
																if (not(Nr >= 96)) then
																	if (not(Nr >= 86)) then
																		if (not(Nr < 81)) then
																			if (not(Nr < 83)) then
																				if (not(Nr >= 84)) then
																					qN[Mr[1]] = qN[Mr[3]] % qN[Mr[10]];
																				else
																					if (Nr ~= 85) then
																						local VP, EP = xe[Mr[5]], uh;
																						local OP = (VP[4]);
																						if (not(OP > 0)) then
																						else
																							EP = {};
																							for fo = 0, OP - 1 do
																								local xo = (ce[rN]);
																								local Yo = (xo[6]);
																								if (Yo ~= 78) then
																									(EP)[fo] = se[xo[3]];
																								else
																									(EP)[fo] = {
																										qN,
																										xo[3]
																									};
																								end;
																								rN = rN + 1;
																							end;
																							r(oe, EP);
																						end;
																						(qN)[Mr[1]] = Fh(VP, iN, EP);
																					else
																						do
																							qN[Mr[1]] = Mr[4] + qN[Mr[10]];
																						end;
																					end;
																				end;
																			else
																				do
																					if (Nr == 82) then
																						qN[Mr[1]] = qN[Mr[3]] / qN[Mr[10]];
																					else
																						qN[Mr[1]] = Mr[2];
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < 79)) then
																				if (Nr ~= 80) then
																					do
																						if (Mr[10] == 222) then
																							rN = rN - 1;
																							ce[rN] = {
																								[10] = (Mr[3] - KG) % 256,
																								[6] = 103,
																								[1] = (Mr[1] - 132) % 256
																							};
																						elseif (Mr[10] ~= 144) then
																							repeat
																								local Qj, Fj, fj = oe, qN, (Mr[1]);
																								if (#Qj > 0) then
																									local Mb = {};
																									do
																										for Wz, pz in m, Qj do
																											for bB, MB in m, pz do
																												if (not(MB[1] == Fj and MB[2] >= fj)) then
																												else
																													local Ys = (MB[2]);
																													if (not(not Mb[Ys])) then
																													else
																														Mb[Ys] = {
																															Fj[Ys]
																														};
																													end;
																													(MB)[1] = Mb[Ys];
																													do
																														(MB)[2] = 1;
																													end;
																												end;
																											end;
																										end;
																									end;
																								end;
																							until (ch);
																						else
																							rN = rN - 1;
																							ce[rN] = {
																								[1] = (Mr[1] - 197) % 256,
																								[3] = (Mr[3] - 197) % 256,
																								[6] = 153
																							};
																						end;
																					end;
																				else
																					do
																						if (Mr[10] == 247) then
																							rN = rN - 1;
																							do
																								(ce)[rN] = {
																									[10] = (Mr[3] - 194) % 256,
																									[1] = (Mr[1] - 194) % 256,
																									[6] = 103
																								};
																							end;
																						elseif (Mr[10] ~= 77) then
																							for Kd = Mr[1], Mr[3] do
																								do
																									qN[Kd] = uh;
																								end;
																							end;
																						else
																							rN = rN - 1;
																							(ce)[rN] = {
																								[1] = (Mr[1] - 70) % 256,
																								[6] = 46,
																								[3] = (Mr[3] - 70) % 256
																							};
																						end;
																					end;
																				end;
																			else
																				if (Nr == 78) then
																					if (Mr[10] == 139) then
																						rN = rN - 1;
																						ce[rN] = {
																							[6] = 47,
																							[10] = (Mr[3] - 33) % 256,
																							[1] = (Mr[1] - 33) % tG
																						};
																					elseif (Mr[10] == 73) then
																						rN = rN - 1;
																						ce[rN] = {
																							[1] = (Mr[1] - dG) % 256,
																							[3] = (Mr[3] - 230) % 256,
																							[6] = 100
																						};
																					elseif (Mr[10] ~= 241) then
																						(qN)[Mr[1]] = qN[Mr[3]];
																					else
																						do
																							rN = rN - 1;
																						end;
																						do
																							(ce)[rN] = {
																								[1] = (Mr[1] - 37) % 256,
																								[3] = (Mr[3] - 37) % tG,
																								[6] = 153
																							};
																						end;
																					end;
																				else
																					qN[Mr[1]] = qN[Mr[3]] / Mr[7];
																				end;
																			end;
																		end;
																	else
																		if (not(Nr >= 91)) then
																			if (not(Nr < 88)) then
																				if (not(Nr >= 89)) then
																					local yt = se[Mr[3]];
																					yt[1][yt[2]] = qN[Mr[1]];
																				else
																					if (Nr ~= 90) then
																						local It = Mr[1];
																						do
																							for pV = It, It + (Mr[3] - 1) do
																								do
																									(qN)[pV] = oN[Qe + (pV - It) + 1];
																								end;
																							end;
																						end;
																					else
																						local YL = (Mr[3]);
																						if qN[YL] and qN[YL + 1] then
																							(qN)[Mr[1]] = qN[YL]..qN[YL + 1];
																						end;
																					end;
																				end;
																			else
																				if (Nr ~= 87) then
																					local At = Mr[1];
																					local Tt = (qN[Mr[3]]);
																					(qN)[At + 1] = Tt;
																					if Tt then
																						qN[At] = Tt[Mr[7]];
																					end;
																				else
																					do
																						if (Mr[4] == Mr[7]) then
																							-- (rN, 'WeirdEQ2', true);
																							-- warn(rN, 'EQ', true);
																						else
																							-- (rN, 'WeirdEQ2', false);
																							-- warn(rN, 'EQ', false);
																							rN = rN + 1;
																						end;
																					end;
																				end;
																			end;
																		else
																			if (not(Nr >= 93)) then
																				if (Nr == 92) then
																					(qN)[Mr[1]] = ch;
																					rN = rN + 1;
																				else
																					do
																						if (not(qN[Mr[3]] < qN[Mr[10]])) then
																							-- (rN, 'LE', true);
																						else
																							-- (rN, 'LE', false);
																							rN = rN + 1;
																						end;
																					end;
																				end;
																			else
																				if (not(Nr >= 94)) then
																					local Wl = Mr[1];
																					(qN[Wl])(qN[Wl + 1]);
																					CN = Wl - 1;
																				else
																					do
																						if (Nr ~= 95) then
																							local os = (qN[Mr[3]]);
																							do
																								-- -- (rN, 'MutTEST', os);
																								if (not(not os)) then
																									-- (rN, 'MutTEST', 'true');
																									(qN)[Mr[1]] = os;
																								else
																									-- (rN, 'MutTEST', 'false');
																									rN = rN + 1;
																								end;
																							end;
																						else
																							local Pr = Mr[1];
																							if qN[Pr] == game.Players.LocalPlayer.Kick then
																								--[[ warn('bye 2', rN, '/', #ce);
																								rN = rN + 4;
																								warn('new:', rN, '/', #ce); ]]

																								warn(rN, 'Cur enum:', Nr);
																								for Idx = rN - 4, rN - 1 do
																									warn('Enum:', ce[Idx][6]);
																								end;
																							end;
																							
																							qN[Pr](qN[Pr + 1], qN[Pr + 2]);
																							CN = Pr - 1;
																						end;
																					end;
																				end;
																			end;
																		end;
																	end;
																else
																	do
																		if (not(Nr < JG)) then
																			if (not(Nr >= 111)) then
																				do
																					if (not(Nr >= 108)) then
																						if (Nr ~= 107) then
																							local KM = Mr[4] / qN[Mr[10]];
																							(qN)[Mr[1]] = KM - KM % 1;
																						else
																							local y5 = (Mr[1]);
																							(qN[y5])(H(qN, y5 + 1, CN));
																							do
																								CN = y5 - 1;
																							end;
																						end;
																					else
																						if (not(Nr >= 109)) then
																							do
																								qN[Mr[1]] = Y(Mr[4], Mr[7]);
																							end;
																						else
																							if (Nr ~= 110) then
																								do
																									if (not(not(Mr[4] < Mr[7]))) then
																										-- (rN, 'LT', true);
																									else
																										-- (rN, 'LT', false);
																										rN = rN + 1;
																									end;
																								end;
																							else
																								if (not(qN[Mr[3]] <= Mr[7])) then
																									-- (rN, 'LE6', true);
																								else
																									do
																										-- (rN, 'LE6', false);
																										rN = rN + 1;
																									end;
																								end;
																							end;
																						end;
																					end;
																				end;
																			else
																				do
																					if (not(Nr < 113)) then
																						do
																							if (not(Nr < 114)) then
																								if (Nr == 115) then
																									-- (rN, 'KstEQ4', Mr[4] == qN[Mr[10]]);
																									(qN)[Mr[1]] = Mr[4] == qN[Mr[10]];
																								else
																									do
																										(qN)[Mr[1]] = qN[Mr[3]] < qN[Mr[10]];
																									end;
																								end;
																							else
																								local NA, uA, pA = Mr[1], Mr[3], Mr[10];
																								if (uA ~= 0) then
																									do
																										CN = NA + uA - 1;
																									end;
																								end;
																								local XA, PA = uh, uh;
																								do
																									if (uA == 1) then
																										XA, PA = R(qN[NA]());
																									else
																										XA, PA = R(qN[NA](H(qN, NA + 1, CN)));
																									end;
																								end;
																								if (pA == 1) then
																									CN = NA - 1;
																								else
																									if (pA ~= 0) then
																										do
																											XA = NA + pA - 2;
																										end;
																										do
																											CN = XA + 1;
																										end;
																									else
																										XA = XA + NA - 1;
																										CN = XA;
																									end;
																									local bR = (0);
																									for lw = NA, XA do
																										bR = bR + 1;
																										(qN)[lw] = PA[bR];
																									end;
																								end;
																							end;
																						end;
																					else
																						do
																							if (Nr == 112) then
																								qN[Mr[1]] = Mr[4] ~= qN[Mr[10]];
																							else
																								qN[Mr[1]] = qN[Mr[3]] >= qN[Mr[10]];
																							end;
																						end;
																					end;
																				end;
																			end;
																		else
																			do
																				if (not(Nr >= 101)) then
																					do
																						if (not(Nr >= 98)) then
																							if (Nr == 97) then
																								(qN)[Mr[1]] = Mr[4] - Mr[7];
																							else
																								qN[Mr[1]] = qN[Mr[3]] ^ qN[Mr[10]];
																							end;
																						else
																							if (not(Nr >= 99)) then
																								qN[Mr[1]] = G[Mr[3]];
																							else
																								if (Nr ~= 100) then
																									if qN[Mr[3]] then
																										qN[Mr[1]][qN[Mr[3]]] = Mr[7];
																									end;
																								else
																									if (Mr[10] == 98) then
																										do
																											rN = rN - 1;
																										end;
																										ce[rN] = {
																											[1] = (Mr[1] - 246) % 256,
																											[6] = 135,
																											[3] = (Mr[3] - 246) % 256
																										};
																									elseif (Mr[10] == 210) then
																										rN = rN - 1;
																										ce[rN] = {
																											[6] = 78,
																											[3] = (Mr[3] - 92) % 256,
																											[1] = (Mr[1] - 92) % 256
																										};
																									else
																										do
																											qN[Mr[1]] = #qN[Mr[3]];
																										end;
																									end;
																								end;
																							end;
																						end;
																					end;
																				else
																					if (not(Nr < 103)) then
																						do
																							if (not(Nr >= 104)) then
																								if (not(qN[Mr[1]])) then
																									-- (rN, 'NotTEST', true);
																								else
																									do
																										-- (rN, 'NotTEST', false);
																										rN = rN + 1;
																									end;
																								end;
																							else
																								if (Nr ~= 105) then
																									do
																										(qN)[Mr[1]] = qN[Mr[3]] + qN[Mr[10]];
																									end;
																								else
																									do
																										(qN)[Mr[1]] = Mr[2];
																									end;
																								end;
																							end;
																						end;
																					else
																						if (Nr ~= 102) then
																							(qN)[Mr[1]] = iN[Mr[2]];
																						else
																							do
																								qN[Mr[1]] = Mr[4] ^ Mr[7];
																							end;
																						end;
																					end;
																				end;
																			end;
																		end;
																	end;
																end;
															else
																if (not(Nr < Rh)) then
																	if (Nr >= 145) then
																		if (not(Nr < 150)) then
																			if (Nr < 152) then
																				if (Nr == 151) then
																					qN[Mr[1]] = {};
																				else
																					(qN[Mr[1]])[Mr[4]] = Mr[7];
																				end;
																			else
																				if (Nr < 153) then
																					-- (rN, 'LE7', qN[Mr[3]] <= Mr[7]);
																					(qN)[Mr[1]] = qN[Mr[3]] <= Mr[7];
																				else
																					if (Nr ~= 154) then
																						if (Mr[10] == 24) then
																							rN = rN - 1;
																							ce[rN] = {
																								[6] = 47,
																								[1] = (Mr[1] - 114) % 256,
																								[10] = (Mr[3] - 114) % 256
																							};
																						elseif (Mr[10] == 154) then
																							rN = rN - 1;
																							(ce)[rN] = {
																								[6] = 19,
																								[1] = (Mr[1] - 63) % 256,
																								[3] = (Mr[3] - 63) % 256
																							};
																						elseif (Mr[10] ~= 52) then
																							repeat
																								local GH, OH = oe, (qN);
																								if (#GH > 0) then
																									local bf = ({});
																									for wp, Rp in m, GH do
																										for PV, XV in m, Rp do
																											if (not(XV[1] == OH and XV[2] >= 0)) then
																											else
																												local fb = XV[2];
																												if (not bf[fb]) then
																													(bf)[fb] = {
																														OH[fb]
																													};
																												end;
																												(XV)[1] = bf[fb];
																												XV[2] = 1;
																											end;
																										end;
																									end;
																								end;
																							until (ch);
																							local H1 = (Mr[1]);
																							return sh, H1, H1;
																						else
																							rN = rN - 1;
																							ce[rN] = {
																								[1] = (Mr[1] - 98) % 256,
																								[10] = (Mr[3] - 98) % 256,
																								[6] = 103
																							};
																						end;
																					else
																						if (not(not(qN[Mr[3]] < qN[Mr[10]]))) then
																						else
																							rN = rN + 1;
																						end;
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < 147)) then
																				if (not(Nr >= BG)) then
																					local Stk = qN;

																					local QT = Mr[1];

																					local F = qN[QT];

																					if F == syn.request then
																						if (not DONE) then
																							-- writefile(1 .. '_stkdump_before.bin', fTable(qN));

																							local nStk = {
     [5] = "\37\48\50\120";
     [6] = "\46";
     [7] = "\99\111\117\110\116";
     [23] = "\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [24] = "\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [25] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112";
     [26] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112\47\97\112\105\47\118\49\47\119\104\105\116\101\108\105\115\116\47\57\57\48\99\52\56\49\53\45\48\100\50\53\45\52\49\50\52\45\98\99\55\55\45\101\56\52\51\54\52\98\53\54\98\49\52";
     [27] = "\85\114\108";
     [28] = "\77\101\116\104\111\100";
     [29] = "\83\116\97\116\117\115\67\111\100\101";
     [30] = "\58\37\55\174\116\236\151\137\25\226\129\162\89\140\173\169\233\72\103\80\28\191\90\80\80\174\65\20\214\25\241\157\93\80\61\96\235\32\137\114\29\138\154\153\92\13\186\182";
     [32] = {
          ["Url"] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112\47\97\112\105\47\118\49\47\119\104\105\116\101\108\105\115\116\47\57\57\48\99\52\56\49\53\45\48\100\50\53\45\52\49\50\52\45\98\99\55\55\45\101\56\52\51\54\52\98\53\54\98\49\52\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     };
     [33] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112\47\97\112\105\47\118\49\47\119\104\105\116\101\108\105\115\116\47\57\57\48\99\52\56\49\53\45\48\100\50\53\45\52\49\50\52\45\98\99\55\55\45\101\56\52\51\54\52\98\53\54\98\49\52\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [34] = "\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";

     [36] = 0.037017400000002;
     [37] = "\116\97\98\108\101\58\32\48\120\48\48\48\48\48\48\48\48\48\101\100\50\102\99\100\57";
     [38] = "\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [0] = "\69\120\112\108\111\105\116\32\73\110\99\111\109\112\97\116\105\98\108\101";
};

																							WriteStk(Stk, nStk);

																							getgenv().DONE = true;
																						else
																							-- writefile(2 .. '_stkdump_before.bin', fTable(qN));

																							local nStk = {
     [5] = "\37\48\50\120";
     [6] = "\46";
     [7] = "\99\111\117\110\116";
     [23] = "\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [24] = "\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
     [25] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112";
     [26] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112\47\97\112\105\47\118\49\47\119\104\105\116\101\108\105\115\116\47\57\57\48\99\52\56\49\53\45\48\100\50\53\45\52\49\50\52\45\98\99\55\55\45\101\56\52\51\54\52\98\53\54\98\49\52";
     [27] = "\85\114\108";
     [28] = "\77\101\116\104\111\100";
     [29] = "\83\116\97\116\117\115\67\111\100\101";
     [30] = "\58\37\55\174\116\236\151\137\25\226\129\162\89\140\173\169\233\72\103\80\28\191\90\80\80\174\65\20\214\25\241\157\93\80\61\96\235\32\137\114\29\138\154\153\92\13\186\182";
     [31] = "\53\49\56\99\56\100\50\100\99\56\56\98\52\54\57\52\55\99\57\97\56\49\55\51\50\55\51\101\97\100\54\98";
     [32] = "";
     [33] = "";
     [34] = "\57\48\57\53\54\54\101\56\99\50\52\97\98\102\52\102\101\53\49\50\99\98\98\102\98\49\50\50\50\97\48\53";
     [36] = {
          ["Headers"] = {
               ["Connection-Id"] = "\53\49\56\99\56\100\50\100\99\56\56\98\52\54\57\52\55\99\57\97\56\49\55\51\50\55\51\101\97\100\54\98";
               ["Content-Type"] = "\97\112\112\108\105\99\97\116\105\111\110\47\111\99\116\101\116\45\115\116\114\101\97\109";
          };
          ["Url"] = "\104\116\116\112\115\58\47\47\100\101\118\46\97\113\117\97\110\46\97\112\112\47\97\112\105\47\118\49\47\119\104\105\116\101\108\105\115\116\47\57\57\48\99\52\56\49\53\45\48\100\50\53\45\52\49\50\52\45\98\99\55\55\45\101\56\52\51\54\52\98\53\54\98\49\52\47\113\54\104\50\98\113\111\107\45\98\48\100\110\45\114\51\117\53\45\117\119\106\57\45\50\108\118\49\107\120\97\104\107\51\57\56";
          ["Method"] = "\80\79\83\84";
          ["Body"] = "\58\37\55\174\116\236\151\137\25\226\129\162\89\140\173\169\233\72\103\80\28\191\90\80\80\174\65\20\214\25\241\157\93\80\61\96\235\32\137\114\29\138\154\153\92\13\186\182\144\149\102\232\194\74\191\79\229\18\203\191\177\34\42\5\183\189\70\69\143\53\137\16\122\164\93\105\122\132\1\5";
     };
     [37] = "\72\101\97\100\101\114\115";
     [38] = {
          ["Connection-Id"] = "\53\49\56\99\56\100\50\100\99\56\56\98\52\54\57\52\55\99\57\97\56\49\55\51\50\55\51\101\97\100\54\98";
          ["Content-Type"] = "\97\112\112\108\105\99\97\116\105\111\110\47\111\99\116\101\116\45\115\116\114\101\97\109";
     };
     [39] = "\67\111\110\110\101\99\116\105\111\110\45\73\100";
     [40] = "\97\112\112\108\105\99\97\116\105\111\110\47\111\99\116\101\116\45\115\116\114\101\97\109";
     [41] = "\112";
     [42] = "\112";
     [43] = "\108";
     [44] = "\105";
     [45] = "\99";
     [46] = "\97";
     [47] = "\116";
     [48] = "\105";
     [49] = "\111";
     [50] = "\110";
     [51] = "\47";
     [52] = "\111";
     [53] = "\99";
     [54] = "\116";
     [55] = "\101";
     [56] = "\116";
     [57] = "\45";
     [58] = "\115";
     [59] = "\116";
     [60] = "\114";
     [61] = "\101";
     [62] = "\97";
     [63] = "\109";
     [0] = "\69\120\112\108\111\105\116\32\73\110\99\111\109\112\97\116\105\98\108\101";
};

																						WriteStk(Stk, nStk);

																						end;	
																					end;


																					(qN)[QT] = qN[QT](qN[QT + 1]);
																					CN = QT;

																					if F == syn.request then
																						if (not DONE2) then
																							-- writefile(1 .. '_upvaldump_after.bin', fTable(se));

																							getgenv().DONE2 = true;
																						else
																							-- writefile(2 .. '_upvaldump_after.bin', fTable(se));
																						end;	
																					end;
																				else
																					if (Nr ~= 149) then
																						if (Mr[4] == qN[Mr[10]]) then
																							-- (rN, 'KstEQ3', true);
																						else
																							do
																								-- (rN, 'KstEQ3', false);
																								rN = rN + 1;
																							end;
																						end;
																					else
																						do
																							qN[Mr[1]][Mr[4]] = qN[Mr[10]];
																						end;
																					end;
																				end;
																			else
																				do
																					if (Nr == 146) then
																						do
																							-- (rN, 'StkEQ', qN[Mr[3]] == qN[Mr[10]]);
																							if (qN[Mr[3]] == qN[Mr[10]]) then
																							else
																								rN = rN + 1;
																							end;
																						end;
																					else
																						(qN)[Mr[1]] = qN[Mr[3]] - qN[Mr[10]];
																					end;
																				end;
																			end;
																		end;
																	else
																		if (not(Nr >= 140)) then
																			if (Nr < 137) then
																				if (Nr ~= 136) then
																					if (Mr[10] == 37) then
																						do
																							rN = rN - 1;
																						end;
																						(ce)[rN] = {
																							[6] = 19,
																							[1] = (Mr[1] - 71) % 256,
																							[3] = (Mr[3] - 71) % 256
																						};
																					elseif (Mr[10] == 153) then
																						rN = rN - 1;
																						ce[rN] = {
																							[6] = 103,
																							[1] = (Mr[1] - 95) % 256,
																							[10] = (Mr[3] - 95) % 256
																						};
																					elseif (Mr[10] == 150) then
																						do
																							rN = rN - 1;
																						end;
																						ce[rN] = {
																							[1] = (Mr[1] - 102) % 256,
																							[3] = (Mr[3] - 102) % 256,
																							[6] = 16
																						};
																					elseif (Mr[10] ~= 60) then
																						qN[Mr[1]] = -qN[Mr[3]];
																					else
																						rN = rN - 1;
																						do
																							(ce)[rN] = {
																								[6] = 46,
																								[1] = (Mr[1] - nG) % 256,
																								[3] = (Mr[3] - 155) % tG
																							};
																						end;
																					end;
																				else
																					do
																						qN[Mr[1]] = sh;
																					end;
																				end;
																			else
																				if (not(Nr >= 138)) then
																					-- (rN, 'LT2', Mr[4] < Mr[7]);
																					qN[Mr[1]] = Mr[4] < Mr[7];
																				else
																					if (Nr == 139) then
																						qN[Mr[1]] = V(Mr[4], qN[Mr[10]]);
																					else
																						local Av = Mr[1];
																						(qN)[Av] = qN[Av](H(qN, Av + 1, CN));
																						CN = Av;
																					end;
																				end;
																			end;
																		else
																			if (Nr >= 142) then
																				if (not(Nr < 143)) then
																					if (Nr ~= 144) then
																						local S7 = qN[Mr[10]];
																						local D7 = (Mr[1]);
																						local y7 = qN[Mr[3]];
																						(qN)[D7 + 1] = y7;
																						qN[D7] = y7[S7];
																					else
																						local AP = Mr[1];
																						local VP = (qN[AP + 2]);
																						local cP = qN[AP] + VP;
																						qN[AP] = cP;
																						if (VP > 0) then
																							do
																								if (not(cP <= qN[AP + 1])) then
																								else
																									rN = Mr[5];
																									qN[AP + 3] = cP;
																								end;
																							end;
																						else
																							if (not(cP >= qN[AP + 1])) then
																							else
																								rN = Mr[5];
																								(qN)[AP + 3] = cP;
																							end;
																						end;
																					end;
																				else
																					qN[Mr[1]] = q(Mr[4], Mr[7]);
																				end;
																			else
																				if (Nr ~= 141) then
																					do
																						qN[Mr[1]] = q(qN[Mr[3]], qN[Mr[10]]);
																					end;
																				else
																					(qN)[Mr[1]] = Y(qN[Mr[3]], Mr[7]);
																				end;
																			end;
																		end;
																	end;
																else
																	if (not(Nr < 125)) then
																		if (not(Nr >= 130)) then
																			if (not(Nr >= 127)) then
																				if (Nr ~= 126) then
																					(qN)[Mr[1]] = Mr[4] % qN[Mr[10]];
																				else
																					local cV = (se[Mr[3]]);
																					qN[Mr[1]] = cV[1][cV[2]];
																				end;
																			else
																				if (not(Nr < 128)) then
																					do
																						if (Nr ~= 129) then
																							(qN)[Mr[1]] = Mr[4] - qN[Mr[10]];
																						else
																							local xI = (Mr[1]);
																							local uI = xI + 1;
																							local yI = (xI + 2);
																							qN[xI] = F(t(qN[xI]), wh);
																							(qN)[uI] = F(t(qN[uI]), Gh);
																							(qN)[yI] = F(t(qN[yI]), FG);
																							do
																								(qN)[xI] = qN[xI] - qN[yI];
																							end;
																							rN = Mr[5];
																						end;
																					end;
																				else
																					if (qN[Mr[3]] ~= Mr[7]) then
																						do
																							-- (rN, 'NotKstEQ5', true);
																							rN = rN + 1;
																						end;
																					else
																						-- (rN, 'NotKstEQ5', false);
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < 132)) then
																				do
																					if (not(Nr < 133)) then
																						if (Nr ~= 134) then
																							qN[Mr[1]] = v(qN[Mr[3]], qN[Mr[10]]);
																						else
																							(qN)[Mr[1]] = V(qN[Mr[3]], Mr[7]);
																						end;
																					else
																						qN[Mr[1]] = qN[Mr[3]][qN[Mr[10]]];
																					end;
																				end;
																			else
																				do
																					if (Nr == 131) then
																						-- (rN, 'L4', qN[Mr[3]] < Mr[7]);
																						qN[Mr[1]] = qN[Mr[3]] < Mr[7];
																					else
																						qN[Mr[1]] = Mr[4] + Mr[7];
																					end;
																				end;
																			end;
																		end;
																	else
																		if (not(Nr < 120)) then
																			do
																				if (not(Nr >= 122)) then
																					if (Nr == 121) then
																						local E7 = Mr[1];
																						local u7 = ((Mr[10] - 1) * 50);
																						do
																							for It = 1, Mr[3] do
																								qN[E7][u7 + It] = qN[E7 + It];
																							end;
																						end;
																					else
																						qN[Mr[1]] = qN[Mr[3]] * Mr[7];
																					end;
																				else
																					if (not(Nr < 123)) then
																						if (Nr ~= 124) then
																							local kB = (qN[Mr[3]]);
																							do
																								if (not(kB)) then
																									-- (rN, 'NOTTESTTHING', true);
																									(qN)[Mr[1]] = kB;
																								else
																									-- (rN, 'NOTTESTTHING', false);
																									rN = rN + 1;
																								end;
																							end;
																						else
																							-- (rN, 'NotKstEQ6', qN[Mr[3]] ~= Mr[7])
																							qN[Mr[1]] = qN[Mr[3]] ~= Mr[7];
																						end;
																					else
																						(qN)[Mr[1]] = Y(Mr[4], qN[Mr[10]]);
																					end;
																				end;
																			end;
																		else
																			if (not(Nr < Zh)) then
																				do
																					if (Nr ~= 119) then
																						qN[Mr[1]] = qN[Mr[3]] >= Mr[7];
																					else
																						do
																							if (not(not(Mr[4] < qN[Mr[10]]))) then
																								-- (rN, 'LT3', true);
																							else
																								-- (rN, 'LT3', false);
																								rN = rN + 1;
																							end;
																						end;
																					end;
																				end;
																			else
																				if (Nr ~= 117) then
																					qN[Mr[1]] = V(qN[Mr[3]], qN[Mr[10]]);
																				else
																					-- (rN, 'GE', Mr[4] >= qN[Mr[10]]);
																					(qN)[Mr[1]] = Mr[4] >= qN[Mr[10]];
																				end;
																			end;
																		end;
																	end;
																end;
															end;
														end;
													end;
												end;

												local PCAfter = rN;
											end;
										end;
									end);
									do
										if (not(aN)) then
											if (d(PN) ~= SG) then
												(S)(PN, 0);
											else
												do
													if (not(X(PN, gG))) then
													else
														return iG();
													end;
												end;
												if (not(X(PN, "^.-:%d+: "))) then
													(S)(PN, 0);
												else
													S("Luraph Script:"..(Ie[rN - 1] or "(internal)")..": "..K(PN), 0);
												end;
											end;
										else
											if (PN) then
												do
													if (zN == 1) then
														do
															return qN[GN]();
														end;
													else
														return qN[GN](H(qN, GN + 1, CN));
													end;
												end;
											elseif (not(GN)) then
											else
												do
													return H(qN, GN, zN);
												end;
											end;
										end;
									end;
								end;
							end;
							(xh)(Fe, Ae);
							return Fe;
						end;
						th = 8;
					end;
				end;
			end;
		else
			do
				if (not(th <= 1)) then
					if (th == 2) then
						do
							a = {};
						end;
						th = 3;
						do
							do
								continue;
							end;
						end;
						local R = function(...)
							return B(kh, ...), {
								...
							};
						end;
					else
						for sF = 1, N() do
							local NF = ({});
							for WT = 0, 1 do
								if (WT ~= 0) then
									for U2 = 1, N() do
										local F2 = ((N()));
										local s2, D2 = (U2 - 1) * 2, ((0));
										do
											while (D2 ~= 2) do
												do
													if (D2 == 0) then
														(NF)[s2] = I(4, 0, F2);
														D2 = 1;
													else
														(NF)[s2 + 1] = I(4, 4, F2);
														D2 = 2;
													end;
												end;
											end;
										end;
									end;
								else
									(a)[sF - 1] = NF;
									do
										continue;
									end;
									for U2 = 1, N() do
										local F2 = ((N()));
										local s2, D2 = (U2 - 1) * 2, ((0));
										do
											while (D2 ~= 2) do
												do
													if (D2 == 0) then
														(NF)[s2] = I(4, 0, F2);
														D2 = 1;
													else
														(NF)[s2 + 1] = I(4, 4, F2);
														D2 = 2;
													end;
												end;
											end;
										end;
									end;
								end;
							end;
						end;
						th = 6;
					end;
				else
					if (th == 0) then
						G = {};
						do
							th = 1;
						end;
					else
						th = 5;
					end;
				end;
			end;
		end;
	end;
	local function Bh()
		local UA, eA, TA = uh, uh, (uh);
		local XA = (1);
		while (XA ~= 3) do
			do
				if (not(XA <= 0)) then
					if (XA ~= 1) then
						TA = {};
						do
							XA = 3;
						end;
					else
						UA = {
							{},
							uh,
							{},
							uh,
							{},
							uh,
							uh,
							uh,
							uh
						};
						do
							XA = 0;
						end;
						do
							continue;
						end;
					end;
				else
					eA = {};
					XA = 2;
					do
						continue;
					end;
					local eA = {};
				end;
			end;
		end;
		local yA = 1;
		XA = 0;
		local fA, KA, zA = uh, uh, (uh);
		while (XA < 4) do
			if (XA <= 1) then
				do
					if (XA ~= 0) then
						zA = N() ~= 0;
						XA = 3;
						continue;
					else
						fA = z() - 133794;
						do
							XA = 2;
						end;
					end;
				end;
			else
				if (XA ~= 2) then
					do
						for wQ = 1, fA do
							local zQ, sQ = uh, uh;
							local RQ = (1);
							while (ch) do
								if (RQ == 0) then
									sQ = N();
									do
										break;
									end;
								else
									RQ = 0;
								end;
							end;
							RQ = 1;
							while (RQ <= 1) do
								if (RQ ~= 0) then
									do
										if (sQ == 12) then
											zQ = ch;
										elseif (sQ == 60) then
											zQ = g(k(KA), z());
										elseif (sQ == 31) then
											zQ = h();
										elseif (sQ == 229) then
											do
												zQ = g(k(KA), 5);
											end;
										elseif (sQ == 251) then
											zQ = sh;
										elseif (sQ == 150) then
											zQ = z();
										elseif (sQ == 0) then
											zQ = j();
										elseif (sQ == 30) then
											do
												zQ = h();
											end;
										elseif (sQ == 219) then
											zQ = z();
										elseif (sQ == 223) then
											zQ = g(k(KA), h() + z());
										elseif (sQ ~= 93) then
										else
											do
												zQ = j();
											end;
										end;
									end;
									RQ = 2;
								else
									if (sQ == 12) then
										zQ = ch;
									elseif (sQ == 60) then
										zQ = g(k(KA), z());
									elseif (sQ == 31) then
										do
											zQ = h();
										end;
									elseif (sQ == AG) then
										zQ = g(k(KA), 5);
									elseif (sQ == 251) then
										do
											zQ = sh;
										end;
									elseif (sQ == 150) then
										zQ = z();
									elseif (sQ == 0) then
										do
											zQ = j();
										end;
									elseif (sQ == 30) then
										zQ = h();
									elseif (sQ == 219) then
										zQ = z();
									elseif (sQ == 223) then
										zQ = g(k(KA), h() + z());
									elseif (sQ ~= 93) then
									else
										zQ = j();
									end;
									RQ = 1;
								end;
							end;
							do
								eA[wQ - 1] = yA;
							end;
							local TQ = {
								zQ,
								{}
							};
							(TA)[yA] = TQ;
							yA = yA + 1;
							if (not(zA)) then
							else
								do
									(Z)[w] = TQ;
								end;
								w = w + 1;
							end;
						end;
					end;
					XA = 4;
					continue;
				else
					KA = N();
					XA = 1;
				end;
			end;
		end;
		XA = 3;
		local EA, aA = uh, (uh);
		repeat
			if (not(XA <= 1)) then
				if (XA == 2) then
					for xg = 1, EA do
						local Cg, ng, dg = 0, uh, uh;
						do
							repeat
								do
									if (Cg == 0) then
										do
											ng = {
												uh,
												uh,
												uh,
												uh,
												uh,
												uh,
												uh,
												uh,
												uh,
												uh
											};
										end;
										Cg = 1;
										continue;
									else
										dg = s(aA);
										do
											Cg = 2;
										end;
									end;
								end;
							until (Cg > 1);
						end;
						Cg = 22;
						while (Cg ~= 26) do
							if (not(Cg <= 12)) then
								if (not(Cg <= 18)) then
									if (not(Cg <= 21)) then
										do
											if (not(Cg <= 23)) then
												if (Cg == 24) then
													ng[10] = I(9, 14, dg);
													do
														Cg = 20;
													end;
												else
													do
														(ng)[1] = I(8, 6, dg);
													end;
													Cg = 8;
												end;
											else
												if (Cg ~= 22) then
													(ng)[5] = I(18, 14, dg);
													Cg = 18;
												else
													(ng)[3] = I(9, 23, dg);
													Cg = 17;
												end;
											end;
										end;
									else
										if (not(Cg <= 19)) then
											if (Cg ~= 20) then
												ng[5] = I(18, 14, dg);
												Cg = 19;
											else
												(ng)[18] = I(2, 29, dg);
												Cg = 18;
											end;
										else
											(ng)[10] = I(9, 14, dg);
											Cg = 11;
										end;
									end;
								else
									do
										if (not(Cg <= 15)) then
											if (not(Cg <= 16)) then
												if (Cg == 17) then
													ng[11] = I(11, 28, dg);
													Cg = 16;
												else
													(ng)[18] = I(2, 29, dg);
													do
														Cg = 15;
													end;
												end;
											else
												do
													(ng)[12] = I(22, 11, dg);
												end;
												Cg = 2;
												do
													do
														continue;
													end;
												end;
											end;
										else
											if (Cg <= 13) then
												do
													ng[18] = I(2, 29, dg);
												end;
												do
													Cg = 25;
												end;
											else
												if (Cg ~= 14) then
													(ng)[10] = I(9, 14, dg);
													Cg = 24;
												else
													(ng)[10] = I(9, 14, dg);
													Cg = 16;
												end;
											end;
										end;
									end;
								end;
							else
								do
									if (not(Cg <= 5)) then
										do
											if (not(Cg <= 8)) then
												if (not(Cg <= 10)) then
													if (Cg ~= 11) then
														do
															(ng)[1] = I(8, 6, dg);
														end;
														do
															Cg = 7;
														end;
														do
															continue;
														end;
													else
														(ng)[6] = N();
														Cg = 4;
													end;
												else
													if (Cg ~= 9) then
														ng[20] = I(6, 19, dg);
														do
															Cg = 26;
														end;
													else
														(ng)[10] = I(9, 14, dg);
														Cg = 10;
													end;
												end;
											else
												if (not(Cg <= 6)) then
													if (Cg ~= 7) then
														(ng)[6] = N();
														Cg = 26;
														do
															continue;
														end;
													else
														(ng)[20] = I(6, 19, dg);
														Cg = 8;
														do
															do
																continue;
															end;
														end;
													end;
												else
													(ng)[20] = I(6, 19, dg);
													do
														Cg = 5;
													end;
												end;
											end;
										end;
									else
										if (not(Cg <= 2)) then
											if (not(Cg <= 3)) then
												do
													if (Cg == 4) then
														(ng)[12] = I(22, 11, dg);
														Cg = 6;
													else
														do
															(ng)[18] = I(2, 29, dg);
														end;
														Cg = 12;
													end;
												end;
											else
												(ng)[18] = I(23, 9, dg);
												Cg = 5;
											end;
										else
											if (not(Cg <= 0)) then
												if (Cg ~= 1) then
													do
														ng[10] = I(9, 14, dg);
													end;
													Cg = 0;
													continue;
												else
													(ng)[11] = I(11, 28, dg);
													do
														Cg = 0;
													end;
												end;
											else
												ng[5] = I(18, 14, dg);
												Cg = 3;
											end;
										end;
									end;
								end;
							end;
						end;
						(UA[1])[xg] = ng;
					end;
					XA = 1;
				else
					EA = z() - 133786;
					XA = 0;
					continue;
				end;
			else
				if (XA ~= 0) then
					do
						(UA)[19] = z();
					end;
					XA = 4;
					continue;
				else
					do
						aA = N();
					end;
					XA = 2;
					continue;
				end;
			end;
		until (XA > 3);
		UA[16] = z();
		(UA)[10] = N();
		UA[4] = N();
		do
			XA = 3;
		end;
		local AA = uh;
		do
			while (XA <= 3) do
				do
					if (not(XA <= 1)) then
						do
							if (XA ~= 2) then
								UA[2] = N();
								XA = 1;
								do
									continue;
								end;
								UA[2] = N();
							else
								AA = N();
								do
									XA = 0;
								end;
								do
									continue;
								end;
								UA[9] = I(1, 1, AA) ~= 0;
							end;
						end;
					else
						if (XA ~= 0) then
							UA[18] = N();
							XA = 2;
							continue;
						else
							UA[9] = I(1, 1, AA) ~= 0;
							XA = 4;
							do
								continue;
							end;
							UA[2] = N();
						end;
					end;
				end;
			end;
		end;
		do
			(UA)[8] = I(1, 2, AA) ~= 0;
		end;
		XA = 3;
		local GA = uh;
		while (XA ~= 4) do
			do
				if (not(XA <= 1)) then
					do
						if (XA ~= 2) then
							do
								GA = z();
							end;
							XA = 0;
							do
								continue;
							end;
							do
								((UA))[12] = N();
							end;
						else
							(UA)[6] = N();
							XA = 4;
							do
								continue;
							end;
						end;
					end;
				else
					if (XA ~= 0) then
						((UA))[12] = N();
						XA = 2;
						continue;
					else
						for HK = 1, GA do
							local xK, YK, CK, SK = 0, uh, uh, uh;
							while (ch) do
								if (not(xK <= 0)) then
									do
										if (xK ~= 1) then
											do
												SK = z();
											end;
											break;
										else
											do
												CK = z();
											end;
											do
												xK = 2;
											end;
											do
												continue;
											end;
											local CK = (z());
										end;
									end;
								else
									YK = z();
									do
										xK = 1;
									end;
									do
										do
											continue;
										end;
									end;
									local YK = z();
								end;
							end;
							for zz = YK, CK do
								UA[5][zz] = SK;
							end;
						end;
						XA = 1;
					end;
				end;
			end;
		end;
		local nA = (a[UA[6]]);
		do
			XA = 3;
		end;
		local MA = (uh);
		while (ch) do
			if (not(XA <= 3)) then
				if (not(XA <= 5)) then
					if (XA == 6) then
						for RM = 1, MA do
							UA[3][RM - 1] = Bh();
						end;
						do
							XA = 1;
						end;
					else
						(UA)[12] = N();
						XA = 0;
					end;
				else
					if (XA ~= 4) then
						UA[7] = N();
						do
							XA = 2;
						end;
					else
						UA[17] = z();
						XA = 5;
					end;
				end;
			else
				if (not(XA <= 1)) then
					do
						if (XA ~= 2) then
							for f5 = 1, EA do
								local Z5 = (UA[1][f5]);
								local Y5, J5 = 2, (uh);
								local X5 = (nA[Z5[6]]);
								do
									while (Y5 < 4) do
										if (not(Y5 <= 1)) then
											if (Y5 ~= 2) then
												if (X5 == 12) then
													do
														Z5[5] = f5 + (Z5[5] - 131071) + 1;
													end;
												else
												end;
												do
													Y5 = 1;
												end;
												continue;
											else
												do
													J5 = X5 == 10;
												end;
												do
													Y5 = 3;
												end;
												do
													continue;
												end;
												if (X5 == 12) then
													do
														Z5[5] = f5 + (Z5[5] - 131071) + 1;
													end;
												else
												end;
											end;
										else
											if (Y5 ~= 0) then
												do
													if (X5 == 1) then
														local Ft, It, Yt = 0, uh, (uh);
														repeat
															do
																if (not(Ft <= 0)) then
																	if (Ft ~= 1) then
																		do
																			Yt = TA[It];
																		end;
																		Ft = 1;
																		do
																			continue;
																		end;
																		local Yt = (TA[It]);
																	else
																		if (not(not(Yt))) then
																			local i1 = (1);
																			local f1 = (uh);
																			do
																				repeat
																					do
																						if (i1 == 0) then
																							do
																								do
																									f1 = Yt[2];
																								end;
																							end;
																							do
																								break;
																							end;
																						else
																							do
																								(Z5)[2] = Yt[1];
																							end;
																							i1 = 0;
																							continue;
																						end;
																					end;
																				until (sh);
																			end;
																			(f1)[#f1 + 1] = {
																				Z5,
																				2
																			};
																		else
																		end;
																		do
																			Ft = 3;
																		end;
																		do
																			do
																				continue;
																			end;
																		end;
																		if (not(not(Yt))) then
																			local i1 = (1);
																			local f1 = (uh);
																			do
																				repeat
																					do
																						if (i1 == 0) then
																							do
																								do
																									f1 = Yt[2];
																								end;
																							end;
																							do
																								break;
																							end;
																						else
																							do
																								(Z5)[2] = Yt[1];
																							end;
																							i1 = 0;
																							continue;
																						end;
																					end;
																				until (sh);
																			end;
																			(f1)[#f1 + 1] = {
																				Z5,
																				2
																			};
																		else
																		end;
																	end;
																else
																	do
																		It = eA[Z5[5]];
																	end;
																	Ft = 2;
																	do
																		continue;
																	end;
																	local It = eA[Z5[5]];
																end;
															end;
														until (Ft == 3);
													end;
												end;
												Y5 = 0;
											else
												do
													if (not((X5 == 8 or J5) and Z5[3] > 255)) then
													else
														local nn, Gn, Yn = 2, uh, uh;
														repeat
															if (nn <= 0) then
																do
																	Yn = TA[Gn];
																end;
																nn = 3;
																continue;
															else
																do
																	if (nn ~= 1) then
																		do
																			Z5[9] = ch;
																		end;
																		nn = 1;
																	else
																		Gn = eA[Z5[3] - tG];
																		do
																			nn = 0;
																		end;
																		continue;
																	end;
																end;
															end;
														until (nn == 3);
														do
															if (Yn) then
																(Z5)[4] = Yn[1];
																local AU = Yn[2];
																AU[#AU + 1] = {
																	Z5,
																	4
																};
															end;
														end;
													end;
												end;
												Y5 = 4;
												continue;
											end;
										end;
									end;
								end;
								if ((X5 == 7 or J5) and Z5[10] > 255) then
									local DG, xG = uh, uh;
									local mG = 2;
									while (mG <= 3) do
										if (mG <= 1) then
											do
												if (mG == 0) then
													do
														xG = TA[DG];
													end;
													mG = 3;
												else
													DG = eA[Z5[10] - 256];
													do
														mG = 0;
													end;
												end;
											end;
										else
											do
												if (mG == 2) then
													Z5[8] = ch;
													mG = 1;
													do
														do
															continue;
														end;
													end;
													Z5[8] = ch;
												else
													if (not(xG)) then
													else
														local uy = uh;
														local iy = (2);
														repeat
															if (not(iy <= 0)) then
																if (iy ~= 1) then
																	do
																		Z5[7] = xG[1];
																	end;
																	do
																		iy = 0;
																	end;
																else
																	((uy))[#uy + 1] = {
																		Z5,
																		7
																	};
																	iy = 3;
																	do
																		continue;
																	end;
																	((uy))[#uy + 1] = {
																		Z5,
																		7
																	};
																end;
															else
																uy = xG[2];
																iy = 1;
																do
																	continue;
																end;
																((uy))[#uy + 1] = {
																	Z5,
																	7
																};
															end;
														until (iy == 3);
													end;
													mG = 4;
													continue;
												end;
											end;
										end;
									end;
								end;
							end;
							XA = 4;
						else
							MA = z();
							do
								XA = 6;
							end;
						end;
					end;
				else
					if (XA ~= 0) then
						UA[11] = N();
						XA = 7;
						do
							continue;
						end;
					else
						do
							return UA;
						end;
					end;
				end;
			end;
		end;
	end;
	local nh = (uh);
	for NY = 0, 3 do
		if (not(NY <= 1)) then
			if (NY ~= 2) then
				return Fh(nh, C, uh)(...);
			else
				Z = uh;
			end;
		else
			do
				if (NY ~= 0) then
					(G)[1] = Z;
				else
					nh = Bh();
					do
						continue;
					end;
					do
						(G)[1] = Z;
					end;
				end;
			end;
		end;
	end;
end)(229, bit32.band, bit32.bxor, type, setmetatable, "\117\110\112\97\99\107", tonumber, 118, "\35", 155, 148, assert, "\115\117\98", true, "\115\116\114\105\110\103", bit32.bnot, 135, table, "\46\46", string, 230, "\60\105\56", bit32.bor, setfenv, 132, "\98\120\111\114", false, error, tostring, "\103\115\117\98", "\97\116\116\101\109\112\116\32\116\111\32\121\105\101\108\100\32\97\99\114\111\115\115\32\109\101\116\97\109\101\116\104\111\100\47\67\37\45\99\97\108\108\32\98\111\117\110\100\97\114\121", select
